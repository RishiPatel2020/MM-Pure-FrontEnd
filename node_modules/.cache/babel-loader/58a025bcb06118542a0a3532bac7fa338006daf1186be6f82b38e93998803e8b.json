{"ast":null,"code":"var _jsxFileName = \"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/PickMeals/PickMeals.js\",\n  _s = $RefreshSig$();\n/**\n *  For now can look in csv file for meal data based on zip code entered\n *  Scaling: might need API call to search meal info based on given zip code\n */\n\nimport StripeBackend from \"../../Service/StripeBackend\";\nimpotr;\nimport Loading from \"../../Service/Loading\";\nimport SignUpPopUp from \"../NavBar/SignUpPopUp/SignUpPopUp\";\nimport LogInPopUP from \"../NavBar/LogInPopUp/LogInPopUp\";\nimport userSession from \"../../Service/userSession\";\nimport PopUp from \"../../SharedComponents/PopUp/PopUp\";\nimport \"./PickMeals.css\";\nimport { useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport ScrollTop from \"../../Service/ScrollTop\";\nimport MealData from \"../../Service/MealData\";\nimport { logDOM } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PickMeals = _ref => {\n  _s();\n  let {\n    zipCode,\n    cart,\n    setCart,\n    mealNumbers,\n    setMealNumbers,\n    setResetOrderPageInfo,\n    numMealsSelected,\n    setNumMealsSelected,\n    setLogIn,\n    numMeals,\n    cartPrice,\n    setCartPrice\n  } = _ref;\n  const STRIPE_KEY = \"pk_test_51MLGUDLxe44udBspRQVfTcgFGVZRI6NRIlrfX4lexUptlrYTJjsqfJZFBeDrKXdyOCiJVVQKcD88WAQDsNPVWZ9b00bKBn0FaU\";\n  // logic to make request to backend with unique token id and backend will charge money thru stripe\n  const total = \"Total: $\" + cartPrice;\n  const [stripeToken, setStripeToken] = useState(null);\n  const onToken = token => {\n    // here we can collect shipping info..\n    setStripeToken(token);\n    console.log(\"TOKEN::: \" + JSON.stringify(token));\n  };\n  useEffect(() => {\n    const makeRequest = () => {\n      StripeBackend.requestToServer(stripeToken, cartPrice * 100, setSuccessBody, setSuccessPopUp).then(res => {\n        // empty token from previous attempt\n        setStripeToken(null);\n        if (res.status === 206) {\n          // Payment failed\n          setSuccessBody(res.data);\n          // let user view ^^ for 2 secs then close pop up, reopen payment pop up\n          setTimeout(() => {\n            setSuccessPopUp(false);\n            document.getElementById(\"hiddenPaymentButton\").click();\n          }, 2000);\n        } else {\n          // Successful payment\n          setSuccessBody(\"Successful Payment!\");\n          setTimeout(() => {\n            setSuccessPopUp(false);\n\n            // SUCCESS; RESET: cart, numMealsSelected, mealNumbers\n            setCart([]);\n            setNumMealsSelected(0);\n            for (let index = 0; index < mealNumbers.length; index++) {\n              mealNumbers[index] = 0;\n            }\n          }, 2000);\n        }\n      }).catch(error => {\n        setSuccessPopUp(true);\n        setSuccessBody(\"\" + error);\n        setTimeout(() => {\n          setSuccessPopUp(false);\n          document.getElementById(\"hiddenPaymentButton\").click();\n        }, 3000);\n      });\n    };\n\n    // const makeRequest = async () => {\n    //   try {\n    //     const res = await axios.post(\n    //       \"http://localhost:5001/api/checkout/payment\",\n    //       {\n    //         tokenId: stripeToken.id,\n    //         // pass right amt and correct meal info\n    //         amount: cartPrice * 100,\n    //         email: stripeToken.email,\n    //       }\n    //     );\n    //     // Token has been utilized, so set it to null\n    //     setStripeToken(null);\n    //   } catch (err) {\n    //     // setSuccessPopUp(true);\n    //     // setSuccessBody(\"\" + err);\n    //     // setTimeout(() => {\n    //     //   setSuccessPopUp(false);\n    //     //   document.getElementById(\"hiddenPaymentButton\").click();\n    //     // }, 3000);\n    //   }\n    // };\n    stripeToken && makeRequest();\n  }, [stripeToken]);\n\n  // so we can go back to orderPage\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log(\"ZIPCODE ON PM RENDERED::: \" + zipCode);\n    // if zipCode not provided, go back to order page\n    if (zipCode.length === 0) {\n      console.log(\"NO ZIPCODE; GO BACK TO ORDER AND RESET EVERYTHING\");\n      setResetOrderPageInfo(2); // if no zip code; go back to order page and have user fill out all the fields\n      navigate(\"/order\");\n    } else {\n      // scroll up only once when user arrives on this page\n      ScrollTop.scrollUp();\n      if (mealNumbers.length === 0) {\n        setMealNumbers(new Array(data.length).fill(0));\n        console.log(\"RESETTING CART\");\n        // should do this in case of payment success\n      }\n    }\n  }, []);\n  const data = MealData.getMeals();\n\n  // pop up to show description/ingridents to users\n  const [show, setShow] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [mealSelected, setMealSelected] = useState(\"\");\n\n  // What if user wants to reset freq, zipcode, etc...?? => we let user go back to OrderPage\n  const backToOrderPage = () => {\n    setCart([]);\n    setMealNumbers([]);\n    setResetOrderPageInfo(2); // reset everything in orderPage\n    console.log(\"<== BACK BUTTON CLICKED...\");\n    navigate(\"/order\");\n  };\n\n  // Handles PopUp display\n  const handleDisplay = (description, mealName) => {\n    setDescription(description);\n    setMealSelected(mealName);\n    setShow(true);\n  };\n\n  // closes description pop up when user closes it\n  const handleClose = () => {\n    setDescription(\"\");\n    setMealSelected(\"\");\n    setShow(false);\n  };\n\n  /**\n   * @Goal ADD item to cart && increment quantity by 1\n   * @param idNum of item to be added\n   * 1. Increment quantity in mealNumbers at index \"id\"\n   * 2. Update cart by setCart()\n   */\n\n  const add = idNum => {\n    setNumMealsSelected(numMealsSelected => numMealsSelected + 1);\n    // will have to add PRICE\n    const addToCart = {\n      id: idNum,\n      mealName: data[idNum].mealName,\n      description: data[idNum].description,\n      price: data[idNum].price\n    };\n    const tempArray = [];\n    if (cart.length === 0) {\n      // cart is empty\n      tempArray.push(addToCart);\n      setCart(tempArray);\n    } else {\n      // cart is NOT empty; 2 cases: idNum IS in cart OR NOT in the cart\n\n      // don't wanna add duplicate items\n      let found = false;\n      cart.forEach(element => {\n        if (element.id === idNum) {\n          found = true;\n        }\n        tempArray.push(element);\n      });\n\n      // adding item first time\n      if (!found) {\n        tempArray.push(addToCart);\n      }\n      setCart(tempArray); // Update cart to display correct items in cart\n    }\n\n    mealNumbers[idNum]++; // increment quantity in mealNumbers at index \"idNum\"\n    const newAr = [];\n    mealNumbers.map(item => {\n      newAr.push(item);\n    });\n    setMealNumbers(newAr); // Update mealNumbers to display correct quantity numbers in cart AND pickMeals page\n  };\n\n  /**\n   * @Goal REMOVE item from cart && decrement quantity by 1\n   * @param id of item to be removed/reduced\n   * 1. Decrement quantity in mealNumbers at index \"idNum\"\n   * 2. Update cart by setCart()\n   */\n  const remove = id => {\n    // CANNOT have quantity < 0\n    if (mealNumbers[id] > 0) {\n      setNumMealsSelected(numMealsSelected => numMealsSelected - 1);\n      mealNumbers[id]--; // decrement quantity in mealNumbers at index \"id\"\n      const newAr = [];\n      mealNumbers.map(item => {\n        newAr.push(item);\n      });\n      setMealNumbers(newAr); // update mealNumbers\n\n      if (mealNumbers[id] === 0) {\n        // if item is reduced to 0 in cart, cart should be updated so we don't have an item in cart whose quantity = 0\n        const tempCart = [];\n        cart.forEach(element => {\n          if (element.id !== id) {\n            tempCart.push(element);\n          }\n        });\n        setCart(tempCart);\n      }\n    }\n  };\n\n  // log in warnin\n  const [displayPopUp, setDisplayPopUp] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [displayEnoughPopUp, setDisplayEnoughPopUp] = useState(false);\n  const [titleEnough, setTitleEnough] = useState(\"\");\n  const [bodyEnough, setBodyEnough] = useState(\"\");\n  {\n    /* remove this after stripe */\n  }\n  const [successPopUp, setSuccessPopUp] = useState(false);\n  const [successTitle, setSuccessTitle] = useState(\"\");\n  const [successBody, setSuccessBody] = useState(\"\");\n\n  /**\n   * send Data to DB for DA purporses\n   * STRIP INTEGRATION\n   */\n  const handleCheckOut = () => {\n    if (numMeals === \"12+ Meals\" && numMealsSelected < 12) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select at least 12 meals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this));\n      setDisplayEnoughPopUp(true);\n    } else if (parseInt(numMeals[0]) > numMealsSelected) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Select at least \", numMeals[0], \" meals\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }, this));\n      setDisplayEnoughPopUp(true);\n    } else if (!userSession.isLoggedIn()) {\n      setTitle(\"LogIn/SignUp\");\n      setBody( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container align-items-center d-flex justify-content-center\",\n        style: {\n          fontFamily: \"Signika\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            padding: \"20px\"\n          },\n          className: \"rounded\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputEmail1\",\n                className: \"mb-4\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"lead\",\n                  children: \"Log in or Sign Up to continue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container text-center mb-4\",\n            children: /*#__PURE__*/_jsxDEV(LogInPopUP, {\n              style: {\n                buttonColor: \"secondary\",\n                textColor: \"white\"\n              },\n              setLogIn: setLogIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container text-center\",\n            children: /*#__PURE__*/_jsxDEV(SignUpPopUp, {\n              style: {\n                buttonColor: \"secondary\",\n                textColor: \"white\"\n              },\n              setLogIn: setLogIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this));\n      setDisplayPopUp(true);\n    } else {\n      // STRIPE API CALL TO CREATE CHARGE\n      setSuccessTitle(\"GO TO STRIPE\");\n      setSuccessBody( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You can proceed to stripe checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 22\n      }, this));\n      setSuccessPopUp(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"justify-content-center backButtonContainer\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        className: \"position-fixed backButton\",\n        onClick: () => backToOrderPage(),\n        style: {\n          fontFamily: \"Signika\",\n          color: \"white\"\n        },\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        fontFamily: \"Signika\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"text-dark my-4 customCss\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          style: {\n            marginTop: \"66px\",\n            marginBottom: \"32px\"\n          },\n          xs: \"auto\",\n          children: [data.map(item => {\n            const {\n              id,\n              img,\n              mealName,\n              description,\n              price\n            } = item;\n            return /*#__PURE__*/_jsxDEV(Col, {\n              className: \"p-3 spacesBetweenBoxes\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: img,\n                  className: \"img-fluid imageAdjustment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"titleAdjustment\",\n                  children: mealName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"del\", {\n                    className: \"mx-2\",\n                    children: \"$15.99\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 23\n                  }, this), \"$\", price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  onClick: () => handleDisplay(description, mealName),\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-light descriptionAdjustment\",\n                    children: \"Description/Ingridients\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"light\",\n                  onClick: () => remove(id),\n                  className: \"buttonAdjustment\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"letterAdjustment\",\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"amountAdjustment\",\n                  children: mealNumbers[id]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"light\",\n                  onClick: () => add(id),\n                  className: \"buttonAdjustment\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"letterAdjustment\",\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, this)\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Modal, {\n            show: show,\n            onHide: handleClose,\n            style: {\n              fontFamily: \"Signika\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n              closeButton: true,\n              children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                children: mealSelected\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n              children: Object.keys(description).map(key => {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [`${key} : ${description[key]}`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"light\",\n                onClick: handleClose,\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-100 d-flex align-items-center justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              className: \"text-primary checkOutButton\",\n              onClick: () => handleCheckOut(),\n              children: \"Check Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), (numMealsSelected === 0 || !userSession.isLoggedIn()) && /*#__PURE__*/_jsxDEV(PopUp, {\n        displayPopUp: displayPopUp,\n        setDisplayPopUp: setDisplayPopUp,\n        title: title,\n        body: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n        displayPopUp: displayEnoughPopUp,\n        setDisplayPopUp: setDisplayEnoughPopUp,\n        title: titleEnough,\n        body: bodyEnough\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n        displayPopUp: successPopUp,\n        setDisplayPopUp: setSuccessPopUp,\n        title: successTitle,\n        body: successBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StripeCheckout, {\n        name: \"Mirchi Meals\",\n        shippingAddress: true,\n        billingAddress: true,\n        description: total,\n        amount: cartPrice * 100,\n        token: onToken,\n        stripeKey: STRIPE_KEY,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"hiddenPaymentButton\",\n          style: {\n            borderColor: \"blue\",\n            padding: \"10px\",\n            fontSize: \"large\",\n            margin: \"50%\",\n            height: \"70px\",\n            width: \"100px\",\n            backgroundColor: \"black\"\n          },\n          hidden: true,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"white\"\n            },\n            children: [\"Pay $\", cartPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PickMeals, \"y+TPis9TmDbqvtmROcAGcuxqNVo=\", false, function () {\n  return [useNavigate];\n});\n_c = PickMeals;\nexport default PickMeals;\nvar _c;\n$RefreshReg$(_c, \"PickMeals\");","map":{"version":3,"names":["StripeBackend","impotr","Loading","SignUpPopUp","LogInPopUP","userSession","PopUp","useEffect","Container","Row","Col","Link","useState","Modal","Button","useNavigate","ScrollTop","MealData","logDOM","PickMeals","zipCode","cart","setCart","mealNumbers","setMealNumbers","setResetOrderPageInfo","numMealsSelected","setNumMealsSelected","setLogIn","numMeals","cartPrice","setCartPrice","STRIPE_KEY","total","stripeToken","setStripeToken","onToken","token","console","log","JSON","stringify","makeRequest","requestToServer","setSuccessBody","setSuccessPopUp","then","res","status","data","setTimeout","document","getElementById","click","index","length","catch","error","navigate","scrollUp","Array","fill","getMeals","show","setShow","description","setDescription","mealSelected","setMealSelected","backToOrderPage","handleDisplay","mealName","handleClose","add","idNum","addToCart","id","price","tempArray","push","found","forEach","element","newAr","map","item","remove","tempCart","displayPopUp","setDisplayPopUp","title","setTitle","body","setBody","displayEnoughPopUp","setDisplayEnoughPopUp","titleEnough","setTitleEnough","bodyEnough","setBodyEnough","successPopUp","successTitle","setSuccessTitle","successBody","handleCheckOut","parseInt","isLoggedIn","fontFamily","padding","buttonColor","textColor","color","marginTop","marginBottom","img","Object","keys","key","borderColor","fontSize","margin","height","width","backgroundColor"],"sources":["/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/PickMeals/PickMeals.js"],"sourcesContent":["\n/**\n *  For now can look in csv file for meal data based on zip code entered\n *  Scaling: might need API call to search meal info based on given zip code\n */\n\nimport StripeBackend from \"../../Service/StripeBackend\";\nimpotr \nimport Loading from \"../../Service/Loading\";\nimport SignUpPopUp from \"../NavBar/SignUpPopUp/SignUpPopUp\";\nimport LogInPopUP from \"../NavBar/LogInPopUp/LogInPopUp\";\nimport userSession from \"../../Service/userSession\";\nimport PopUp from \"../../SharedComponents/PopUp/PopUp\";\nimport \"./PickMeals.css\";\nimport { useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport ScrollTop from \"../../Service/ScrollTop\";\nimport MealData from \"../../Service/MealData\";\nimport { logDOM } from \"@testing-library/react\";\nconst PickMeals = ({\n  zipCode,\n  cart,\n  setCart,\n  mealNumbers,\n  setMealNumbers,\n  setResetOrderPageInfo,\n  numMealsSelected,\n  setNumMealsSelected,\n  setLogIn,\n  numMeals,\n  cartPrice,\n  setCartPrice,\n}) => {\n  const STRIPE_KEY =\n    \"pk_test_51MLGUDLxe44udBspRQVfTcgFGVZRI6NRIlrfX4lexUptlrYTJjsqfJZFBeDrKXdyOCiJVVQKcD88WAQDsNPVWZ9b00bKBn0FaU\";\n  // logic to make request to backend with unique token id and backend will charge money thru stripe\n  const total = \"Total: $\" + cartPrice;\n  const [stripeToken, setStripeToken] = useState(null);\n  const onToken = (token) => {\n    // here we can collect shipping info..\n    setStripeToken(token);\n\n    console.log(\"TOKEN::: \" + JSON.stringify(token));\n  };\n  useEffect(() => {\n    const makeRequest = () => {\n      StripeBackend.requestToServer(\n        stripeToken,\n        cartPrice * 100,\n        setSuccessBody,\n        setSuccessPopUp\n      )\n        .then((res) => {\n          // empty token from previous attempt\n          setStripeToken(null);\n          if (res.status === 206) {\n            // Payment failed\n            setSuccessBody(res.data);\n            // let user view ^^ for 2 secs then close pop up, reopen payment pop up\n            setTimeout(() => {\n              setSuccessPopUp(false);\n              document.getElementById(\"hiddenPaymentButton\").click();\n            }, 2000);\n          } else {\n            // Successful payment\n            setSuccessBody(\"Successful Payment!\");\n            setTimeout(() => {\n              setSuccessPopUp(false);\n\n              // SUCCESS; RESET: cart, numMealsSelected, mealNumbers\n              setCart([]);\n              setNumMealsSelected(0);\n              for (let index = 0; index < mealNumbers.length; index++) {\n                mealNumbers[index] = 0;\n              }\n            }, 2000);\n          }\n        })\n        .catch((error) => {\n          setSuccessPopUp(true);\n          setSuccessBody(\"\" + error);\n          setTimeout(() => {\n            setSuccessPopUp(false);\n            document.getElementById(\"hiddenPaymentButton\").click();\n          }, 3000);\n        });\n    };\n\n    // const makeRequest = async () => {\n    //   try {\n    //     const res = await axios.post(\n    //       \"http://localhost:5001/api/checkout/payment\",\n    //       {\n    //         tokenId: stripeToken.id,\n    //         // pass right amt and correct meal info\n    //         amount: cartPrice * 100,\n    //         email: stripeToken.email,\n    //       }\n    //     );\n    //     // Token has been utilized, so set it to null\n    //     setStripeToken(null);\n    //   } catch (err) {\n    //     // setSuccessPopUp(true);\n    //     // setSuccessBody(\"\" + err);\n    //     // setTimeout(() => {\n    //     //   setSuccessPopUp(false);\n    //     //   document.getElementById(\"hiddenPaymentButton\").click();\n    //     // }, 3000);\n    //   }\n    // };\n    stripeToken && makeRequest();\n  }, [stripeToken]);\n\n  // so we can go back to orderPage\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    console.log(\"ZIPCODE ON PM RENDERED::: \" + zipCode);\n    // if zipCode not provided, go back to order page\n    if (zipCode.length === 0) {\n      console.log(\"NO ZIPCODE; GO BACK TO ORDER AND RESET EVERYTHING\");\n      setResetOrderPageInfo(2); // if no zip code; go back to order page and have user fill out all the fields\n      navigate(\"/order\");\n    } else {\n      // scroll up only once when user arrives on this page\n      ScrollTop.scrollUp();\n      if (mealNumbers.length === 0) {\n        setMealNumbers(new Array(data.length).fill(0));\n        console.log(\"RESETTING CART\");\n        // should do this in case of payment success\n      }\n    }\n  }, []);\n\n  const data = MealData.getMeals();\n\n  // pop up to show description/ingridents to users\n  const [show, setShow] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [mealSelected, setMealSelected] = useState(\"\");\n\n  // What if user wants to reset freq, zipcode, etc...?? => we let user go back to OrderPage\n  const backToOrderPage = () => {\n    setCart([]);\n    setMealNumbers([]);\n    setResetOrderPageInfo(2); // reset everything in orderPage\n    console.log(\"<== BACK BUTTON CLICKED...\");\n    navigate(\"/order\");\n  };\n\n  // Handles PopUp display\n  const handleDisplay = (description, mealName) => {\n    setDescription(description);\n    setMealSelected(mealName);\n    setShow(true);\n  };\n\n  // closes description pop up when user closes it\n  const handleClose = () => {\n    setDescription(\"\");\n    setMealSelected(\"\");\n    setShow(false);\n  };\n\n  /**\n   * @Goal ADD item to cart && increment quantity by 1\n   * @param idNum of item to be added\n   * 1. Increment quantity in mealNumbers at index \"id\"\n   * 2. Update cart by setCart()\n   */\n\n  const add = (idNum) => {\n    setNumMealsSelected((numMealsSelected) => numMealsSelected + 1);\n    // will have to add PRICE\n    const addToCart = {\n      id: idNum,\n      mealName: data[idNum].mealName,\n      description: data[idNum].description,\n      price: data[idNum].price,\n    };\n\n    const tempArray = [];\n\n    if (cart.length === 0) {\n      // cart is empty\n      tempArray.push(addToCart);\n      setCart(tempArray);\n    } else {\n      // cart is NOT empty; 2 cases: idNum IS in cart OR NOT in the cart\n\n      // don't wanna add duplicate items\n      let found = false;\n\n      cart.forEach((element) => {\n        if (element.id === idNum) {\n          found = true;\n        }\n        tempArray.push(element);\n      });\n\n      // adding item first time\n      if (!found) {\n        tempArray.push(addToCart);\n      }\n      setCart(tempArray); // Update cart to display correct items in cart\n    }\n\n    mealNumbers[idNum]++; // increment quantity in mealNumbers at index \"idNum\"\n    const newAr = [];\n    mealNumbers.map((item) => {\n      newAr.push(item);\n    });\n    setMealNumbers(newAr); // Update mealNumbers to display correct quantity numbers in cart AND pickMeals page\n  };\n\n  /**\n   * @Goal REMOVE item from cart && decrement quantity by 1\n   * @param id of item to be removed/reduced\n   * 1. Decrement quantity in mealNumbers at index \"idNum\"\n   * 2. Update cart by setCart()\n   */\n  const remove = (id) => {\n    // CANNOT have quantity < 0\n    if (mealNumbers[id] > 0) {\n      setNumMealsSelected((numMealsSelected) => numMealsSelected - 1);\n      mealNumbers[id]--; // decrement quantity in mealNumbers at index \"id\"\n      const newAr = [];\n      mealNumbers.map((item) => {\n        newAr.push(item);\n      });\n      setMealNumbers(newAr); // update mealNumbers\n\n      if (mealNumbers[id] === 0) {\n        // if item is reduced to 0 in cart, cart should be updated so we don't have an item in cart whose quantity = 0\n        const tempCart = [];\n        cart.forEach((element) => {\n          if (element.id !== id) {\n            tempCart.push(element);\n          }\n        });\n        setCart(tempCart);\n      }\n    }\n  };\n\n  // log in warnin\n  const [displayPopUp, setDisplayPopUp] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const [displayEnoughPopUp, setDisplayEnoughPopUp] = useState(false);\n  const [titleEnough, setTitleEnough] = useState(\"\");\n  const [bodyEnough, setBodyEnough] = useState(\"\");\n\n  {\n    /* remove this after stripe */\n  }\n  const [successPopUp, setSuccessPopUp] = useState(false);\n  const [successTitle, setSuccessTitle] = useState(\"\");\n  const [successBody, setSuccessBody] = useState(\"\");\n\n  /**\n   * send Data to DB for DA purporses\n   * STRIP INTEGRATION\n   */\n  const handleCheckOut = () => {\n    if (numMeals === \"12+ Meals\" && numMealsSelected < 12) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough(<p>Select at least 12 meals</p>);\n      setDisplayEnoughPopUp(true);\n    } else if (parseInt(numMeals[0]) > numMealsSelected) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough(<p>Select at least {numMeals[0]} meals</p>);\n      setDisplayEnoughPopUp(true);\n    } else if (!userSession.isLoggedIn()) {\n      setTitle(\"LogIn/SignUp\");\n\n      setBody(\n        <div\n          className=\"container align-items-center d-flex justify-content-center\"\n          style={{ fontFamily: \"Signika\" }}\n        >\n          <form style={{ padding: \"20px\" }} className=\"rounded\">\n            <Row className=\"\">\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\" className=\"mb-4\">\n                  <p className=\"lead\">Log in or Sign Up to continue</p>\n                </label>\n              </div>\n            </Row>\n\n            <div className=\"container text-center mb-4\">\n              <LogInPopUP\n                style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n                setLogIn={setLogIn}\n              />\n            </div>\n\n            <div className=\"container text-center\">\n              {/* <Button variant=\"dark\" className=\"\">\n                Log In\n              </Button> */}\n              <SignUpPopUp\n                style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n                setLogIn={setLogIn}\n              />\n            </div>\n          </form>\n        </div>\n      );\n      setDisplayPopUp(true);\n    } else {\n      // STRIPE API CALL TO CREATE CHARGE\n      setSuccessTitle(\"GO TO STRIPE\");\n      setSuccessBody(<p>You can proceed to stripe checkout</p>);\n      setSuccessPopUp(true);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"justify-content-center backButtonContainer\">\n        <Button\n          variant=\"secondary\"\n          className=\"position-fixed backButton\"\n          onClick={() => backToOrderPage()}\n          style={{ fontFamily: \"Signika\", color: \"white\" }}\n        >\n          Back\n        </Button>\n      </div>\n      <section style={{ fontFamily: \"Signika\" }}>\n        <Container className=\"text-dark my-4 customCss\">\n          <Row style={{ marginTop: \"66px\", marginBottom: \"32px\" }} xs=\"auto\">\n            {data.map((item) => {\n              const { id, img, mealName, description, price } = item;\n              return (\n                <Col key={id} className=\"p-3 spacesBetweenBoxes\">\n                  <div className=\"card-body text-center\">\n                    <img src={img} className=\"img-fluid imageAdjustment\" />\n                    <h4 className=\"titleAdjustment\">{mealName}</h4>\n                    <h5>\n                      <del className=\"mx-2\">$15.99</del>${price}\n                    </h5>\n                    <Link onClick={() => handleDisplay(description, mealName)}>\n                      <p className=\"text-light descriptionAdjustment\">\n                        Description/Ingridients\n                      </p>\n                    </Link>\n\n                    <Button\n                      variant=\"light\"\n                      onClick={() => remove(id)}\n                      className=\"buttonAdjustment\"\n                    >\n                      <span className=\"letterAdjustment\">-</span>\n                    </Button>\n\n                    <span className=\"amountAdjustment\">{mealNumbers[id]}</span>\n\n                    <Button\n                      variant=\"light\"\n                      onClick={() => add(id)}\n                      className=\"buttonAdjustment\"\n                    >\n                      <span className=\"letterAdjustment\">+</span>\n                    </Button>\n                  </div>\n                </Col>\n              );\n            })}\n\n            <Modal\n              show={show}\n              onHide={handleClose}\n              style={{ fontFamily: \"Signika\" }}\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>{mealSelected}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                {Object.keys(description).map((key) => {\n                  return (\n                    <span>\n                      {`${key} : ${description[key]}`}\n                      <br></br>\n                    </span>\n                  );\n                })}\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"light\" onClick={handleClose}>\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </Row>\n\n          <Row>\n            {/* Only show checkout button if # of item > 0 */}\n\n            <div className=\"h-100 d-flex align-items-center justify-content-center\">\n              <Button\n                variant=\"secondary\"\n                className=\"text-primary checkOutButton\"\n                onClick={() => handleCheckOut()}\n              >\n                Check Out\n              </Button>\n            </div>\n          </Row>\n        </Container>\n        {/* should probably remove 1st condition */}\n        {(numMealsSelected === 0 || !userSession.isLoggedIn()) && (\n          <PopUp\n            displayPopUp={displayPopUp}\n            setDisplayPopUp={setDisplayPopUp}\n            title={title}\n            body={body}\n          />\n        )}\n\n        <PopUp\n          displayPopUp={displayEnoughPopUp}\n          setDisplayPopUp={setDisplayEnoughPopUp}\n          title={titleEnough}\n          body={bodyEnough}\n        />\n\n        {/* remove this after stripe */}\n        <PopUp\n          displayPopUp={successPopUp}\n          setDisplayPopUp={setSuccessPopUp}\n          title={successTitle}\n          body={successBody}\n        />\n        {/* Regular Stripe Pop Up */}\n        <StripeCheckout\n          name=\"Mirchi Meals\"\n          shippingAddress\n          billingAddress\n          description={total}\n          amount={cartPrice * 100}\n          token={onToken}\n          stripeKey={STRIPE_KEY}\n        >\n          <button\n            id=\"hiddenPaymentButton\"\n            style={{\n              borderColor: \"blue\",\n              padding: \"10px\",\n              fontSize: \"large\",\n              margin: \"50%\",\n              height: \"70px\",\n              width: \"100px\",\n              backgroundColor: \"black\",\n            }}\n            hidden\n          >\n            <span style={{ color: \"white\" }}>Pay ${cartPrice}</span>\n          </button>\n        </StripeCheckout>\n      </section>\n    </>\n  );\n};\n\nexport default PickMeals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}