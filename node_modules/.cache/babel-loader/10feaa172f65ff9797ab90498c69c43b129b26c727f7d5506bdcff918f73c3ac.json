{"ast":null,"code":"var _jsxFileName = \"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/NavBar/ShoppingCart/ShoppingCart.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport SignUpPopUp from \"../SignUpPopUp/SignUpPopUp\";\nimport LogInPopUP from \"../LogInPopUp/LogInPopUp\";\nimport { useNavigate } from \"react-router-dom\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Offcanvas } from \"react-bootstrap\";\nimport MealData from \"../../../Service/MealData\";\nimport userSession from \"../../../Service/userSession\";\nimport PopUp from \"../../../SharedComponents/PopUp/PopUp\";\nimport StripeBackend from \"../../../Service/StripeBackend\";\nimport OrderAPIService from \"../../../Service/OrderAPIService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShoppingCart = _ref => {\n  _s();\n  let {\n    cart,\n    setCart,\n    cartPrice,\n    setCartPrice,\n    mealNumbers,\n    setMealNumbers,\n    setLogIn,\n    numMeals,\n    numMealsSelected,\n    setNumMealsSelected,\n    delivDate\n  } = _ref;\n  {\n    /* Need this for post payment alerts */\n  }\n  const [successPopUp, setSuccessPopUp] = useState(false);\n  const [successTitle, setSuccessTitle] = useState(\"\");\n  const [successBody, setSuccessBody] = useState(\"\");\n  const STRIPE_KEY = \"pk_test_51MLGUDLxe44udBspRQVfTcgFGVZRI6NRIlrfX4lexUptlrYTJjsqfJZFBeDrKXdyOCiJVVQKcD88WAQDsNPVWZ9b00bKBn0FaU\";\n  // logic to make request to backend with unique token id and backend will charge money thru stripe\n  const total = \"Total: $\" + cartPrice;\n  const [stripeToken, setStripeToken] = useState(null);\n  const onToken = token => {\n    // here we can collect shipping info..\n    setStripeToken(token);\n    console.log(\"TOKEN::: \" + JSON.stringify(token));\n  };\n  useEffect(() => {\n    const makeRequest = () => {\n      StripeBackend.requestToServer(stripeToken, cartPrice * 100, setSuccessBody, setSuccessPopUp).then(res => {\n        if (res.status === 206) {\n          // Payment failed\n          setSuccessBody(res.data);\n          // let user view ^^ for 2 secs then close pop up, reopen payment pop up\n          setTimeout(() => {\n            setSuccessPopUp(false);\n            document.getElementById(\"hiddenPaymentButton\").click();\n          }, 2000);\n        } else {\n          // Successful payment\n          setSuccessBody(\"Successful Payment!\");\n          setTimeout(() => {\n            // STORE ORDER IN DB\n            // SUCCESS; RESET: cart, numMealsSelected, mealNumbers\n\n            // Getting order in array format\n            const mealAndFreqsArr = [];\n            cart.map(item => {\n              let temp = [item.id, mealNumbers[item.id]];\n              mealAndFreqsArr.push(temp);\n            });\n            let todaysDate = new Date().toDateString();\n            const objToSend = {\n              Order_date: todaysDate,\n              Shipping_date: delivDate,\n              Total_Price: cartPrice,\n              email: stripeToken.email,\n              Address: stripeToken.emailAddress,\n              Customer_id: userSession.getUser().id,\n              mealAndFreqs: mealAndFreqsArr\n            };\n            OrderAPIService.addOrder(objToSend, setSuccessBody).then(res => {\n              setSuccessBody(\"Order saved in DB! Order#: \" + res.data);\n              // after 2 seconds close the pop up \n              setTimeout(() => {\n                setSuccessPopUp(false);\n              }, 2000);\n\n              // after response is received from backend\n            }).catch(err => {});\n\n            // resetting cart and other info\n            setCart([]);\n            setNumMealsSelected(0);\n            setCartPrice(0);\n            for (let index = 0; index < mealNumbers.length; index++) {\n              mealNumbers[index] = 0;\n            }\n          }, 2000);\n        }\n      }).catch(error => {\n        setSuccessPopUp(true);\n        setSuccessBody(\"\" + error);\n        setTimeout(() => {\n          setSuccessPopUp(false);\n          document.getElementById(\"hiddenPaymentButton\").click();\n        }, 3000);\n      });\n    };\n    stripeToken && makeRequest();\n  }, [stripeToken]);\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => {\n    setShow(true);\n  };\n  const navigate = useNavigate();\n  const clearCart = () => {\n    setCart([]);\n    const emptyAr = new Array(mealNumbers.length).fill(0);\n    setMealNumbers(emptyAr);\n  };\n  const add = id => {\n    setNumMealsSelected(numMealsSelected => numMealsSelected + 1);\n    setCartPrice(cartPrice => Math.round((cartPrice + MealData.getMeals()[id].price + Number.EPSILON) * 100) / 100);\n    mealNumbers[id]++;\n    const tempAr = [];\n    mealNumbers.map(item => {\n      tempAr.push(item);\n    });\n    setMealNumbers(tempAr);\n  };\n  const remove = id => {\n    if (mealNumbers[id] > 0) {\n      setNumMealsSelected(numMealsSelected => numMealsSelected - 1);\n      setCartPrice(cartPrice => Math.round((cartPrice - MealData.getMeals()[id].price + Number.EPSILON) * 100) / 100);\n      mealNumbers[id]--;\n      const tempAr = [];\n      mealNumbers.map(item => {\n        tempAr.push(item);\n      });\n      setMealNumbers(tempAr);\n      if (mealNumbers[id] === 0) {\n        const tempCart = [];\n        cart.forEach(element => {\n          if (element.id !== id) {\n            tempCart.push(element);\n          }\n        });\n        setCart(tempCart);\n      }\n    }\n  };\n\n  // log in warnin\n  const [displayPopUp, setDisplayPopUp] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [displayEnoughPopUp, setDisplayEnoughPopUp] = useState(false);\n  const [titleEnough, setTitleEnough] = useState(\"\");\n  const [bodyEnough, setBodyEnough] = useState(\"\");\n\n  /**\n   * send Data to DB for DA purporses\n   * STRIP INTEGRATION\n   */\n  const handleCheckOut = () => {\n    console.log(`numMeals:: ${numMeals};;; Selected::: ${numMealsSelected}`);\n    // not enough meals selected\n    if (numMeals === \"12+ Meals\" && numMealsSelected < 12) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select at least 12 meals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this));\n      setDisplayEnoughPopUp(true);\n    } else if (parseInt(numMeals[0]) > numMealsSelected) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Select at least \", numMeals[0], \" meals\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this));\n      setDisplayEnoughPopUp(true);\n    } else if (!userSession.isLoggedIn()) {\n      setTitle(\"LogIn/SignUp\");\n      setBody( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container align-items-center d-flex justify-content-center\",\n        style: {\n          fontFamily: \"Signika\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            padding: \"20px\"\n          },\n          className: \"rounded\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputEmail1\",\n                className: \"mb-4\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"lead\",\n                  children: \"Log in or Sign Up to continue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container text-center mb-4\",\n            children: /*#__PURE__*/_jsxDEV(LogInPopUP, {\n              style: {\n                buttonColor: \"secondary\",\n                textColor: \"white\"\n              },\n              setLogIn: setLogIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container text-center\",\n            children: /*#__PURE__*/_jsxDEV(SignUpPopUp, {\n              style: {\n                buttonColor: \"secondary\",\n                textColor: \"white\"\n              },\n              setLogIn: setLogIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this));\n      setDisplayPopUp(true);\n    } else {\n      // write logic to collect payment info for stripe\n      document.getElementById(\"hiddenPaymentButton\").click();\n      // setSuccessTitle(\"GO TO STRIPE\");\n      // setSuccessBody(<p>You can proceed to stripe checkout</p>);\n      // setSuccessPopUp(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Nav, {\n    style: {\n      marginTop: \"8px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-light text-dark\",\n      style: {\n        border: \"0px\",\n        height: \"34px\",\n        width: \"56.67px\",\n        padding: \"inherit\",\n        borderRadius: \"10px\",\n        marginRight: \"17px\",\n        marginBottom: \"5px\",\n        boxShadow: \"2px 1px 3px black\"\n      },\n      onClick: handleShow,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-cart3\",\n        style: {\n          marginBottom: \"12px\",\n          borderRadius: \"10px\",\n          height: \"36px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), cart.length !== 0 ? /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      placement: \"end\",\n      style: {\n        fontFamily: \"Signika\",\n        height: \"46%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          className: \"d-flex align-items-center justify-content-center\",\n          children: \"Shopping Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          children: cart.map(item => {\n            return /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                style: {\n                  marginLeft: \"100px\",\n                  marginTop: \"10px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [mealNumbers[item.id], \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item.mealName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  variant: \"light\",\n                  onClick: () => remove(item.id),\n                  style: {\n                    borderRadius: \"30px\",\n                    border: \"0px\",\n                    backgroundColor: \"rgb(247, 193, 68)\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"material-symbols-outlined\",\n                    style: {\n                      padding: \"0px\"\n                    },\n                    children: \"remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: \"40px\",\n                    paddingLeft: \"20px\",\n                    paddingRight: \"15px\"\n                  },\n                  children: mealNumbers[item.id]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  variant: \"light\",\n                  onClick: () => add(item.id),\n                  style: {\n                    borderRadius: \"30px\",\n                    border: \"0px\",\n                    backgroundColor: \"rgb(247, 193, 68)\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"material-symbols-outlined\",\n                    style: {\n                      padding: \"4px\"\n                    },\n                    children: \"add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center mt-5\",\n          children: `${\"Total Price $\" + cartPrice}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-50 d-flex align-items-center justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setCartPrice(0);\n              clearCart();\n              handleClose();\n            },\n            className: \"text-dark\",\n            style: {\n              backgroundColor: \"rgb(247, 193, 68)\",\n              border: \"0px\",\n              height: \"45px\",\n              width: \"145px\",\n              borderRadius: \"25px\",\n              fontSize: \"20px\"\n            },\n            children: \"Clear Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCheckOut(),\n            className: \"text-dark\",\n            style: {\n              backgroundColor: \"rgb(247, 193, 68)\",\n              border: \"0px\",\n              height: \"45px\",\n              width: \"145px\",\n              borderRadius: \"25px\",\n              fontSize: \"20px\"\n            },\n            children: \"Check Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      placement: \"end\",\n      style: {\n        fontFamily: \"Signika\",\n        height: \"30%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          className: \"d-flex align-items-center justify-content-center\",\n          children: \"Shopping Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center\",\n          children: \"Empty Cart Order Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-100 d-flex align-items-center justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              handleClose();\n              navigate(\"/order\");\n            },\n            className: \"text-dark\",\n            style: {\n              backgroundColor: \"rgb(247, 193, 68)\",\n              border: \"0px\",\n              height: \"45px\",\n              width: \"145px\",\n              borderRadius: \"25px\",\n              fontSize: \"20px\"\n            },\n            children: \"Order Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }, this), !userSession.isLoggedIn() && /*#__PURE__*/_jsxDEV(PopUp, {\n      displayPopUp: displayPopUp,\n      setDisplayPopUp: setDisplayPopUp,\n      title: title,\n      body: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n      displayPopUp: displayEnoughPopUp,\n      setDisplayPopUp: setDisplayEnoughPopUp,\n      title: titleEnough,\n      body: bodyEnough\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n      displayPopUp: successPopUp,\n      setDisplayPopUp: setSuccessPopUp,\n      title: successTitle,\n      body: successBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StripeCheckout, {\n      name: \"Mirchi Meals\",\n      shippingAddress: true,\n      billingAddress: true,\n      description: total,\n      amount: cartPrice * 100,\n      token: onToken,\n      stripeKey: STRIPE_KEY,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"hiddenPaymentButton\",\n        style: {\n          borderColor: \"blue\",\n          padding: \"10px\",\n          fontSize: \"large\",\n          margin: \"50%\",\n          height: \"70px\",\n          width: \"100px\",\n          backgroundColor: \"black\"\n        },\n        hidden: true,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"white\"\n          },\n          children: [\"Pay $\", cartPrice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_s(ShoppingCart, \"UJeWgrTz/jDqFONjGLxcyccwkQI=\", false, function () {\n  return [useNavigate];\n});\n_c = ShoppingCart;\nexport default ShoppingCart;\nvar _c;\n$RefreshReg$(_c, \"ShoppingCart\");","map":{"version":3,"names":["axios","useEffect","StripeCheckout","SignUpPopUp","LogInPopUP","useNavigate","Nav","Container","Row","Col","React","useState","Offcanvas","MealData","userSession","PopUp","StripeBackend","OrderAPIService","ShoppingCart","cart","setCart","cartPrice","setCartPrice","mealNumbers","setMealNumbers","setLogIn","numMeals","numMealsSelected","setNumMealsSelected","delivDate","successPopUp","setSuccessPopUp","successTitle","setSuccessTitle","successBody","setSuccessBody","STRIPE_KEY","total","stripeToken","setStripeToken","onToken","token","console","log","JSON","stringify","makeRequest","requestToServer","then","res","status","data","setTimeout","document","getElementById","click","mealAndFreqsArr","map","item","temp","id","push","todaysDate","Date","toDateString","objToSend","Order_date","Shipping_date","Total_Price","email","Address","emailAddress","Customer_id","getUser","mealAndFreqs","addOrder","catch","err","index","length","error","show","setShow","handleClose","handleShow","navigate","clearCart","emptyAr","Array","fill","add","Math","round","getMeals","price","Number","EPSILON","tempAr","remove","tempCart","forEach","element","displayPopUp","setDisplayPopUp","title","setTitle","body","setBody","displayEnoughPopUp","setDisplayEnoughPopUp","titleEnough","setTitleEnough","bodyEnough","setBodyEnough","handleCheckOut","parseInt","isLoggedIn","fontFamily","padding","buttonColor","textColor","marginTop","border","height","width","borderRadius","marginRight","marginBottom","boxShadow","marginLeft","mealName","backgroundColor","fontSize","paddingLeft","paddingRight","borderColor","margin","color"],"sources":["/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/NavBar/ShoppingCart/ShoppingCart.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport SignUpPopUp from \"../SignUpPopUp/SignUpPopUp\";\nimport LogInPopUP from \"../LogInPopUp/LogInPopUp\";\nimport { useNavigate } from \"react-router-dom\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Offcanvas } from \"react-bootstrap\";\nimport MealData from \"../../../Service/MealData\";\nimport userSession from \"../../../Service/userSession\";\nimport PopUp from \"../../../SharedComponents/PopUp/PopUp\";\nimport StripeBackend from \"../../../Service/StripeBackend\";\nimport OrderAPIService from \"../../../Service/OrderAPIService\";\nconst ShoppingCart = ({\n  cart,\n  setCart,\n  cartPrice,\n  setCartPrice,\n  mealNumbers,\n  setMealNumbers,\n  setLogIn,\n  numMeals,\n  numMealsSelected,\n  setNumMealsSelected,\n  delivDate,\n}) => {\n  {\n    /* Need this for post payment alerts */\n  }\n  const [successPopUp, setSuccessPopUp] = useState(false);\n  const [successTitle, setSuccessTitle] = useState(\"\");\n  const [successBody, setSuccessBody] = useState(\"\");\n  const STRIPE_KEY =\n    \"pk_test_51MLGUDLxe44udBspRQVfTcgFGVZRI6NRIlrfX4lexUptlrYTJjsqfJZFBeDrKXdyOCiJVVQKcD88WAQDsNPVWZ9b00bKBn0FaU\";\n  // logic to make request to backend with unique token id and backend will charge money thru stripe\n  const total = \"Total: $\" + cartPrice;\n  const [stripeToken, setStripeToken] = useState(null);\n  const onToken = (token) => {\n    // here we can collect shipping info..\n    setStripeToken(token);\n\n    console.log(\"TOKEN::: \" + JSON.stringify(token));\n  };\n  useEffect(() => {\n    const makeRequest = () => {\n      StripeBackend.requestToServer(\n        stripeToken,\n        cartPrice * 100,\n        setSuccessBody,\n        setSuccessPopUp\n      )\n        .then((res) => {\n          if (res.status === 206) {\n            // Payment failed\n            setSuccessBody(res.data);\n            // let user view ^^ for 2 secs then close pop up, reopen payment pop up\n            setTimeout(() => {\n              setSuccessPopUp(false);\n              document.getElementById(\"hiddenPaymentButton\").click();\n            }, 2000);\n          } else {\n            // Successful payment\n            setSuccessBody(\"Successful Payment!\");\n            setTimeout(() => {\n              // STORE ORDER IN DB\n              // SUCCESS; RESET: cart, numMealsSelected, mealNumbers\n\n              // Getting order in array format\n              const mealAndFreqsArr = [];\n              cart.map((item) => {\n                let temp = [item.id, mealNumbers[item.id]];\n                mealAndFreqsArr.push(temp);\n              });\n\n              let todaysDate = new Date().toDateString();\n\n              const objToSend = {\n                Order_date: todaysDate,\n                Shipping_date: delivDate,\n                Total_Price: cartPrice,\n                email: stripeToken.email,\n                Address: stripeToken.emailAddress,\n                Customer_id: userSession.getUser().id,\n                mealAndFreqs: mealAndFreqsArr,\n              };\n              OrderAPIService.addOrder(objToSend, setSuccessBody)\n                .then((res) => {\n                  setSuccessBody(\"Order saved in DB! Order#: \"+res.data);\n                  // after 2 seconds close the pop up \n                  setTimeout(() => {\n                    setSuccessPopUp(false);\n                  }, 2000);\n\n\n                  // after response is received from backend\n                })\n                .catch((err) => {});\n\n              // resetting cart and other info\n              setCart([]);\n              setNumMealsSelected(0);\n              setCartPrice(0);\n              for (let index = 0; index < mealNumbers.length; index++) {\n                mealNumbers[index] = 0;\n              }\n            }, 2000);\n          }\n        })\n        .catch((error) => {\n          setSuccessPopUp(true);\n          setSuccessBody(\"\" + error);\n          setTimeout(() => {\n            setSuccessPopUp(false);\n            document.getElementById(\"hiddenPaymentButton\").click();\n          }, 3000);\n        });\n    };\n    stripeToken && makeRequest();\n  }, [stripeToken]);\n\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => {\n    setShow(true);\n  };\n  const navigate = useNavigate();\n\n  const clearCart = () => {\n    setCart([]);\n    const emptyAr = new Array(mealNumbers.length).fill(0);\n    setMealNumbers(emptyAr);\n  };\n  const add = (id) => {\n    setNumMealsSelected((numMealsSelected) => numMealsSelected + 1);\n    setCartPrice(\n      (cartPrice) =>\n        Math.round(\n          (cartPrice + MealData.getMeals()[id].price + Number.EPSILON) * 100\n        ) / 100\n    );\n    mealNumbers[id]++;\n\n    const tempAr = [];\n\n    mealNumbers.map((item) => {\n      tempAr.push(item);\n    });\n\n    setMealNumbers(tempAr);\n  };\n  const remove = (id) => {\n    if (mealNumbers[id] > 0) {\n      setNumMealsSelected((numMealsSelected) => numMealsSelected - 1);\n      setCartPrice(\n        (cartPrice) =>\n          Math.round(\n            (cartPrice - MealData.getMeals()[id].price + Number.EPSILON) * 100\n          ) / 100\n      );\n      mealNumbers[id]--;\n      const tempAr = [];\n\n      mealNumbers.map((item) => {\n        tempAr.push(item);\n      });\n\n      setMealNumbers(tempAr);\n\n      if (mealNumbers[id] === 0) {\n        const tempCart = [];\n\n        cart.forEach((element) => {\n          if (element.id !== id) {\n            tempCart.push(element);\n          }\n        });\n\n        setCart(tempCart);\n      }\n    }\n  };\n\n  // log in warnin\n  const [displayPopUp, setDisplayPopUp] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const [displayEnoughPopUp, setDisplayEnoughPopUp] = useState(false);\n  const [titleEnough, setTitleEnough] = useState(\"\");\n  const [bodyEnough, setBodyEnough] = useState(\"\");\n\n  /**\n   * send Data to DB for DA purporses\n   * STRIP INTEGRATION\n   */\n  const handleCheckOut = () => {\n    console.log(`numMeals:: ${numMeals};;; Selected::: ${numMealsSelected}`);\n    // not enough meals selected\n    if (numMeals === \"12+ Meals\" && numMealsSelected < 12) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough(<p>Select at least 12 meals</p>);\n      setDisplayEnoughPopUp(true);\n    } else if (parseInt(numMeals[0]) > numMealsSelected) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough(<p>Select at least {numMeals[0]} meals</p>);\n      setDisplayEnoughPopUp(true);\n    } else if (!userSession.isLoggedIn()) {\n      setTitle(\"LogIn/SignUp\");\n\n      setBody(\n        <div\n          className=\"container align-items-center d-flex justify-content-center\"\n          style={{ fontFamily: \"Signika\" }}\n        >\n          <form style={{ padding: \"20px\" }} className=\"rounded\">\n            <Row className=\"\">\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\" className=\"mb-4\">\n                  <p className=\"lead\">Log in or Sign Up to continue</p>\n                </label>\n              </div>\n            </Row>\n\n            <div className=\"container text-center mb-4\">\n              <LogInPopUP\n                style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n                setLogIn={setLogIn}\n              />\n            </div>\n\n            <div className=\"container text-center\">\n              {/* <Button variant=\"dark\" className=\"\">\n                Log In\n              </Button> */}\n              <SignUpPopUp\n                style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n                setLogIn={setLogIn}\n              />\n            </div>\n          </form>\n        </div>\n      );\n      setDisplayPopUp(true);\n    } else {\n      // write logic to collect payment info for stripe\n      document.getElementById(\"hiddenPaymentButton\").click();\n      // setSuccessTitle(\"GO TO STRIPE\");\n      // setSuccessBody(<p>You can proceed to stripe checkout</p>);\n      // setSuccessPopUp(true);\n    }\n  };\n\n  return (\n    <Nav style={{ marginTop: \"8px\" }}>\n      <button\n        className=\"bg-light text-dark\"\n        style={{\n          border: \"0px\",\n          height: \"34px\",\n          width: \"56.67px\",\n          padding: \"inherit\",\n          borderRadius: \"10px\",\n          marginRight: \"17px\",\n          marginBottom: \"5px\",\n          boxShadow: \"2px 1px 3px black\",\n        }}\n        onClick={handleShow}\n      >\n        <i\n          className=\"bi bi-cart3\"\n          style={{\n            marginBottom: \"12px\",\n            borderRadius: \"10px\",\n            height: \"36px\",\n          }}\n        ></i>\n      </button>\n      {cart.length !== 0 ? (\n        <Offcanvas\n          show={show}\n          onHide={handleClose}\n          placement=\"end\"\n          style={{ fontFamily: \"Signika\", height: \"46%\" }}\n        >\n          <Offcanvas.Header closeButton>\n            <Offcanvas.Title className=\"d-flex align-items-center justify-content-center\">\n              Shopping Cart\n            </Offcanvas.Title>\n          </Offcanvas.Header>\n          <Offcanvas.Body>\n            <Container>\n              {cart.map((item) => {\n                return (\n                  <Row key={item.id}>\n                    <Col style={{ marginLeft: \"100px\", marginTop: \"10px\" }}>\n                      <span>{mealNumbers[item.id]} </span>\n                      <span>{item.mealName}</span>\n                      <br></br>\n                      <button\n                        variant=\"light\"\n                        onClick={() => remove(item.id)}\n                        style={{\n                          borderRadius: \"30px\",\n                          border: \"0px\",\n                          backgroundColor: \"rgb(247, 193, 68)\",\n                        }}\n                      >\n                        <span\n                          className=\"material-symbols-outlined\"\n                          style={{ padding: \"0px\" }}\n                        >\n                          remove\n                        </span>\n                      </button>\n\n                      <span\n                        style={{\n                          fontSize: \"40px\",\n                          paddingLeft: \"20px\",\n                          paddingRight: \"15px\",\n                        }}\n                      >\n                        {mealNumbers[item.id]}\n                      </span>\n\n                      <button\n                        variant=\"light\"\n                        onClick={() => add(item.id)}\n                        style={{\n                          borderRadius: \"30px\",\n                          border: \"0px\",\n                          backgroundColor: \"rgb(247, 193, 68)\",\n                        }}\n                      >\n                        <span\n                          className=\"material-symbols-outlined\"\n                          style={{ padding: \"4px\" }}\n                        >\n                          add\n                        </span>\n                      </button>\n                    </Col>\n                  </Row>\n                );\n              })}\n            </Container>\n            <h3 className=\"text-center mt-5\">{`${\n              \"Total Price $\" + cartPrice\n            }`}</h3>\n            <div className=\"h-50 d-flex align-items-center justify-content-center\">\n              <button\n                onClick={() => {\n                  setCartPrice(0);\n                  clearCart();\n                  handleClose();\n                }}\n                className=\"text-dark\"\n                style={{\n                  backgroundColor: \"rgb(247, 193, 68)\",\n                  border: \"0px\",\n                  height: \"45px\",\n                  width: \"145px\",\n                  borderRadius: \"25px\",\n                  fontSize: \"20px\",\n                }}\n              >\n                Clear Order\n              </button>\n\n              {/* <Link to=\"/checkOut\" style={{ marginLeft: \"24px\" }}> */}\n              <button\n                onClick={() => handleCheckOut()}\n                className=\"text-dark\"\n                style={{\n                  backgroundColor: \"rgb(247, 193, 68)\",\n                  border: \"0px\",\n                  height: \"45px\",\n                  width: \"145px\",\n                  borderRadius: \"25px\",\n                  fontSize: \"20px\",\n                }}\n              >\n                Check Out\n              </button>\n              {/* </Link> */}\n            </div>\n          </Offcanvas.Body>\n        </Offcanvas>\n      ) : (\n        <Offcanvas\n          show={show}\n          onHide={handleClose}\n          placement=\"end\"\n          style={{ fontFamily: \"Signika\", height: \"30%\" }}\n        >\n          <Offcanvas.Header closeButton>\n            <Offcanvas.Title className=\"d-flex align-items-center justify-content-center\">\n              Shopping Cart\n            </Offcanvas.Title>\n          </Offcanvas.Header>\n          <Offcanvas.Body>\n            <p className=\"text-center\">Empty Cart Order Now</p>\n            <div className=\"h-100 d-flex align-items-center justify-content-center\">\n              <button\n                onClick={() => {\n                  handleClose();\n                  navigate(\"/order\");\n                }}\n                className=\"text-dark\"\n                style={{\n                  backgroundColor: \"rgb(247, 193, 68)\",\n                  border: \"0px\",\n                  height: \"45px\",\n                  width: \"145px\",\n                  borderRadius: \"25px\",\n                  fontSize: \"20px\",\n                }}\n              >\n                Order Now\n              </button>\n            </div>\n          </Offcanvas.Body>\n        </Offcanvas>\n      )}\n\n      {/* login warning */}\n      {!userSession.isLoggedIn() && (\n        <PopUp\n          displayPopUp={displayPopUp}\n          setDisplayPopUp={setDisplayPopUp}\n          title={title}\n          body={body}\n        />\n      )}\n\n      <PopUp\n        displayPopUp={displayEnoughPopUp}\n        setDisplayPopUp={setDisplayEnoughPopUp}\n        title={titleEnough}\n        body={bodyEnough}\n      />\n\n      {/* after stripe goes thru this popup is used*/}\n      <PopUp\n        displayPopUp={successPopUp}\n        setDisplayPopUp={setSuccessPopUp}\n        title={successTitle}\n        body={successBody}\n      />\n\n      {/* Regular Stripe Pop Up */}\n      <StripeCheckout\n        name=\"Mirchi Meals\"\n        shippingAddress\n        billingAddress\n        description={total}\n        amount={cartPrice * 100}\n        token={onToken}\n        stripeKey={STRIPE_KEY}\n      >\n        <button\n          id=\"hiddenPaymentButton\"\n          style={{\n            borderColor: \"blue\",\n            padding: \"10px\",\n            fontSize: \"large\",\n            margin: \"50%\",\n            height: \"70px\",\n            width: \"100px\",\n            backgroundColor: \"black\",\n          }}\n          hidden\n        >\n          <span style={{ color: \"white\" }}>Pay ${cartPrice}</span>\n        </button>\n      </StripeCheckout>\n    </Nav>\n  );\n};\n\nexport default ShoppingCart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}