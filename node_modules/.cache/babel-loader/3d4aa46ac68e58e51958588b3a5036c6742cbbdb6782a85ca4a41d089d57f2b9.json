{"ast":null,"code":"var _jsxFileName = \"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/NavBar/LogInPopUp/LogInPopUp.js\",\n  _s = $RefreshSig$();\nimport PopUp from \"../../../SharedComponents/PopUp/PopUp\";\nimport { Link } from \"react-router-dom\";\nimport UserApiService from \"../../../Service/UserApiService\";\n/***\n * Will call backend API to authenticate user based on username and password\n */\n\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport userSession from \"../../../Service/userSession\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LogInPopUP(_ref) {\n  _s();\n  let {\n    style,\n    setLogIn\n  } = _ref;\n  // forgot password popUP\n  const [forgotPasswordPopUp, setForgotPasswordPopUp] = useState(false);\n  const [forgotPasswordTitle, setForgotPasswordTitle] = useState(\"\");\n  const [forgotPasswordBody, setForgotPasswordBody] = useState(\"\");\n\n  // display pop up\n  const [display, setDisplay] = useState(false);\n  const [invalid, setInvalid] = useState(false);\n\n  // states for email, emailLabel\n  const [email, setEmail] = useState(\"\");\n  const [emailLabel, setEmailLabel] = useState( /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: \"email\",\n    className: \"col-form-label\",\n    children: [\"Enter email\", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this));\n\n  // states for password, passwordLabel\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userPasswordLabel, setUserPasswordLabel] = useState( /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: \"userPassword\",\n    className: \"col-form-label\",\n    children: [\"Enter Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this));\n\n  // restores labels to black text and replace ** with *\n  // for eg. User Name ** in red will become User Name * in black\n  const resetLabels = () => {\n    setEmailLabel( /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      className: \"col-form-label\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"black\"\n        },\n        children: [\"Enter email \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this));\n    setUserPasswordLabel( /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"userPassword\",\n      className: \"col-form-label\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"black\"\n        },\n        children: [\"Enter Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this));\n    setInvalid(false);\n  };\n\n  // resets state of data\n  const resetData = () => {\n    setEmail(\"\");\n    setUserPassword(\"\");\n  };\n\n  // reset data & lables\n  const reset = () => {\n    localStorage.removeItem(\"Loading\");\n    resetData();\n    resetLabels();\n  };\n\n  //reset ALL states of data & CLOSE Pop Up\n  const handleClose = () => {\n    reset();\n    setDisplay(false);\n  };\n  const handleDisplay = e => {\n    e.preventDefault();\n    setDisplay(true);\n  };\n\n  /** User clicked on submit\n   * all fields were entered\n   * API interaction happens here\n   * Authenticate user from backend based on email & password\n   * get userinfo from backend and update userInfo global state\n   */\n  const handleSubmit = () => {\n    resetLabels();\n    if (email.length === 0) {\n      setEmailLabel( /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        className: \"col-form-label\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: [\"Enter User Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"**\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this));\n    } else if (userPassword.length === 0) {\n      setUserPasswordLabel( /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"userPassword\",\n        className: \"col-form-label\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          children: [\"Enter Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"**\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this));\n    } else {\n      const toBeAuthenticated = {\n        userName: email,\n        password: userPassword\n      };\n      // API rough work: order history not fetched!\n      UserApiService.logUserIn(toBeAuthenticated).then(response => {\n        localStorage.removeItem(\"Loading\");\n        if (response.status === 200) {\n          if (response.data.length !== 0) {\n            const userLoggedIn = {\n              id: response.data.id,\n              fname: response.data.First_Name,\n              lname: response.data.Last_Name,\n              emailAddress: response.data.Email,\n              password: response.data.Password,\n              phone: response.data.phone\n            };\n            userSession.addUser(userLoggedIn);\n            setInvalid(false);\n            setLogIn(true);\n            handleClose();\n          } else {\n            // incorrect password!\n            setInvalid(true);\n          }\n        }\n      }).catch(err => {\n        localStorage.removeItem(\"Loading\");\n        setInvalid(true);\n        console.log(\"ERROR::: \" + err);\n      });\n\n      // IF username && password valid => following things\n\n      // setLogIn(true);\n\n      // need to receive more info from backend like name and order history\n      const orderhistory = [{\n        size: 4,\n        meals: [\"Punjabi Meal\", \"Gujarati Meal\", \"Bangladeshi Meal\", \"Gujarati Meal\"],\n        price: 96,\n        orderDate: \"12/11/2022\",\n        deliveryDate: \"Sunday\"\n      }, {\n        size: 6,\n        meals: [\"Punjabi Meal\", \"Gujarati Meal\", \"Bangladeshi Meal\", \"Gujarati Meal\", \"Gujarati Meal\", \"Bangladeshi Meal\"],\n        price: 96,\n        orderDate: \"12/12/2022\",\n        deliveryDate: \"Friday\"\n      }];\n\n      /**\n       * Stuff is commented out because version 1.0 of backend API is being integrated\n       */\n\n      // const userReceived = {\n      //   fname: \"First\",\n      //   lname: \"Last\",\n      //   emailAddress: email,\n      //   password: userPassword,\n      //   orderHistory: orderhistory,\n      // };\n      // userSession.addUser(userReceived);\n      // handleClose();\n\n      // IF username || password invalid => take some action\n    }\n  };\n\n  const handleForgotPassword = () => {\n    handleClose();\n    setForgotPasswordPopUp(true);\n    setForgotPasswordTitle(\"Retreive Password\");\n    setForgotPasswordBody(\n    /*#__PURE__*/\n    // <>\n    // </>\n    _jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"col-form-label\",\n          children: \"Enter email to receive Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-primary\",\n            children: \"Get Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LogInPopUP, {\n        style: style,\n        setLogIn: setLogIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => handleDisplay(e),\n      className: \"buttonAdjustments\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: style.textColor\n        },\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: display,\n      onHide: handleClose,\n      style: {\n        fontFamily: \"Signika\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: invalid ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"red\"\n            },\n            children: \"Invalid LogIn Credentials Try Again!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lead\",\n          children: \"Enter email and password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [emailLabel, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [userPasswordLabel, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"userPassword\",\n              value: userPassword,\n              onChange: e => setUserPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"\",\n          style: {\n            color: \"blue\",\n            margitRight: \"1px\"\n          },\n          onClick: () => handleForgotPassword(),\n          children: \"Forgot Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: style.buttonColor,\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: style.textColor\n            },\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: style.buttonColor,\n          onClick: handleSubmit,\n          children: localStorage.getItem(\"Loading\") ? /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: style.textColor\n            },\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: style.textColor\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n      displayPopUp: forgotPasswordPopUp,\n      setDisplayPopUp: setForgotPasswordPopUp,\n      title: forgotPasswordTitle,\n      body: forgotPasswordBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(LogInPopUP, \"DE6PZ88Hv8YaJfd5AANcA6iL/UY=\");\n_c = LogInPopUP;\nexport default LogInPopUP;\nvar _c;\n$RefreshReg$(_c, \"LogInPopUP\");","map":{"version":3,"names":["PopUp","Link","UserApiService","React","Modal","Button","useState","userSession","LogInPopUP","style","setLogIn","forgotPasswordPopUp","setForgotPasswordPopUp","forgotPasswordTitle","setForgotPasswordTitle","forgotPasswordBody","setForgotPasswordBody","display","setDisplay","invalid","setInvalid","email","setEmail","emailLabel","setEmailLabel","color","userPassword","setUserPassword","userPasswordLabel","setUserPasswordLabel","resetLabels","resetData","reset","localStorage","removeItem","handleClose","handleDisplay","e","preventDefault","handleSubmit","length","toBeAuthenticated","userName","password","logUserIn","then","response","status","data","userLoggedIn","id","fname","First_Name","lname","Last_Name","emailAddress","Email","Password","phone","addUser","catch","err","console","log","orderhistory","size","meals","price","orderDate","deliveryDate","handleForgotPassword","target","value","textColor","fontFamily","textAlign","margitRight","buttonColor","getItem"],"sources":["/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/NavBar/LogInPopUp/LogInPopUp.js"],"sourcesContent":["import PopUp from \"../../../SharedComponents/PopUp/PopUp\";\nimport { Link } from \"react-router-dom\";\nimport UserApiService from \"../../../Service/UserApiService\";\n/***\n * Will call backend API to authenticate user based on username and password\n */\n\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport userSession from \"../../../Service/userSession\";\n\nfunction LogInPopUP({ style, setLogIn }) {\n  \n  // forgot password popUP\n  const [forgotPasswordPopUp, setForgotPasswordPopUp] = useState(false);\n  const [forgotPasswordTitle, setForgotPasswordTitle] = useState(\"\");\n  const [forgotPasswordBody, setForgotPasswordBody] = useState(\"\");\n\n  // display pop up\n  const [display, setDisplay] = useState(false);\n\n  const [invalid, setInvalid] = useState(false);\n\n  // states for email, emailLabel\n  const [email, setEmail] = useState(\"\");\n  const [emailLabel, setEmailLabel] = useState(\n    <label htmlFor=\"email\" className=\"col-form-label\">\n      Enter email<span style={{ color: \"red\" }}>*</span>\n    </label>\n  );\n\n  // states for password, passwordLabel\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userPasswordLabel, setUserPasswordLabel] = useState(\n    <label htmlFor=\"userPassword\" className=\"col-form-label\">\n      Enter Password <span style={{ color: \"red\" }}>*</span>\n    </label>\n  );\n\n  // restores labels to black text and replace ** with *\n  // for eg. User Name ** in red will become User Name * in black\n  const resetLabels = () => {\n    setEmailLabel(\n      <label htmlFor=\"email\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          Enter email <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n    setUserPasswordLabel(\n      <label htmlFor=\"userPassword\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          Enter Password <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n\n    setInvalid(false);\n  };\n\n  // resets state of data\n  const resetData = () => {\n    setEmail(\"\");\n    setUserPassword(\"\");\n  };\n\n  // reset data & lables\n  const reset = () => {\n    localStorage.removeItem(\"Loading\");\n    resetData();\n    resetLabels();\n  };\n\n  //reset ALL states of data & CLOSE Pop Up\n  const handleClose = () => {\n    reset();\n    setDisplay(false);\n  };\n\n  const handleDisplay = (e) => {\n    e.preventDefault();\n    setDisplay(true);\n  };\n\n  /** User clicked on submit\n   * all fields were entered\n   * API interaction happens here\n   * Authenticate user from backend based on email & password\n   * get userinfo from backend and update userInfo global state\n   */\n  const handleSubmit = () => {\n    resetLabels();\n    if (email.length === 0) {\n      setEmailLabel(\n        <label htmlFor=\"email\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            Enter User Name <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else if (userPassword.length === 0) {\n      setUserPasswordLabel(\n        <label htmlFor=\"userPassword\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            Enter Password <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else {\n      const toBeAuthenticated = {\n        userName: email,\n        password: userPassword,\n      };\n      // API rough work: order history not fetched!\n      UserApiService.logUserIn(toBeAuthenticated)\n        .then((response) => {\n          localStorage.removeItem(\"Loading\");\n          if (response.status === 200) {\n            if (response.data.length !== 0) {\n              const userLoggedIn = {\n                id: response.data.id,\n                fname: response.data.First_Name,\n                lname: response.data.Last_Name,\n                emailAddress: response.data.Email,\n                password: response.data.Password,\n                phone: response.data.phone,\n              };\n              userSession.addUser(userLoggedIn);\n              setInvalid(false);\n              setLogIn(true);\n              handleClose();\n            } else {\n              // incorrect password!\n              setInvalid(true);\n            }\n          }\n        })\n        .catch((err) => {\n          localStorage.removeItem(\"Loading\");\n          setInvalid(true);\n          console.log(\"ERROR::: \" + err);\n        });\n\n      // IF username && password valid => following things\n\n      // setLogIn(true);\n\n      // need to receive more info from backend like name and order history\n      const orderhistory = [\n        {\n          size: 4,\n          meals: [\n            \"Punjabi Meal\",\n            \"Gujarati Meal\",\n            \"Bangladeshi Meal\",\n            \"Gujarati Meal\",\n          ],\n          price: 96,\n          orderDate: \"12/11/2022\",\n          deliveryDate: \"Sunday\",\n        },\n\n        {\n          size: 6,\n          meals: [\n            \"Punjabi Meal\",\n            \"Gujarati Meal\",\n            \"Bangladeshi Meal\",\n            \"Gujarati Meal\",\n            \"Gujarati Meal\",\n            \"Bangladeshi Meal\",\n          ],\n          price: 96,\n          orderDate: \"12/12/2022\",\n          deliveryDate: \"Friday\",\n        },\n      ];\n\n      /**\n       * Stuff is commented out because version 1.0 of backend API is being integrated\n       */\n\n      // const userReceived = {\n      //   fname: \"First\",\n      //   lname: \"Last\",\n      //   emailAddress: email,\n      //   password: userPassword,\n      //   orderHistory: orderhistory,\n      // };\n      // userSession.addUser(userReceived);\n      // handleClose();\n\n      // IF username || password invalid => take some action\n    }\n  };\n\n  const handleForgotPassword = () => {\n    handleClose();\n    setForgotPasswordPopUp(true);\n    setForgotPasswordTitle(\"Retreive Password\");\n    setForgotPasswordBody(\n      // <>\n\n      // </>\n      <form>\n        <div className=\"mb-3\">\n          <label htmlFor=\"email\" className=\"col-form-label\">\n            Enter email to receive Password\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter Email\"\n          />\n        </div>\n\n        <div className=\"mb-3\">\n          <Button variant=\"secondary\" onClick={handleClose}>\n            <span className=\"text-primary\">Get Password</span>\n          </Button>\n        </div>\n        <LogInPopUP style={style} setLogIn={setLogIn} />\n      </form>\n    );\n  };\n\n  return (\n    <>\n      {/* Log In Button on Red Box in Showcase */}\n      <button onClick={(e) => handleDisplay(e)} className=\"buttonAdjustments\">\n        <span style={{ color: style.textColor }}>Log In</span>\n      </button>\n\n      {/* Content in Pop Up */}\n      <Modal\n        show={display}\n        onHide={handleClose}\n        style={{ fontFamily: \"Signika\" }}\n      >\n        <Modal.Header closeButton style={{ textAlign: \"center\" }}>\n          <Modal.Title>\n            {invalid ? (\n              <span style={{ color: \"red\" }}>\n                Invalid LogIn Credentials Try Again!\n              </span>\n            ) : (\n              <span>Log In</span>\n            )}\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p className=\"lead\">Enter email and password</p>\n          <form>\n            <div className=\"mb-3\">\n              {emailLabel}\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              {userPasswordLabel}\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"userPassword\"\n                value={userPassword}\n                onChange={(e) => setUserPassword(e.target.value)}\n              />\n            </div>\n          </form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Link\n            to=\"\"\n            style={{ color: \"blue\", margitRight: \"1px\" }}\n            onClick={() => handleForgotPassword()}\n          >\n            Forgot Password\n          </Link>\n          <Button variant={style.buttonColor} onClick={handleClose}>\n            <span style={{ color: style.textColor }}>Close</span>\n          </Button>\n          {/* Submit Button Clicked */}\n          <Button variant={style.buttonColor} onClick={handleSubmit}>\n            {localStorage.getItem(\"Loading\") ? (\n              <span style={{ color: style.textColor }}>Loading...</span>\n            ) : (\n              <span style={{ color: style.textColor }}>Submit</span>\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <PopUp\n        displayPopUp={forgotPasswordPopUp}\n        setDisplayPopUp={setForgotPasswordPopUp}\n        title={forgotPasswordTitle}\n        body={forgotPasswordBody}\n      />\n    </>\n  );\n}\nexport default LogInPopUP;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,uCAAuC;AACzD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,cAAc,MAAM,iCAAiC;AAC5D;AACA;AACA;;AAEA,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,iBAAiB;AACvC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,8BAA8B;AAAC;AAAA;AAEvD,SAASC,UAAU,OAAsB;EAAA;EAAA,IAArB;IAAEC,KAAK;IAAEC;EAAS,CAAC;EAErC;EACA,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACO,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEhE;EACA,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,eAC1C;IAAO,OAAO,EAAC,OAAO;IAAC,SAAS,EAAC,gBAAgB;IAAA,WAAC,aACrC;MAAM,KAAK,EAAE;QAAEmB,KAAK,EAAE;MAAM,CAAE;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5C,CACT;;EAED;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvB,QAAQ,eACxD;IAAO,OAAO,EAAC,cAAc;IAAC,SAAS,EAAC,gBAAgB;IAAA,WAAC,iBACxC;MAAM,KAAK,EAAE;QAAEmB,KAAK,EAAE;MAAM,CAAE;MAAA,UAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAChD,CACT;;EAED;EACA;EACA,MAAMK,WAAW,GAAG,MAAM;IACxBN,aAAa,eACX;MAAO,OAAO,EAAC,OAAO;MAAC,SAAS,EAAC,gBAAgB;MAAA,uBAC/C;QAAM,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAA,WAAC,cACnB;UAAM,KAAK,EAAE;YAAEA,KAAK,EAAE;UAAM,CAAE;UAAA,UAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA;IAC9C;MAAA;MAAA;MAAA;IAAA,QACD,CACT;IACDI,oBAAoB,eAClB;MAAO,OAAO,EAAC,cAAc;MAAC,SAAS,EAAC,gBAAgB;MAAA,uBACtD;QAAM,KAAK,EAAE;UAAEJ,KAAK,EAAE;QAAQ,CAAE;QAAA,WAAC,iBAChB;UAAM,KAAK,EAAE;YAAEA,KAAK,EAAE;UAAM,CAAE;UAAA,UAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA;IACjD;MAAA;MAAA;MAAA;IAAA,QACD,CACT;IAEDL,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;;EAED;EACA,MAAMW,SAAS,GAAG,MAAM;IACtBT,QAAQ,CAAC,EAAE,CAAC;IACZK,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;;EAED;EACA,MAAMK,KAAK,GAAG,MAAM;IAClBC,YAAY,CAACC,UAAU,CAAC,SAAS,CAAC;IAClCH,SAAS,EAAE;IACXD,WAAW,EAAE;EACf,CAAC;;EAED;EACA,MAAMK,WAAW,GAAG,MAAM;IACxBH,KAAK,EAAE;IACPd,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMkB,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClBpB,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;EACE,MAAMqB,YAAY,GAAG,MAAM;IACzBT,WAAW,EAAE;IACb,IAAIT,KAAK,CAACmB,MAAM,KAAK,CAAC,EAAE;MACtBhB,aAAa,eACX;QAAO,OAAO,EAAC,OAAO;QAAC,SAAS,EAAC,gBAAgB;QAAA,uBAC/C;UAAM,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAM,CAAE;UAAA,WAAC,kBACb;YAAM,KAAK,EAAE;cAAEA,KAAK,EAAE;YAAM,CAAE;YAAA,UAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;UAAA;UAAA;UAAA;QAAA;MACnD;QAAA;QAAA;QAAA;MAAA,QACD,CACT;IACH,CAAC,MAAM,IAAIC,YAAY,CAACc,MAAM,KAAK,CAAC,EAAE;MACpCX,oBAAoB,eAClB;QAAO,OAAO,EAAC,cAAc;QAAC,SAAS,EAAC,gBAAgB;QAAA,uBACtD;UAAM,KAAK,EAAE;YAAEJ,KAAK,EAAE;UAAM,CAAE;UAAA,WAAC,iBACd;YAAM,KAAK,EAAE;cAAEA,KAAK,EAAE;YAAM,CAAE;YAAA,UAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAO;QAAA;UAAA;UAAA;UAAA;QAAA;MAClD;QAAA;QAAA;QAAA;MAAA,QACD,CACT;IACH,CAAC,MAAM;MACL,MAAMgB,iBAAiB,GAAG;QACxBC,QAAQ,EAAErB,KAAK;QACfsB,QAAQ,EAAEjB;MACZ,CAAC;MACD;MACAxB,cAAc,CAAC0C,SAAS,CAACH,iBAAiB,CAAC,CACxCI,IAAI,CAAEC,QAAQ,IAAK;QAClBb,YAAY,CAACC,UAAU,CAAC,SAAS,CAAC;QAClC,IAAIY,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UAC3B,IAAID,QAAQ,CAACE,IAAI,CAACR,MAAM,KAAK,CAAC,EAAE;YAC9B,MAAMS,YAAY,GAAG;cACnBC,EAAE,EAAEJ,QAAQ,CAACE,IAAI,CAACE,EAAE;cACpBC,KAAK,EAAEL,QAAQ,CAACE,IAAI,CAACI,UAAU;cAC/BC,KAAK,EAAEP,QAAQ,CAACE,IAAI,CAACM,SAAS;cAC9BC,YAAY,EAAET,QAAQ,CAACE,IAAI,CAACQ,KAAK;cACjCb,QAAQ,EAAEG,QAAQ,CAACE,IAAI,CAACS,QAAQ;cAChCC,KAAK,EAAEZ,QAAQ,CAACE,IAAI,CAACU;YACvB,CAAC;YACDnD,WAAW,CAACoD,OAAO,CAACV,YAAY,CAAC;YACjC7B,UAAU,CAAC,KAAK,CAAC;YACjBV,QAAQ,CAAC,IAAI,CAAC;YACdyB,WAAW,EAAE;UACf,CAAC,MAAM;YACL;YACAf,UAAU,CAAC,IAAI,CAAC;UAClB;QACF;MACF,CAAC,CAAC,CACDwC,KAAK,CAAEC,GAAG,IAAK;QACd5B,YAAY,CAACC,UAAU,CAAC,SAAS,CAAC;QAClCd,UAAU,CAAC,IAAI,CAAC;QAChB0C,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGF,GAAG,CAAC;MAChC,CAAC,CAAC;;MAEJ;;MAEA;;MAEA;MACA,MAAMG,YAAY,GAAG,CACnB;QACEC,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CACL,cAAc,EACd,eAAe,EACf,kBAAkB,EAClB,eAAe,CAChB;QACDC,KAAK,EAAE,EAAE;QACTC,SAAS,EAAE,YAAY;QACvBC,YAAY,EAAE;MAChB,CAAC,EAED;QACEJ,IAAI,EAAE,CAAC;QACPC,KAAK,EAAE,CACL,cAAc,EACd,eAAe,EACf,kBAAkB,EAClB,eAAe,EACf,eAAe,EACf,kBAAkB,CACnB;QACDC,KAAK,EAAE,EAAE;QACTC,SAAS,EAAE,YAAY;QACvBC,YAAY,EAAE;MAChB,CAAC,CACF;;MAED;AACN;AACA;;MAEM;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;IACF;EACF,CAAC;;EAED,MAAMC,oBAAoB,GAAG,MAAM;IACjCnC,WAAW,EAAE;IACbvB,sBAAsB,CAAC,IAAI,CAAC;IAC5BE,sBAAsB,CAAC,mBAAmB,CAAC;IAC3CE,qBAAqB;IAAA;IACnB;IAEA;IACA;MAAA,wBACE;QAAK,SAAS,EAAC,MAAM;QAAA,wBACnB;UAAO,OAAO,EAAC,OAAO;UAAC,SAAS,EAAC,gBAAgB;UAAA,UAAC;QAElD;UAAA;UAAA;UAAA;QAAA,QAAQ,eACR;UACE,IAAI,EAAC,MAAM;UACX,SAAS,EAAC,cAAc;UACxB,EAAE,EAAC,OAAO;UACV,KAAK,EAAEK,KAAM;UACb,QAAQ,EAAGgB,CAAC,IAAKf,QAAQ,CAACe,CAAC,CAACkC,MAAM,CAACC,KAAK,CAAE;UAC1C,WAAW,EAAC;QAAa;UAAA;UAAA;UAAA;QAAA,QACzB;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eAEN;QAAK,SAAS,EAAC,MAAM;QAAA,uBACnB,QAAC,MAAM;UAAC,OAAO,EAAC,WAAW;UAAC,OAAO,EAAErC,WAAY;UAAA,uBAC/C;YAAM,SAAS,EAAC,cAAc;YAAA,UAAC;UAAY;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA;MAC3C;QAAA;QAAA;QAAA;MAAA,QACL,eACN,QAAC,UAAU;QAAC,KAAK,EAAE1B,KAAM;QAAC,QAAQ,EAAEC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3C,CACR;EACH,CAAC;EAED,oBACE;IAAA,wBAEE;MAAQ,OAAO,EAAG2B,CAAC,IAAKD,aAAa,CAACC,CAAC,CAAE;MAAC,SAAS,EAAC,mBAAmB;MAAA,uBACrE;QAAM,KAAK,EAAE;UAAEZ,KAAK,EAAEhB,KAAK,CAACgE;QAAU,CAAE;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA;IAAO;MAAA;MAAA;MAAA;IAAA,QAC/C,eAGT,QAAC,KAAK;MACJ,IAAI,EAAExD,OAAQ;MACd,MAAM,EAAEkB,WAAY;MACpB,KAAK,EAAE;QAAEuC,UAAU,EAAE;MAAU,CAAE;MAAA,wBAEjC,QAAC,KAAK,CAAC,MAAM;QAAC,WAAW;QAAC,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAA,uBACvD,QAAC,KAAK,CAAC,KAAK;UAAA,UACTxD,OAAO,gBACN;YAAM,KAAK,EAAE;cAAEM,KAAK,EAAE;YAAM,CAAE;YAAA,UAAC;UAE/B;YAAA;YAAA;YAAA;UAAA,QAAO,gBAEP;YAAA,UAAM;UAAM;YAAA;YAAA;YAAA;UAAA;QACb;UAAA;UAAA;UAAA;QAAA;MACW;QAAA;QAAA;QAAA;MAAA,QACD,eAEf,QAAC,KAAK,CAAC,IAAI;QAAA,wBACT;UAAG,SAAS,EAAC,MAAM;UAAA,UAAC;QAAwB;UAAA;UAAA;UAAA;QAAA,QAAI,eAChD;UAAA,wBACE;YAAK,SAAS,EAAC,MAAM;YAAA,WAClBF,UAAU,eACX;cACE,IAAI,EAAC,MAAM;cACX,SAAS,EAAC,cAAc;cACxB,EAAE,EAAC,OAAO;cACV,KAAK,EAAEF,KAAM;cACb,QAAQ,EAAGgB,CAAC,IAAKf,QAAQ,CAACe,CAAC,CAACkC,MAAM,CAACC,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA,QAC1C;UAAA;YAAA;YAAA;YAAA;UAAA,QACE,eAEN;YAAK,SAAS,EAAC,MAAM;YAAA,WAClB5C,iBAAiB,eAClB;cACE,IAAI,EAAC,UAAU;cACf,SAAS,EAAC,cAAc;cACxB,EAAE,EAAC,cAAc;cACjB,KAAK,EAAEF,YAAa;cACpB,QAAQ,EAAGW,CAAC,IAAKV,eAAe,CAACU,CAAC,CAACkC,MAAM,CAACC,KAAK;YAAE;cAAA;cAAA;cAAA;YAAA,QACjD;UAAA;YAAA;YAAA;YAAA;UAAA,QACE;QAAA;UAAA;UAAA;UAAA;QAAA,QACD;MAAA;QAAA;QAAA;QAAA;MAAA,QACI,eAEb,QAAC,KAAK,CAAC,MAAM;QAAA,wBACX,QAAC,IAAI;UACH,EAAE,EAAC,EAAE;UACL,KAAK,EAAE;YAAE/C,KAAK,EAAE,MAAM;YAAEmD,WAAW,EAAE;UAAM,CAAE;UAC7C,OAAO,EAAE,MAAMN,oBAAoB,EAAG;UAAA,UACvC;QAED;UAAA;UAAA;UAAA;QAAA,QAAO,eACP,QAAC,MAAM;UAAC,OAAO,EAAE7D,KAAK,CAACoE,WAAY;UAAC,OAAO,EAAE1C,WAAY;UAAA,uBACvD;YAAM,KAAK,EAAE;cAAEV,KAAK,EAAEhB,KAAK,CAACgE;YAAU,CAAE;YAAA,UAAC;UAAK;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA,QAC9C,eAET,QAAC,MAAM;UAAC,OAAO,EAAEhE,KAAK,CAACoE,WAAY;UAAC,OAAO,EAAEtC,YAAa;UAAA,UACvDN,YAAY,CAAC6C,OAAO,CAAC,SAAS,CAAC,gBAC9B;YAAM,KAAK,EAAE;cAAErD,KAAK,EAAEhB,KAAK,CAACgE;YAAU,CAAE;YAAA,UAAC;UAAU;YAAA;YAAA;YAAA;UAAA,QAAO,gBAE1D;YAAM,KAAK,EAAE;cAAEhD,KAAK,EAAEhB,KAAK,CAACgE;YAAU,CAAE;YAAA,UAAC;UAAM;YAAA;YAAA;YAAA;UAAA;QAChD;UAAA;UAAA;UAAA;QAAA,QACM;MAAA;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA,QACT,eACR,QAAC,KAAK;MACJ,YAAY,EAAE9D,mBAAoB;MAClC,eAAe,EAAEC,sBAAuB;MACxC,KAAK,EAAEC,mBAAoB;MAC3B,IAAI,EAAEE;IAAmB;MAAA;MAAA;MAAA;IAAA,QACzB;EAAA,gBACD;AAEP;AAAC,GA3SQP,UAAU;AAAA,KAAVA,UAAU;AA4SnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}