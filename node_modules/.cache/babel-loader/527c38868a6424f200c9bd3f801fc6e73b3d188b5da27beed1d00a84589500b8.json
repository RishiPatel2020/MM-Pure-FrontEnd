{"ast":null,"code":"var _jsxFileName = \"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/PickMeals/PickMeals.js\",\n  _s = $RefreshSig$();\n/**\n *  For now can look in csv file for meal data based on zip code entered\n *  Scaling: might need API call to search meal info based on given zip code\n */\n\nimport SignUpPopUp from \"../NavBar/SignUpPopUp/SignUpPopUp\";\nimport LogInPopUP from \"../NavBar/LogInPopUp/LogInPopUp\";\nimport userSession from \"../../Service/userSession\";\nimport PopUp from \"../../SharedComponents/PopUp/PopUp\";\nimport \"./PickMeals.css\";\nimport { useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport ScrollTop from \"../../Service/ScrollTop\";\nimport MealData from \"../../Service/MealData\";\nimport { logDOM } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PickMeals = _ref => {\n  _s();\n  let {\n    zipCode,\n    cart,\n    setCart,\n    mealNumbers,\n    setMealNumbers,\n    setResetOrderPageInfo,\n    numMealsSelected,\n    setNumMealsSelected,\n    setLogIn,\n    numMeals\n  } = _ref;\n  // so we can go back to orderPage\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log(\"ZIPCODE ON PM RENDERED::: \" + zipCode);\n    // if zipCode not provided, go back to order page\n    if (zipCode.length === 0) {\n      console.log(\"NO ZIPCODE; GO BACK TO ORDER AND RESET EVERYTHING\");\n      setResetOrderPageInfo(2); // if no zip code; go back to order page and have user fill out all the fields\n      navigate(\"/order\");\n    } else {\n      // scroll up only once when user arrives on this page\n      ScrollTop.scrollUp();\n      if (mealNumbers.length === 0) {\n        setMealNumbers(new Array(data.length).fill(0));\n        console.log(\"RESETTING CART\");\n        // should do this in case of payment success\n      }\n    }\n  }, []);\n  const data = MealData.getMeals();\n\n  // pop up to show description/ingridents to users\n  const [show, setShow] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [mealSelected, setMealSelected] = useState(\"\");\n\n  // What if user wants to reset freq, zipcode, etc...?? => we let user go back to OrderPage\n  const backToOrderPage = () => {\n    setCart([]);\n    setMealNumbers([]);\n    setResetOrderPageInfo(2); // reset everything in orderPage\n    console.log(\"<== BACK BUTTON CLICKED...\");\n    navigate(\"/order\");\n  };\n\n  // Handles PopUp display\n  const handleDisplay = (description, mealName) => {\n    setDescription(description);\n    setMealSelected(mealName);\n    setShow(true);\n  };\n\n  // closes description pop up when user closes it\n  const handleClose = () => {\n    setDescription(\"\");\n    setMealSelected(\"\");\n    setShow(false);\n  };\n\n  /**\n   * @Goal ADD item to cart && increment quantity by 1\n   * @param idNum of item to be added\n   * 1. Increment quantity in mealNumbers at index \"id\"\n   * 2. Update cart by setCart()\n   */\n\n  const add = idNum => {\n    setNumMealsSelected(numMealsSelected => numMealsSelected + 1);\n    // will have to add PRICE\n    const addToCart = {\n      id: idNum,\n      mealName: data[idNum].mealName,\n      description: data[idNum].description,\n      price: data[idNum].price\n    };\n    const tempArray = [];\n    if (cart.length === 0) {\n      // cart is empty\n      tempArray.push(addToCart);\n      setCart(tempArray);\n    } else {\n      // cart is NOT empty; 2 cases: idNum IS in cart OR NOT in the cart\n\n      // don't wanna add duplicate items\n      let found = false;\n      cart.forEach(element => {\n        if (element.id === idNum) {\n          found = true;\n        }\n        tempArray.push(element);\n      });\n\n      // adding item first time\n      if (!found) {\n        tempArray.push(addToCart);\n      }\n      setCart(tempArray); // Update cart to display correct items in cart\n    }\n\n    mealNumbers[idNum]++; // increment quantity in mealNumbers at index \"idNum\"\n    const newAr = [];\n    mealNumbers.map(item => {\n      newAr.push(item);\n    });\n    setMealNumbers(newAr); // Update mealNumbers to display correct quantity numbers in cart AND pickMeals page\n  };\n\n  /**\n   * @Goal REMOVE item from cart && decrement quantity by 1\n   * @param id of item to be removed/reduced\n   * 1. Decrement quantity in mealNumbers at index \"idNum\"\n   * 2. Update cart by setCart()\n   */\n  const remove = id => {\n    // CANNOT have quantity < 0\n    if (mealNumbers[id] > 0) {\n      setNumMealsSelected(numMealsSelected => numMealsSelected - 1);\n      mealNumbers[id]--; // decrement quantity in mealNumbers at index \"id\"\n      const newAr = [];\n      mealNumbers.map(item => {\n        newAr.push(item);\n      });\n      setMealNumbers(newAr); // update mealNumbers\n\n      if (mealNumbers[id] === 0) {\n        // if item is reduced to 0 in cart, cart should be updated so we don't have an item in cart whose quantity = 0\n        const tempCart = [];\n        cart.forEach(element => {\n          if (element.id !== id) {\n            tempCart.push(element);\n          }\n        });\n        setCart(tempCart);\n      }\n    }\n  };\n\n  // log in warnin\n  const [displayPopUp, setDisplayPopUp] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [displayEnoughPopUp, setDisplayEnoughPopUp] = useState(false);\n  const [titleEnough, setTitleEnough] = useState(\"\");\n  const [bodyEnough, setBodyEnough] = useState(\"\");\n  {\n    /* remove this after stripe */\n  }\n  const [successPopUp, setSuccessPopUp] = useState(false);\n  const [successTitle, setSuccessTitle] = useState(\"\");\n  const [successBody, setSuccessBody] = useState(\"\");\n\n  /**\n   * send Data to DB for DA purporses\n   * STRIP INTEGRATION\n   */\n  const handleCheckOut = () => {\n    if (numMeals === \"12+ Meals\" && numMealsSelected < 12) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select at least 12 meals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }, this));\n      setDisplayEnoughPopUp(true);\n    } else if (parseInt(numMeals[0]) > numMealsSelected) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Select at least \", numMeals[0], \" meals\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this));\n      setDisplayEnoughPopUp(true);\n    } else if (!userSession.isLoggedIn()) {\n      setTitle(\"LogIn/SignUp\");\n      setBody( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container align-items-center d-flex justify-content-center\",\n        style: {\n          fontFamily: \"Signika\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            padding: \"20px\"\n          },\n          className: \"rounded\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"exampleInputEmail1\",\n                className: \"mb-4\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"lead\",\n                  children: \"Log in or Sign Up to continue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container text-center mb-4\",\n            children: /*#__PURE__*/_jsxDEV(LogInPopUP, {\n              style: {\n                buttonColor: \"secondary\",\n                textColor: \"white\"\n              },\n              setLogIn: setLogIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container text-center\",\n            children: /*#__PURE__*/_jsxDEV(SignUpPopUp, {\n              style: {\n                buttonColor: \"secondary\",\n                textColor: \"white\"\n              },\n              setLogIn: setLogIn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this));\n      setDisplayPopUp(true);\n    } else {\n      setSuccessTitle(\"GO TO STRIPE\");\n      setSuccessBody( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You can proceed to stripe checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 22\n      }, this));\n      setSuccessPopUp(true);\n    }\n  };\n  const pageContent = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"justify-content-center backButtonContainer\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          className: \"position-fixed backButton\",\n          onClick: () => backToOrderPage(),\n          style: {\n            fontFamily: \"Signika\",\n            color: \"white\"\n          },\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        style: {\n          fontFamily: \"Signika\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          className: \"text-dark my-4 customCss\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              marginTop: \"66px\",\n              marginBottom: \"32px\"\n            },\n            xs: \"auto\",\n            children: [data.map(item => {\n              const {\n                id,\n                img,\n                mealName,\n                description,\n                price\n              } = item;\n              return /*#__PURE__*/_jsxDEV(Col, {\n                className: \"p-3 spacesBetweenBoxes\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: img,\n                    className: \"img-fluid imageAdjustment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                    className: \"titleAdjustment\",\n                    children: mealName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"del\", {\n                      className: \"mx-2\",\n                      children: \"$15.99\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 27\n                    }, this), \"$\", price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Link, {\n                    onClick: () => handleDisplay(description, mealName),\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-light descriptionAdjustment\",\n                      children: \"Description/Ingridients\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"light\",\n                    onClick: () => remove(id),\n                    className: \"buttonAdjustment\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"letterAdjustment\",\n                      children: \"-\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"amountAdjustment\",\n                    children: mealNumbers[id]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"light\",\n                    onClick: () => add(id),\n                    className: \"buttonAdjustment\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"letterAdjustment\",\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 285,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(Modal, {\n              show: show,\n              onHide: handleClose,\n              style: {\n                fontFamily: \"Signika\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n                closeButton: true,\n                children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n                  children: mealSelected\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n                children: Object.keys(description).map(key => {\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [`${key} : ${description[key]}`, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"light\",\n                  onClick: handleClose,\n                  children: \"Close\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-100 d-flex align-items-center justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"secondary\",\n                className: \"text-primary checkOutButton\",\n                onClick: () => handleCheckOut(),\n                children: \"Check Out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), (numMealsSelected === 0 || !userSession.isLoggedIn()) && /*#__PURE__*/_jsxDEV(PopUp, {\n          displayPopUp: displayPopUp,\n          setDisplayPopUp: setDisplayPopUp,\n          title: title,\n          body: body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n          displayPopUp: displayEnoughPopUp,\n          setDisplayPopUp: setDisplayEnoughPopUp,\n          title: titleEnough,\n          body: bodyEnough\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n          displayPopUp: successPopUp,\n          setDisplayPopUp: setSuccessPopUp,\n          title: successTitle,\n          body: successBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  const loading = () => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center lead\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 12\n    }, this);\n  };\n\n  // return (\n  //   <>\n  //     <div className=\"justify-content-center backButtonContainer\">\n  //       <Button\n  //         variant=\"secondary\"\n  //         className=\"position-fixed backButton\"\n  //         onClick={() => backToOrderPage()}\n  //         style={{ fontFamily: \"Signika\", color: \"white\" }}\n  //       >\n  //         Back\n  //       </Button>\n  //     </div>\n  //     <section style={{ fontFamily: \"Signika\" }}>\n  //       <Container className=\"text-dark my-4 customCss\">\n  //         <Row style={{ marginTop: \"66px\", marginBottom: \"32px\" }} xs=\"auto\">\n  //           {data.map((item) => {\n  //             const { id, img, mealName, description, price } = item;\n  //             return (\n  //               <Col key={id} className=\"p-3 spacesBetweenBoxes\">\n  //                 <div className=\"card-body text-center\">\n  //                   <img src={img} className=\"img-fluid imageAdjustment\" />\n  //                   <h4 className=\"titleAdjustment\">{mealName}</h4>\n  //                   <h5><del className=\"mx-2\">$15.99</del>${price}</h5>\n  //                   <Link onClick={() => handleDisplay(description, mealName)}>\n  //                     <p className=\"text-light descriptionAdjustment\">\n  //                       Description/Ingridients\n  //                     </p>\n  //                   </Link>\n\n  //                   <Button\n  //                     variant=\"light\"\n  //                     onClick={() => remove(id)}\n  //                     className=\"buttonAdjustment\"\n  //                   >\n  //                     <span className=\"letterAdjustment\">-</span>\n  //                   </Button>\n\n  //                   <span className=\"amountAdjustment\">{mealNumbers[id]}</span>\n\n  //                   <Button\n  //                     variant=\"light\"\n  //                     onClick={() => add(id)}\n  //                     className=\"buttonAdjustment\"\n  //                   >\n  //                     <span className=\"letterAdjustment\">+</span>\n  //                   </Button>\n  //                 </div>\n  //               </Col>\n  //             );\n  //           })}\n\n  //           <Modal\n  //             show={show}\n  //             onHide={handleClose}\n  //             style={{ fontFamily: \"Signika\" }}\n  //           >\n  //             <Modal.Header closeButton>\n  //               <Modal.Title>{mealSelected}</Modal.Title>\n  //             </Modal.Header>\n  //             <Modal.Body>\n  //               {Object.keys(description).map((key) => {\n  //                 return (\n  //                   <span>\n  //                     {`${key} : ${description[key]}`}\n  //                     <br></br>\n  //                   </span>\n  //                 );\n  //               })}\n  //             </Modal.Body>\n  //             <Modal.Footer>\n  //               <Button variant=\"light\" onClick={handleClose}>\n  //                 Close\n  //               </Button>\n  //             </Modal.Footer>\n  //           </Modal>\n  //         </Row>\n\n  //         <Row>\n  //           {/* Only show checkout button if # of item > 0 */}\n\n  //           <div className=\"h-100 d-flex align-items-center justify-content-center\">\n  //             <Button\n  //               variant=\"secondary\"\n  //               className=\"text-primary checkOutButton\"\n  //               onClick={() => handleCheckOut()}\n  //             >\n  //               Check Out\n  //             </Button>\n  //           </div>\n  //         </Row>\n  //       </Container>\n  //       {/* should probably remove 1st condition */}\n  //       {(numMealsSelected === 0 || !userSession.isLoggedIn()) && (\n  //         <PopUp\n  //           displayPopUp={displayPopUp}\n  //           setDisplayPopUp={setDisplayPopUp}\n  //           title={title}\n  //           body={body}\n  //         />\n  //       )}\n\n  //       <PopUp\n  //         displayPopUp={displayEnoughPopUp}\n  //         setDisplayPopUp={setDisplayEnoughPopUp}\n  //         title={titleEnough}\n  //         body={bodyEnough}\n  //       />\n\n  //       {/* remove this after stripe */}\n  //       <PopUp\n  //         displayPopUp={successPopUp}\n  //         setDisplayPopUp={setSuccessPopUp}\n  //         title={successTitle}\n  //         body={successBody}\n  //       />\n  //     </section>\n  //   </>\n  // );\n\n  return {};\n};\n_s(PickMeals, \"rK9joieKoWXbOJ6IdHglEb9r0l8=\", false, function () {\n  return [useNavigate];\n});\n_c = PickMeals;\nexport default PickMeals;\nvar _c;\n$RefreshReg$(_c, \"PickMeals\");","map":{"version":3,"names":["SignUpPopUp","LogInPopUP","userSession","PopUp","useEffect","Container","Row","Col","Link","useState","Modal","Button","useNavigate","ScrollTop","MealData","logDOM","PickMeals","zipCode","cart","setCart","mealNumbers","setMealNumbers","setResetOrderPageInfo","numMealsSelected","setNumMealsSelected","setLogIn","numMeals","navigate","console","log","length","scrollUp","Array","data","fill","getMeals","show","setShow","description","setDescription","mealSelected","setMealSelected","backToOrderPage","handleDisplay","mealName","handleClose","add","idNum","addToCart","id","price","tempArray","push","found","forEach","element","newAr","map","item","remove","tempCart","displayPopUp","setDisplayPopUp","title","setTitle","body","setBody","displayEnoughPopUp","setDisplayEnoughPopUp","titleEnough","setTitleEnough","bodyEnough","setBodyEnough","successPopUp","setSuccessPopUp","successTitle","setSuccessTitle","successBody","setSuccessBody","handleCheckOut","parseInt","isLoggedIn","fontFamily","padding","buttonColor","textColor","pageContent","color","marginTop","marginBottom","img","Object","keys","key","loading"],"sources":["/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/PickMeals/PickMeals.js"],"sourcesContent":["/**\n *  For now can look in csv file for meal data based on zip code entered\n *  Scaling: might need API call to search meal info based on given zip code\n */\n\n\nimport SignUpPopUp from \"../NavBar/SignUpPopUp/SignUpPopUp\";\nimport LogInPopUP from \"../NavBar/LogInPopUp/LogInPopUp\";\nimport userSession from \"../../Service/userSession\";\nimport PopUp from \"../../SharedComponents/PopUp/PopUp\";\nimport \"./PickMeals.css\";\nimport { useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport ScrollTop from \"../../Service/ScrollTop\";\nimport MealData from \"../../Service/MealData\";\nimport { logDOM } from \"@testing-library/react\";\nconst PickMeals = ({\n  zipCode,\n  cart,\n  setCart,\n  mealNumbers,\n  setMealNumbers,\n  setResetOrderPageInfo,\n  numMealsSelected,\n  setNumMealsSelected,\n  setLogIn,\n  numMeals,\n}) => {\n  // so we can go back to orderPage\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    console.log(\"ZIPCODE ON PM RENDERED::: \" + zipCode);\n    // if zipCode not provided, go back to order page\n    if (zipCode.length === 0) {\n      console.log(\"NO ZIPCODE; GO BACK TO ORDER AND RESET EVERYTHING\");\n      setResetOrderPageInfo(2); // if no zip code; go back to order page and have user fill out all the fields\n      navigate(\"/order\");\n    } else {\n      // scroll up only once when user arrives on this page\n      ScrollTop.scrollUp();\n      if (mealNumbers.length === 0) {\n        setMealNumbers(new Array(data.length).fill(0));\n        console.log(\"RESETTING CART\");\n        // should do this in case of payment success\n      }\n    }\n  }, []);\n\n  const data = MealData.getMeals();\n\n  // pop up to show description/ingridents to users\n  const [show, setShow] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [mealSelected, setMealSelected] = useState(\"\");\n\n  // What if user wants to reset freq, zipcode, etc...?? => we let user go back to OrderPage\n  const backToOrderPage = () => {\n    setCart([]);\n    setMealNumbers([]);\n    setResetOrderPageInfo(2); // reset everything in orderPage\n    console.log(\"<== BACK BUTTON CLICKED...\");\n    navigate(\"/order\");\n  };\n\n  // Handles PopUp display\n  const handleDisplay = (description, mealName) => {\n    setDescription(description);\n    setMealSelected(mealName);\n    setShow(true);\n  };\n\n  // closes description pop up when user closes it\n  const handleClose = () => {\n    setDescription(\"\");\n    setMealSelected(\"\");\n    setShow(false);\n  };\n\n  /**\n   * @Goal ADD item to cart && increment quantity by 1\n   * @param idNum of item to be added\n   * 1. Increment quantity in mealNumbers at index \"id\"\n   * 2. Update cart by setCart()\n   */\n\n  const add = (idNum) => {\n    setNumMealsSelected((numMealsSelected) => numMealsSelected + 1);\n    // will have to add PRICE\n    const addToCart = {\n      id: idNum,\n      mealName: data[idNum].mealName,\n      description: data[idNum].description,\n      price: data[idNum].price,\n    };\n\n    const tempArray = [];\n\n    if (cart.length === 0) {\n      // cart is empty\n      tempArray.push(addToCart);\n      setCart(tempArray);\n    } else {\n      // cart is NOT empty; 2 cases: idNum IS in cart OR NOT in the cart\n\n      // don't wanna add duplicate items\n      let found = false;\n\n      cart.forEach((element) => {\n        if (element.id === idNum) {\n          found = true;\n        }\n        tempArray.push(element);\n      });\n\n      // adding item first time\n      if (!found) {\n        tempArray.push(addToCart);\n      }\n      setCart(tempArray); // Update cart to display correct items in cart\n    }\n\n    mealNumbers[idNum]++; // increment quantity in mealNumbers at index \"idNum\"\n    const newAr = [];\n    mealNumbers.map((item) => {\n      newAr.push(item);\n    });\n    setMealNumbers(newAr); // Update mealNumbers to display correct quantity numbers in cart AND pickMeals page\n  };\n\n  /**\n   * @Goal REMOVE item from cart && decrement quantity by 1\n   * @param id of item to be removed/reduced\n   * 1. Decrement quantity in mealNumbers at index \"idNum\"\n   * 2. Update cart by setCart()\n   */\n  const remove = (id) => {\n    // CANNOT have quantity < 0\n    if (mealNumbers[id] > 0) {\n      setNumMealsSelected((numMealsSelected) => numMealsSelected - 1);\n      mealNumbers[id]--; // decrement quantity in mealNumbers at index \"id\"\n      const newAr = [];\n      mealNumbers.map((item) => {\n        newAr.push(item);\n      });\n      setMealNumbers(newAr); // update mealNumbers\n\n      if (mealNumbers[id] === 0) {\n        // if item is reduced to 0 in cart, cart should be updated so we don't have an item in cart whose quantity = 0\n        const tempCart = [];\n        cart.forEach((element) => {\n          if (element.id !== id) {\n            tempCart.push(element);\n          }\n        });\n        setCart(tempCart);\n      }\n    }\n  };\n\n  // log in warnin\n  const [displayPopUp, setDisplayPopUp] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const [displayEnoughPopUp, setDisplayEnoughPopUp] = useState(false);\n  const [titleEnough, setTitleEnough] = useState(\"\");\n  const [bodyEnough, setBodyEnough] = useState(\"\");\n\n  {\n    /* remove this after stripe */\n  }\n  const [successPopUp, setSuccessPopUp] = useState(false);\n  const [successTitle, setSuccessTitle] = useState(\"\");\n  const [successBody, setSuccessBody] = useState(\"\");\n\n  /**\n   * send Data to DB for DA purporses\n   * STRIP INTEGRATION\n   */\n  const handleCheckOut = () => {\n    if (numMeals === \"12+ Meals\" && numMealsSelected < 12) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough(<p>Select at least 12 meals</p>);\n      setDisplayEnoughPopUp(true);\n    } else if (parseInt(numMeals[0]) > numMealsSelected) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough(<p>Select at least {numMeals[0]} meals</p>);\n      setDisplayEnoughPopUp(true);\n    } else if (!userSession.isLoggedIn()) {\n      setTitle(\"LogIn/SignUp\");\n\n      setBody(\n        <div\n          className=\"container align-items-center d-flex justify-content-center\"\n          style={{ fontFamily: \"Signika\" }}\n        >\n          <form style={{ padding: \"20px\" }} className=\"rounded\">\n            <Row className=\"\">\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\" className=\"mb-4\">\n                  <p className=\"lead\">Log in or Sign Up to continue</p>\n                </label>\n              </div>\n            </Row>\n\n            <div className=\"container text-center mb-4\">\n              <LogInPopUP\n                style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n                setLogIn={setLogIn}\n              />\n            </div>\n\n            <div className=\"container text-center\">\n              {/* <Button variant=\"dark\" className=\"\">\n                Log In\n              </Button> */}\n              <SignUpPopUp\n                style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n                setLogIn={setLogIn}\n              />\n            </div>\n          </form>\n        </div>\n      );\n      setDisplayPopUp(true);\n    } else {\n      setSuccessTitle(\"GO TO STRIPE\");\n      setSuccessBody(<p>You can proceed to stripe checkout</p>);\n      setSuccessPopUp(true);\n    }\n  };\n\n\n  const pageContent = ()=>{\n    return (\n      <>\n        <div className=\"justify-content-center backButtonContainer\">\n          <Button\n            variant=\"secondary\"\n            className=\"position-fixed backButton\"\n            onClick={() => backToOrderPage()}\n            style={{ fontFamily: \"Signika\", color: \"white\" }}\n          >\n            Back\n          </Button>\n        </div>\n        <section style={{ fontFamily: \"Signika\" }}>\n          <Container className=\"text-dark my-4 customCss\">\n            <Row style={{ marginTop: \"66px\", marginBottom: \"32px\" }} xs=\"auto\">\n              {data.map((item) => {\n                const { id, img, mealName, description, price } = item;\n                return (\n                  <Col key={id} className=\"p-3 spacesBetweenBoxes\">\n                    <div className=\"card-body text-center\">\n                      <img src={img} className=\"img-fluid imageAdjustment\" />\n                      <h4 className=\"titleAdjustment\">{mealName}</h4>\n                      <h5><del className=\"mx-2\">$15.99</del>${price}</h5>\n                      <Link onClick={() => handleDisplay(description, mealName)}>\n                        <p className=\"text-light descriptionAdjustment\">\n                          Description/Ingridients\n                        </p>\n                      </Link>\n  \n                      <Button\n                        variant=\"light\"\n                        onClick={() => remove(id)}\n                        className=\"buttonAdjustment\"\n                      >\n                        <span className=\"letterAdjustment\">-</span>\n                      </Button>\n  \n                      <span className=\"amountAdjustment\">{mealNumbers[id]}</span>\n  \n                      <Button\n                        variant=\"light\"\n                        onClick={() => add(id)}\n                        className=\"buttonAdjustment\"\n                      >\n                        <span className=\"letterAdjustment\">+</span>\n                      </Button>\n                    </div>\n                  </Col>\n                );\n              })}\n  \n              <Modal\n                show={show}\n                onHide={handleClose}\n                style={{ fontFamily: \"Signika\" }}\n              >\n                <Modal.Header closeButton>\n                  <Modal.Title>{mealSelected}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  {Object.keys(description).map((key) => {\n                    return (\n                      <span>\n                        {`${key} : ${description[key]}`}\n                        <br></br>\n                      </span>\n                    );\n                  })}\n                </Modal.Body>\n                <Modal.Footer>\n                  <Button variant=\"light\" onClick={handleClose}>\n                    Close\n                  </Button>\n                </Modal.Footer>\n              </Modal>\n            </Row>\n  \n            <Row>\n              {/* Only show checkout button if # of item > 0 */}\n  \n              <div className=\"h-100 d-flex align-items-center justify-content-center\">\n                <Button\n                  variant=\"secondary\"\n                  className=\"text-primary checkOutButton\"\n                  onClick={() => handleCheckOut()}\n                >\n                  Check Out\n                </Button>\n              </div>\n            </Row>\n          </Container>\n          {/* should probably remove 1st condition */}\n          {(numMealsSelected === 0 || !userSession.isLoggedIn()) && (\n            <PopUp\n              displayPopUp={displayPopUp}\n              setDisplayPopUp={setDisplayPopUp}\n              title={title}\n              body={body}\n            />\n          )}\n  \n          <PopUp\n            displayPopUp={displayEnoughPopUp}\n            setDisplayPopUp={setDisplayEnoughPopUp}\n            title={titleEnough}\n            body={bodyEnough}\n          />\n  \n          {/* remove this after stripe */}\n          <PopUp\n            displayPopUp={successPopUp}\n            setDisplayPopUp={setSuccessPopUp}\n            title={successTitle}\n            body={successBody}\n          />\n        </section>\n      </>\n    ); \n  }\n\n  const loading = ()=>{\n    return(<p className=\"text-center lead\">Loading...</p>)\n  }\n\n  // return (\n  //   <>\n  //     <div className=\"justify-content-center backButtonContainer\">\n  //       <Button\n  //         variant=\"secondary\"\n  //         className=\"position-fixed backButton\"\n  //         onClick={() => backToOrderPage()}\n  //         style={{ fontFamily: \"Signika\", color: \"white\" }}\n  //       >\n  //         Back\n  //       </Button>\n  //     </div>\n  //     <section style={{ fontFamily: \"Signika\" }}>\n  //       <Container className=\"text-dark my-4 customCss\">\n  //         <Row style={{ marginTop: \"66px\", marginBottom: \"32px\" }} xs=\"auto\">\n  //           {data.map((item) => {\n  //             const { id, img, mealName, description, price } = item;\n  //             return (\n  //               <Col key={id} className=\"p-3 spacesBetweenBoxes\">\n  //                 <div className=\"card-body text-center\">\n  //                   <img src={img} className=\"img-fluid imageAdjustment\" />\n  //                   <h4 className=\"titleAdjustment\">{mealName}</h4>\n  //                   <h5><del className=\"mx-2\">$15.99</del>${price}</h5>\n  //                   <Link onClick={() => handleDisplay(description, mealName)}>\n  //                     <p className=\"text-light descriptionAdjustment\">\n  //                       Description/Ingridients\n  //                     </p>\n  //                   </Link>\n\n  //                   <Button\n  //                     variant=\"light\"\n  //                     onClick={() => remove(id)}\n  //                     className=\"buttonAdjustment\"\n  //                   >\n  //                     <span className=\"letterAdjustment\">-</span>\n  //                   </Button>\n\n  //                   <span className=\"amountAdjustment\">{mealNumbers[id]}</span>\n\n  //                   <Button\n  //                     variant=\"light\"\n  //                     onClick={() => add(id)}\n  //                     className=\"buttonAdjustment\"\n  //                   >\n  //                     <span className=\"letterAdjustment\">+</span>\n  //                   </Button>\n  //                 </div>\n  //               </Col>\n  //             );\n  //           })}\n\n  //           <Modal\n  //             show={show}\n  //             onHide={handleClose}\n  //             style={{ fontFamily: \"Signika\" }}\n  //           >\n  //             <Modal.Header closeButton>\n  //               <Modal.Title>{mealSelected}</Modal.Title>\n  //             </Modal.Header>\n  //             <Modal.Body>\n  //               {Object.keys(description).map((key) => {\n  //                 return (\n  //                   <span>\n  //                     {`${key} : ${description[key]}`}\n  //                     <br></br>\n  //                   </span>\n  //                 );\n  //               })}\n  //             </Modal.Body>\n  //             <Modal.Footer>\n  //               <Button variant=\"light\" onClick={handleClose}>\n  //                 Close\n  //               </Button>\n  //             </Modal.Footer>\n  //           </Modal>\n  //         </Row>\n\n  //         <Row>\n  //           {/* Only show checkout button if # of item > 0 */}\n\n  //           <div className=\"h-100 d-flex align-items-center justify-content-center\">\n  //             <Button\n  //               variant=\"secondary\"\n  //               className=\"text-primary checkOutButton\"\n  //               onClick={() => handleCheckOut()}\n  //             >\n  //               Check Out\n  //             </Button>\n  //           </div>\n  //         </Row>\n  //       </Container>\n  //       {/* should probably remove 1st condition */}\n  //       {(numMealsSelected === 0 || !userSession.isLoggedIn()) && (\n  //         <PopUp\n  //           displayPopUp={displayPopUp}\n  //           setDisplayPopUp={setDisplayPopUp}\n  //           title={title}\n  //           body={body}\n  //         />\n  //       )}\n\n  //       <PopUp\n  //         displayPopUp={displayEnoughPopUp}\n  //         setDisplayPopUp={setDisplayEnoughPopUp}\n  //         title={titleEnough}\n  //         body={bodyEnough}\n  //       />\n\n  //       {/* remove this after stripe */}\n  //       <PopUp\n  //         displayPopUp={successPopUp}\n  //         setDisplayPopUp={setSuccessPopUp}\n  //         title={successTitle}\n  //         body={successBody}\n  //       />\n  //     </section>\n  //   </>\n  // );\n\n  return(\n    {}\n  )\n};\n\nexport default PickMeals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}