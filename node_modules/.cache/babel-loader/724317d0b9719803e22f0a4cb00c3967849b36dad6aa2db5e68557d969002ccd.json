{"ast":null,"code":"import _slicedToArray from\"/workspaces/MM-Pure-FrontEnd/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import logo from\"./logo192.png\";import PopUp from\"../PopUp\";import userSession from\"../../../Service/userSession\";import StripeCheckout from\"react-stripe-checkout\";import OrderAPIService from\"../../../Service/OrderAPIService\";import{useEffect}from\"react\";import StripeBackend from\"../../../Service/StripeBackend\";import{useState}from\"react\";import React from\"react\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Payment=function Payment(_ref){var cart=_ref.cart,setCart=_ref.setCart,mealNumbers=_ref.mealNumbers,cartPrice=_ref.cartPrice,setCartPrice=_ref.setCartPrice,setNumMealsSelected=_ref.setNumMealsSelected,delivDate=_ref.delivDate;// To give users live update about making payment & storing order\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),statusPopUp=_useState2[0],setStatusPopUp=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),statusTitle=_useState4[0],setStatusTitle=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),statusBody=_useState6[0],setStatusBody=_useState6[1];var STRIPE_KEY=\"pk_test_51MLGUDLxe44udBspRQVfTcgFGVZRI6NRIlrfX4lexUptlrYTJjsqfJZFBeDrKXdyOCiJVVQKcD88WAQDsNPVWZ9b00bKBn0FaU\";// stripeToken will have store shipping info\nvar _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),stripeToken=_useState8[0],setStripeToken=_useState8[1];var onToken=function onToken(token){setStripeToken(token);console.log(\"TOKEN::: \"+JSON.stringify(token));};var _useState9=useState(Math.round((cartPrice+cartPrice*0.06625+3)*100)/100),_useState10=_slicedToArray(_useState9,2),amount=_useState10[0],setAmount=_useState10[1];useEffect(function(){setAmount(Math.round((cartPrice+cartPrice*0.06625+3)*100)/100);},[cartPrice]);useEffect(function(){console.log(\"CART PRICE:: \"+cartPrice+\":: type:: \"+typeof cartPrice);console.log(\"AMOUNT:: \"+amount+\":: type:: \"+typeof amount);var makeRequest=function makeRequest(){setStatusTitle(\"Payment Status\");// Sending req to backend to create charge based on card details entered by user..\nStripeBackend.requestToServer(stripeToken,Math.round(((cartPrice+3)*0.06625+(cartPrice+3))*100)/100,setStatusBody,setStatusPopUp)// Response received from backend and we know if payment succeded or not\n.then(function(res){// Payment failed\nif(res.status===206){setStatusBody(res.data);// let user view err msg for 2s; close pop up; reopen payment pop up\nsetTimeout(function(){document.getElementById(\"hiddenPaymentButton\").click();},2000);}else{// Successful payment; so, STORE ORDER IN DB\nsetStatusBody(\"Successful Payment!\");setTimeout(function(){setStatusTitle(\"Order Status\");setStatusBody(\"Sending Order to DB....\");},1000);setTimeout(function(){// mealAndFreqsArr is in format: [[id1,q1],[id2,q2]....]\nvar mealAndFreqsArr=[];cart.map(function(item){mealAndFreqsArr.push([item.id,mealNumbers[item.id]]);});var todaysDate=new Date().toDateString();var objToSend={Order_date:todaysDate,Shipping_date:delivDate,Total_Price:cartPrice,email:stripeToken.email,Address:\"\".concat(stripeToken.card.address_line1,\" \").concat(stripeToken.card.address_city,\", \").concat(stripeToken.card.address_zip),Customer_id:userSession.getUser().id,mealAndFreqs:mealAndFreqsArr};// setStatusTitle(\"Order Status\");\nOrderAPIService.addOrder(objToSend,setStatusBody).then(function(res){setStatusBody(\"Order saved in DB! Order#: \"+res.data);// after 2 seconds close the pop up\nsetTimeout(function(){setStatusPopUp(false);// here we empty previous token\nsetStripeToken(null);},2000);}).catch(function(err){setStatusBody(\"Could NOT store the order please contact Admin \");// after 2 seconds close the pop up\nsetTimeout(function(){setStatusPopUp(false);// here we empty previous token\nsetStripeToken(null);},2000);});// SUCCESS; RESET: cart, numMealsSelected, mealNumbers\nsetCart([]);setNumMealsSelected(0);setCartPrice(0);for(var index=0;index<mealNumbers.length;index++){mealNumbers[index]=0;}},1200);}}).catch(function(error){setStatusPopUp(true);setStatusBody(\"\"+error);setTimeout(function(){setStatusPopUp(false);document.getElementById(\"hiddenPaymentButton\").click();},3000);});};stripeToken&&makeRequest();},[stripeToken]);var multilineString=\"This is the first line.\\n\"+\"This is the second line.\\n\"+\"This is the third line.\";return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(StripeCheckout,{name:\"Mirchi Meals\",panelLabel:\"Proceed\",shippingAddress:true,billingAddress:true,description:\"Total: $\".concat(Math.round(((cartPrice+3)*0.06625+(cartPrice+3))*100)/100),amount:Math.round(((cartPrice+3)*0.06625+(cartPrice+3))*100)/100*100,image:logo,token:onToken,stripeKey:STRIPE_KEY,children:/*#__PURE__*/_jsx(\"button\",{id:\"hiddenPaymentButton\",style:{borderColor:\"blue\",padding:\"10px\",fontSize:\"large\",margin:\"50%\",height:\"70px\",width:\"100px\",backgroundColor:\"black\"},hidden:true,children:/*#__PURE__*/_jsxs(\"span\",{style:{color:\"white\"},children:[\"Pay $\",cartPrice]})})}),/*#__PURE__*/_jsx(PopUp,{displayPopUp:statusPopUp,setDisplayPopUp:setStatusPopUp,title:statusTitle,body:statusBody})]});};export default Payment;","map":{"version":3,"names":["logo","PopUp","userSession","StripeCheckout","OrderAPIService","useEffect","StripeBackend","useState","React","Payment","cart","setCart","mealNumbers","cartPrice","setCartPrice","setNumMealsSelected","delivDate","statusPopUp","setStatusPopUp","statusTitle","setStatusTitle","statusBody","setStatusBody","STRIPE_KEY","stripeToken","setStripeToken","onToken","token","console","log","JSON","stringify","Math","round","amount","setAmount","makeRequest","requestToServer","then","res","status","data","setTimeout","document","getElementById","click","mealAndFreqsArr","map","item","push","id","todaysDate","Date","toDateString","objToSend","Order_date","Shipping_date","Total_Price","email","Address","card","address_line1","address_city","address_zip","Customer_id","getUser","mealAndFreqs","addOrder","catch","err","index","length","error","multilineString","borderColor","padding","fontSize","margin","height","width","backgroundColor","color"],"sources":["/workspaces/MM-Pure-FrontEnd/src/SharedComponents/PopUp/Payment/Payment.js"],"sourcesContent":["import logo from \"./logo192.png\";\nimport PopUp from \"../PopUp\";\nimport userSession from \"../../../Service/userSession\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport OrderAPIService from \"../../../Service/OrderAPIService\";\nimport { useEffect } from \"react\";\nimport StripeBackend from \"../../../Service/StripeBackend\";\n\nimport { useState } from \"react\";\nimport React from \"react\";\n\nconst Payment = ({\n  cart,\n  setCart,\n  mealNumbers,\n  cartPrice,\n  setCartPrice,\n  setNumMealsSelected,\n  delivDate,\n}) => {\n  // To give users live update about making payment & storing order\n  const [statusPopUp, setStatusPopUp] = useState(false);\n  const [statusTitle, setStatusTitle] = useState(\"\");\n  const [statusBody, setStatusBody] = useState(\"\");\n  const STRIPE_KEY =\n    \"pk_test_51MLGUDLxe44udBspRQVfTcgFGVZRI6NRIlrfX4lexUptlrYTJjsqfJZFBeDrKXdyOCiJVVQKcD88WAQDsNPVWZ9b00bKBn0FaU\";\n\n  // stripeToken will have store shipping info\n  const [stripeToken, setStripeToken] = useState(null);\n  const onToken = (token) => {\n    setStripeToken(token);\n    console.log(\"TOKEN::: \" + JSON.stringify(token));\n  };\n\n  const [amount, setAmount] = useState((Math.round((cartPrice + (cartPrice * 0.06625) + 3)*100)/100));\n  useEffect(() => {\n    setAmount((Math.round((cartPrice + (cartPrice * 0.06625) + 3)*100)/100)); \n  }, [cartPrice]);\n  useEffect(() => {\n    console.log(\"CART PRICE:: \"+cartPrice+ \":: type:: \"+ typeof(cartPrice));\n    console.log(\"AMOUNT:: \"+amount+ \":: type:: \"+ typeof(amount));\n    const makeRequest = () => {\n      setStatusTitle(\"Payment Status\");\n      // Sending req to backend to create charge based on card details entered by user..\n      StripeBackend.requestToServer(\n        stripeToken,\n        (Math.round(\n          ((cartPrice+3)*0.06625+(cartPrice+3)) * 100\n        ) / 100),\n        setStatusBody,\n        setStatusPopUp\n      ) // Response received from backend and we know if payment succeded or not\n        .then((res) => {\n          // Payment failed\n          if (res.status === 206) {\n            setStatusBody(res.data);\n            // let user view err msg for 2s; close pop up; reopen payment pop up\n            setTimeout(() => {\n              document.getElementById(\"hiddenPaymentButton\").click();\n            }, 2000);\n          } else {\n            // Successful payment; so, STORE ORDER IN DB\n            setStatusBody(\"Successful Payment!\");\n            setTimeout(() => {\n              setStatusTitle(\"Order Status\");\n              setStatusBody(\"Sending Order to DB....\");\n            }, 1000);\n            setTimeout(() => {\n              // mealAndFreqsArr is in format: [[id1,q1],[id2,q2]....]\n              const mealAndFreqsArr = [];\n              cart.map((item) => {\n                mealAndFreqsArr.push([item.id, mealNumbers[item.id]]);\n              });\n\n              let todaysDate = new Date().toDateString();\n\n              const objToSend = {\n                Order_date: todaysDate,\n                Shipping_date: delivDate,\n                Total_Price: cartPrice,\n                email: stripeToken.email,\n                Address: `${stripeToken.card.address_line1} ${stripeToken.card.address_city}, ${stripeToken.card.address_zip}`,\n                Customer_id: userSession.getUser().id,\n                mealAndFreqs: mealAndFreqsArr,\n              };\n              // setStatusTitle(\"Order Status\");\n              OrderAPIService.addOrder(objToSend, setStatusBody)\n                .then((res) => {\n                  setStatusBody(\"Order saved in DB! Order#: \" + res.data);\n\n                  // after 2 seconds close the pop up\n                  setTimeout(() => {\n                    setStatusPopUp(false);\n                    // here we empty previous token\n                    setStripeToken(null);\n                  }, 2000);\n                })\n                .catch((err) => {\n                  setStatusBody(\n                    \"Could NOT store the order please contact Admin \"\n                  );\n                  // after 2 seconds close the pop up\n                  setTimeout(() => {\n                    setStatusPopUp(false);\n                    // here we empty previous token\n                    setStripeToken(null);\n                  }, 2000);\n                });\n\n              // SUCCESS; RESET: cart, numMealsSelected, mealNumbers\n              setCart([]);\n              setNumMealsSelected(0);\n              setCartPrice(0);\n              for (let index = 0; index < mealNumbers.length; index++) {\n                mealNumbers[index] = 0;\n              }\n            }, 1200);\n          }\n        })\n        .catch((error) => {\n          setStatusPopUp(true);\n          setStatusBody(\"\" + error);\n          setTimeout(() => {\n            setStatusPopUp(false);\n            document.getElementById(\"hiddenPaymentButton\").click();\n          }, 3000);\n        });\n    };\n    stripeToken && makeRequest();\n  }, [stripeToken]);\n\n  let multilineString =\n    \"This is the first line.\\n\" +\n    \"This is the second line.\\n\" +\n    \"This is the third line.\";\n\n  return (\n    <>\n      {/* Regular Stripe pop UP */}\n      <StripeCheckout\n        name=\"Mirchi Meals\"\n        panelLabel=\"Proceed\"\n        shippingAddress\n        billingAddress\n        description={`Total: $${\n          (Math.round(\n            ((cartPrice+3)*0.06625+(cartPrice+3)) * 100\n          ) / 100)\n        }`}\n        amount={\n          (Math.round(\n            ((cartPrice+3)*0.06625+(cartPrice+3)) * 100\n          ) / 100)*100\n        }\n        image={logo}\n        token={onToken}\n        stripeKey={STRIPE_KEY}\n      >\n        <button\n          id=\"hiddenPaymentButton\"\n          style={{\n            borderColor: \"blue\",\n            padding: \"10px\",\n            fontSize: \"large\",\n            margin: \"50%\",\n            height: \"70px\",\n            width: \"100px\",\n            backgroundColor: \"black\",\n          }}\n          hidden\n        >\n          <span style={{ color: \"white\" }}>Pay ${cartPrice}</span>\n        </button>\n      </StripeCheckout>\n      <PopUp\n        displayPopUp={statusPopUp}\n        setDisplayPopUp={setStatusPopUp}\n        title={statusTitle}\n        body={statusBody}\n      />\n    </>\n  );\n};\n\nexport default Payment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}