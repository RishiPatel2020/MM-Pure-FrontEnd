[{"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/index.js":"1","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/reportWebVitals.js":"2","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/App.js":"3","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/Service/userSession.js":"4","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/PickMeals/PickMeals.js":"5","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/ErrorPage/ErrorPage.js":"6","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/About/About.js":"7","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/NavBar/Nav.js":"8","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Footer/Footer.js":"9","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Help/Help.js":"10","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/Home.js":"11","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/OrderPage/OrderPage.js":"12","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/CheckOut/CheckOut.js":"13","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/OrderHistory/OrderHistory.js":"14","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/RefundsAndCancellationsPolicy/RefundsAndCancellationsPolicy.js":"15","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/TermsAndCondition/TermsAndCondition.js":"16","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Hotel/Hotel.js":"17","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/PrivacyPolicy/PrivacyPolicy.js":"18","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/Service/StripeBackend.js":"19","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/Service/ScrollTop.js":"20","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/Service/MealData.js":"21","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/NavBar/SignUpPopUp/SignUpPopUp.js":"22","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/NavBar/LogInPopUp/LogInPopUp.js":"23","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/Service/OrderAPIService.js":"24","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/Service/HotelAPIService.js":"25","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/AccountInfo/AccountInfo.js":"26","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/SharedComponents/PopUp/PopUp.js":"27","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/About/InformationBox/InformationBox.js":"28","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/SharedComponents/PopUp/Payment/Payment.js":"29","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/NavBar/UserProfile/UserProfile.js":"30","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/Showcase/Showcase.js":"31","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/NavBar/ShoppingCart/ShoppingCart.js":"32","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/Questions/Question.js":"33","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/About/InformationGrid/InformationGrid.js":"34","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/MealsLookUp/MealsLookUp.js":"35","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/Testimonials/Testimonials.js":"36","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/Contact/Contact.js":"37","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/MealPlans/MealPlans.js":"38","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/OrderPage/ZipCode/ZipCode.js":"39","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/OrderPage/DeliveryDate/DeliveryDate.js":"40","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/Service/UserApiService.js":"41","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/Testimonials/TestimonialCard.js":"42"},{"size":627,"mtime":1674104178000,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":1674104178000,"results":"45","hashOfConfig":"44"},{"size":6202,"mtime":1675232455037,"results":"46","hashOfConfig":"44"},{"size":735,"mtime":1674192711338,"results":"47","hashOfConfig":"44"},{"size":13148,"mtime":1675367066261,"results":"48","hashOfConfig":"44"},{"size":1519,"mtime":1674336170171,"results":"49","hashOfConfig":"44"},{"size":6687,"mtime":1674440349526,"results":"50","hashOfConfig":"44"},{"size":3948,"mtime":1675288561058,"results":"51","hashOfConfig":"44"},{"size":832,"mtime":1674104178000,"results":"52","hashOfConfig":"44"},{"size":2312,"mtime":1675305301858,"results":"53","hashOfConfig":"44"},{"size":3356,"mtime":1674440716144,"results":"54","hashOfConfig":"44"},{"size":12051,"mtime":1674440465737,"results":"55","hashOfConfig":"44"},{"size":6370,"mtime":1674104178000,"results":"56","hashOfConfig":"44"},{"size":4760,"mtime":1674795296052,"results":"57","hashOfConfig":"44"},{"size":3034,"mtime":1674104178000,"results":"58","hashOfConfig":"44"},{"size":16859,"mtime":1674104178000,"results":"59","hashOfConfig":"44"},{"size":9958,"mtime":1674872283372,"results":"60","hashOfConfig":"44"},{"size":25836,"mtime":1674104178000,"results":"61","hashOfConfig":"44"},{"size":535,"mtime":1675366851684,"results":"62","hashOfConfig":"44"},{"size":304,"mtime":1674104178000,"results":"63","hashOfConfig":"44"},{"size":1168,"mtime":1674104178000,"results":"64","hashOfConfig":"44"},{"size":10685,"mtime":1674335211185,"results":"65","hashOfConfig":"44"},{"size":7561,"mtime":1675234628166,"results":"66","hashOfConfig":"44"},{"size":466,"mtime":1675301916482,"results":"67","hashOfConfig":"44"},{"size":383,"mtime":1675301916481,"results":"68","hashOfConfig":"44"},{"size":7481,"mtime":1674253671760,"results":"69","hashOfConfig":"44"},{"size":773,"mtime":1674104178000,"results":"70","hashOfConfig":"44"},{"size":1548,"mtime":1674104178000,"results":"71","hashOfConfig":"44"},{"size":6200,"mtime":1675367133218,"results":"72","hashOfConfig":"44"},{"size":3246,"mtime":1674104178000,"results":"73","hashOfConfig":"44"},{"size":2568,"mtime":1674104178000,"results":"74","hashOfConfig":"44"},{"size":11481,"mtime":1675366685781,"results":"75","hashOfConfig":"44"},{"size":4447,"mtime":1674104178000,"results":"76","hashOfConfig":"44"},{"size":2535,"mtime":1674104178000,"results":"77","hashOfConfig":"44"},{"size":3537,"mtime":1674104178000,"results":"78","hashOfConfig":"44"},{"size":3881,"mtime":1674104178000,"results":"79","hashOfConfig":"44"},{"size":853,"mtime":1674104178000,"results":"80","hashOfConfig":"44"},{"size":6208,"mtime":1674104178000,"results":"81","hashOfConfig":"44"},{"size":774,"mtime":1674104178000,"results":"82","hashOfConfig":"44"},{"size":2184,"mtime":1674104178000,"results":"83","hashOfConfig":"44"},{"size":934,"mtime":1675233168771,"results":"84","hashOfConfig":"44"},{"size":553,"mtime":1674104178000,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"2dnst0",{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"89"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"89"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"89"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"89"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"89"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"89"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"89"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"89"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"89"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"89"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"89"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"89"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"89"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"89"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"89"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"89"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"89"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/index.js",[],[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/reportWebVitals.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/App.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/Service/userSession.js",["234"],[],"class userSession {\n  isLoggedIn = () => {\n    return localStorage.getItem(\"user\") !== null;\n  };\n  getUser = () => {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  };\n  addUser = (user) => {\n    localStorage.setItem(\"user\", JSON.stringify(user));\n  };\n  removeUser() {\n    if (this.isLoggedIn()) {\n      localStorage.removeItem(\"user\");\n    }\n  }\n\n  // ENABLE CACHING IF there is issue in updating user's login creds\n    // cache(obj) {\n    //   localStorage.setItem(\"updateCache\", JSON.stringify(obj));\n    // }\n\n    // getCache() {\n    //   return JSON.parse(localStorage.getItem(\"updateCache\"));\n    // }\n    // removeCache() {\n    //   localStorage.removeItem(\"updateCache\");\n    // }\n}\n\nexport default new userSession();\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/PickMeals/PickMeals.js",["235","236","237","238","239","240","241","242","243","244","245","246","247"],[],"/**\n *  For now can look in csv file for meal data based on zip code entered\n *  Scaling: might need API call to search meal info based on given zip code\n */\n\nimport Payment from \"../../SharedComponents/PopUp/Payment/Payment\";\nimport StripeBackend from \"../../Service/StripeBackend\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport SignUpPopUp from \"../NavBar/SignUpPopUp/SignUpPopUp\";\nimport LogInPopUP from \"../NavBar/LogInPopUp/LogInPopUp\";\nimport userSession from \"../../Service/userSession\";\nimport PopUp from \"../../SharedComponents/PopUp/PopUp\";\nimport \"./PickMeals.css\";\nimport { useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport ScrollTop from \"../../Service/ScrollTop\";\nimport MealData from \"../../Service/MealData\";\nconst PickMeals = ({\n  zipCode,\n  cart,\n  setCart,\n  mealNumbers,\n  setMealNumbers,\n  setResetOrderPageInfo,\n  numMealsSelected,\n  setNumMealsSelected,\n  setLogIn,\n  numMeals,\n  cartPrice,\n  setCartPrice,\n  delivDate,\n}) => {\n  // so we can go back to orderPage\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log(\"ZIPCODE ON PM RENDERED::: \" + zipCode);\n    // if zipCode not provided, go back to order page\n    if (zipCode.length === 0) {\n      console.log(\"NO ZIPCODE; GO BACK TO ORDER AND RESET EVERYTHING\");\n      setResetOrderPageInfo(2); // if no zip code; go back to order page and have user fill out all the fields\n      navigate(\"/order\");\n    } else {\n      // scroll up only once when user arrives on this page\n      ScrollTop.scrollUp();\n      if (mealNumbers.length === 0) {\n        setMealNumbers(new Array(data.length).fill(0));\n        console.log(\"RESETTING CART\");\n        // should do this in case of payment success\n      }\n    }\n  }, []);\n\n  const data = MealData.getMeals();\n\n  // pop up to show description/ingridents to users\n  const [show, setShow] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [mealSelected, setMealSelected] = useState(\"\");\n\n  // What if user wants to reset freq, zipcode, etc...?? => we let user go back to OrderPage\n  const backToOrderPage = () => {\n    setCart([]);\n    setCartPrice(0);\n    setNumMealsSelected(0);\n    setMealNumbers([]);\n    setResetOrderPageInfo(2); // reset everything in orderPage\n    console.log(\"<== BACK BUTTON CLICKED...\");\n    navigate(\"/order\");\n  };\n\n  // Handles PopUp display\n  const handleDisplay = (description, mealName) => {\n    setDescription(description);\n    setMealSelected(mealName);\n    setShow(true);\n  };\n\n  // closes description pop up when user closes it\n  const handleClose = () => {\n    setDescription(\"\");\n    setMealSelected(\"\");\n    setShow(false);\n  };\n\n  /**\n   * @Goal ADD item to cart && increment quantity by 1\n   * @param idNum of item to be added\n   * 1. Increment quantity in mealNumbers at index \"id\"\n   * 2. Update cart by setCart()\n   */\n\n  const add = (idNum) => {\n    setNumMealsSelected((numMealsSelected) => numMealsSelected + 1);\n    setCartPrice(\n      (cartPrice) =>\n        Math.round(\n          (cartPrice + MealData.getMeals()[idNum].price + Number.EPSILON) * 100\n        ) / 100\n    );\n    // will have to add PRICE\n    const addToCart = {\n      id: idNum,\n      mealName: data[idNum].mealName,\n      description: data[idNum].description,\n      price: data[idNum].price,\n    };\n\n    const tempArray = [];\n\n    if (cart.length === 0) {\n      // cart is empty\n      tempArray.push(addToCart);\n      setCart(tempArray);\n    } else {\n      // cart is NOT empty; 2 cases: idNum IS in cart OR NOT in the cart\n\n      // don't wanna add duplicate items\n      let found = false;\n\n      cart.forEach((element) => {\n        if (element.id === idNum) {\n          found = true;\n        }\n        tempArray.push(element);\n      });\n\n      // adding item first time\n      if (!found) {\n        tempArray.push(addToCart);\n      }\n      setCart(tempArray); // Update cart to display correct items in cart\n    }\n\n    mealNumbers[idNum]++; // increment quantity in mealNumbers at index \"idNum\"\n    const newAr = [];\n    mealNumbers.map((item) => {\n      newAr.push(item);\n    });\n    setMealNumbers(newAr); // Update mealNumbers to display correct quantity numbers in cart AND pickMeals page\n  };\n\n  /**\n   * @Goal REMOVE item from cart && decrement quantity by 1\n   * @param id of item to be removed/reduced\n   * 1. Decrement quantity in mealNumbers at index \"idNum\"\n   * 2. Update cart by setCart()\n   */\n  const remove = (id) => {\n    // CANNOT have quantity < 0\n    if (mealNumbers[id] > 0) {\n      setNumMealsSelected((numMealsSelected) => numMealsSelected - 1);\n      setCartPrice(\n        (cartPrice) =>\n          Math.round(\n            (cartPrice - MealData.getMeals()[id].price + Number.EPSILON) * 100\n          ) / 100\n      );\n      mealNumbers[id]--; // decrement quantity in mealNumbers at index \"id\"\n      const newAr = [];\n      mealNumbers.map((item) => {\n        newAr.push(item);\n      });\n      setMealNumbers(newAr); // update mealNumbers\n\n      if (mealNumbers[id] === 0) {\n        // if item is reduced to 0 in cart, cart should be updated so we don't have an item in cart whose quantity = 0\n        const tempCart = [];\n        cart.forEach((element) => {\n          if (element.id !== id) {\n            tempCart.push(element);\n          }\n        });\n        setCart(tempCart);\n      }\n    }\n  };\n\n  // log in warnin\n  const [displayPopUp, setDisplayPopUp] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const [displayEnoughPopUp, setDisplayEnoughPopUp] = useState(false);\n  const [titleEnough, setTitleEnough] = useState(\"\");\n  const [bodyEnough, setBodyEnough] = useState(\"\");\n\n  {\n    /* remove this after stripe */\n  }\n  const [successPopUp, setSuccessPopUp] = useState(false);\n  const [successTitle, setSuccessTitle] = useState(\"\");\n  const [successBody, setSuccessBody] = useState(\"\");\n\n  /**\n   * send Data to DB for DA purporses\n   * STRIP INTEGRATION\n   */\n  const handleCheckOut = () => {\n    if (numMeals === \"12+ Meals\" && numMealsSelected < 12) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough(<p>Select at least 12 meals</p>);\n      setDisplayEnoughPopUp(true);\n    } else if (parseInt(numMeals[0]) > numMealsSelected) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough(<p>Select at least {numMeals[0]} meals</p>);\n      setDisplayEnoughPopUp(true);\n    } else if (!userSession.isLoggedIn()) {\n      setTitle(\"LogIn/SignUp\");\n\n      setBody(\n        <div\n          className=\"container align-items-center d-flex justify-content-center\"\n          style={{ fontFamily: \"Signika\" }}\n        >\n          <form style={{ padding: \"20px\" }} className=\"rounded\">\n            <Row className=\"\">\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\" className=\"mb-4\">\n                  <p className=\"lead\">Log in or Sign Up to continue</p>\n                </label>\n              </div>\n            </Row>\n\n            <div className=\"container text-center mb-4\">\n              <LogInPopUP\n                style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n                setLogIn={setLogIn}\n              />\n            </div>\n\n            <div className=\"container text-center\">\n              <SignUpPopUp\n                style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n                setLogIn={setLogIn}\n              />\n            </div>\n          </form>\n        </div>\n      );\n      setDisplayPopUp(true);\n    } else {\n      // Handle Stripe Payment\n      // setPayPopUp(true);\n      // document.getElementById(\"hiddenPaymentButton\").click();\n      setTitleEnough(\"Meals Break Down\");\n      setBodyEnough(\n        <>\n          <h5 className=\"text-center mt-4\">{`${\n            \"Items Total$\" + cartPrice\n          }`}</h5>\n          <h5 className=\"text-center mt-2\">{`${\"Delivery $\" + 3}`}</h5>\n          <h5 className=\"text-center mt-2\">{`${\n            \"Taxes $\" +\n            Math.round((cartPrice * 0.06625 + Number.EPSILON) * 100) / 100\n          }`}</h5>\n          <h5 className=\"text-center mt-2\">{`${\n            \"Total $\" +\n            Math.round(\n              (cartPrice * 0.06625 + cartPrice + 3 + Number.EPSILON) * 100\n            ) /\n              100\n          }`}</h5>\n\n          <div className=\"h-100 d-flex align-items-center justify-content-center\">\n            <Button\n              variant=\"light\"\n              className=\"text-dark\"\n              onClick={() => {\n                setDisplayEnoughPopUp(false);\n                document.getElementById(\"hiddenPaymentButton\").click();\n              }}\n            >\n              Proceed\n            </Button>\n          </div>\n        </>\n      );\n      setDisplayEnoughPopUp(true);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"justify-content-center backButtonContainer\">\n        <Button\n          variant=\"secondary\"\n          className=\"position-fixed backButton\"\n          onClick={() => backToOrderPage()}\n          style={{ fontFamily: \"Signika\", color: \"white\" }}\n        >\n          Back\n        </Button>\n      </div>\n      <section style={{ fontFamily: \"Signika\" }}>\n        <Container className=\"text-dark my-4 customCss\">\n          <Row style={{ marginTop: \"66px\", marginBottom: \"32px\" }} xs=\"auto\">\n            {data.map((item) => {\n              const { id, img, mealName, description, price } = item;\n              return (\n                <Col key={id} className=\"p-3 spacesBetweenBoxes\">\n                  <div className=\"card-body text-center\">\n                    <img src={img} className=\"img-fluid imageAdjustment\" />\n                    <h4 className=\"titleAdjustment\">{mealName}</h4>\n                    <h5>\n                      <del className=\"mx-2\">$15.99</del>${price}\n                    </h5>\n                    <Link\n                      onClick={() => handleDisplay(description, mealName)}\n                      to=\"\"\n                    >\n                      <p className=\"text-light descriptionAdjustment\">\n                        Description/Ingridients\n                      </p>\n                    </Link>\n\n                    <Button\n                      variant=\"light\"\n                      onClick={() => remove(id)}\n                      className=\"buttonAdjustment\"\n                    >\n                      <span className=\"letterAdjustment\">-</span>\n                    </Button>\n\n                    <span className=\"amountAdjustment\">{mealNumbers[id]}</span>\n\n                    <Button\n                      variant=\"light\"\n                      onClick={() => add(id)}\n                      className=\"buttonAdjustment\"\n                    >\n                      <span className=\"letterAdjustment\">+</span>\n                    </Button>\n                  </div>\n                </Col>\n              );\n            })}\n\n            <Modal\n              show={show}\n              onHide={handleClose}\n              style={{ fontFamily: \"Signika\" }}\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>{mealSelected}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                {Object.keys(description).map((key) => {\n                  return (\n                    <span>\n                      {`${key} : ${description[key]}`}\n                      <br></br>\n                    </span>\n                  );\n                })}\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"light\" onClick={handleClose}>\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </Row>\n\n          <Row>\n            {/* Only show checkout button if # of item > 0 */}\n\n            <div className=\"h-100 d-flex align-items-center justify-content-center\">\n              <Button\n                variant=\"secondary\"\n                className=\"text-primary checkOutButton\"\n                onClick={() => handleCheckOut()}\n              >\n                Proceed\n              </Button>\n            </div>\n          </Row>\n        </Container>\n        {/* should probably remove 1st condition */}\n        {(numMealsSelected === 0 || !userSession.isLoggedIn()) && (\n          <PopUp\n            displayPopUp={displayPopUp}\n            setDisplayPopUp={setDisplayPopUp}\n            title={title}\n            body={body}\n          />\n        )}\n\n        <PopUp\n          displayPopUp={displayEnoughPopUp}\n          setDisplayPopUp={setDisplayEnoughPopUp}\n          title={titleEnough}\n          body={bodyEnough}\n        />\n\n        <Payment\n          cart={cart}\n          setCart={setCart}\n          mealNumbers={mealNumbers}\n          cartPrice={cartPrice}\n          setCartPrice={setCartPrice}\n          setNumMealsSelected={setNumMealsSelected}\n          delivDate={delivDate}\n        />\n      </section>\n    </>\n  );\n};\n\nexport default PickMeals;\n",[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/ErrorPage/ErrorPage.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/About/About.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/NavBar/Nav.js",["248","249"],[],"import { Link } from \"react-router-dom\";\nimport Nav from \"react-bootstrap/Nav\";\nimport AccountInfo from \"../AccountInfo/AccountInfo\";\nimport userSession from \"../../Service/userSession\";\nimport Container from \"react-bootstrap/Container\";\nimport \"./Nav.css\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport ShoppingCart from \"./ShoppingCart/ShoppingCart\";\nimport UserProfile from \"./UserProfile/UserProfile\";\nimport { useNavigate } from \"react-router-dom\";\nimport ScrollTop from \"../../Service/ScrollTop\";\nimport { NavItem } from \"react-bootstrap\";\n\nfunction NavBar({\n  loggedIn,\n  setLogIn,\n  cart,\n  setCart,\n  mealNumbers,\n  setMealNumbers,\n  cartPrice,\n  setCartPrice,\n  numMeals,\n  numMealsSelected,\n  setNumMealsSelected,\n  setScrollFAQ,\n  delivDate\n}) {\n  const navigate = useNavigate();\n  const [displayAccountInfo, setDisplayAccountInfo] = useState(false);\n  // might cause error in PRODUCTION due to paths and hashes \"#/\"\n  const toFAQ = (e) => {\n    let path = window.location.href;\n    path = path.split(\"#/\")[1];\n    if (path.length !== 0) {\n      navigate(\"/\");\n      setScrollFAQ(true);\n    } else {\n      ScrollTop.scrollToFAQ();\n    }\n  };\n\n  return (\n    <Navbar\n      collapseOnSelect\n      expand=\"lg\"\n      bg=\"secondary\"\n      variant=\"light\"\n      className=\"fixed-top\"\n    >\n      <Container style={{ fontFamily: \"Signika\" }}>\n        {/* Mirchi Meals  */}\n        <Navbar.Brand>\n          <Nav.Link href=\"#/\">\n            <img\n              src={require(\"../../Resources/Logo/mirchiMealsLogo.png\")}\n              alt=\"MirchiMealsLogo\"\n              className=\"logoAdjustment\"\n            />\n          </Nav.Link>\n        </Navbar.Brand>\n\n        {/* user Profile */}\n        <UserProfile\n          setDisplayAccountInfo={setDisplayAccountInfo}\n          setLogIn={setLogIn}\n        />\n\n        {/* Shopping cart */}\n        <ShoppingCart\n          cart={cart}\n          setCart={setCart}\n          cartPrice={cartPrice}\n          setCartPrice={setCartPrice}\n          mealNumbers={mealNumbers}\n          setMealNumbers={setMealNumbers}\n          setLogIn={setLogIn}\n          numMeals={numMeals}\n          numMealsSelected={numMealsSelected}\n          setNumMealsSelected={setNumMealsSelected}\n          delivDate={delivDate}\n        />\n\n        <Navbar.Toggle\n          aria-controls=\"responsive-navbar-nav\"\n          style={{\n            backgroundColor: \"rgb(247, 193, 68)\",\n            boxShadow: \"2px 1px 3px black\",\n            height: \"36px\",\n            width: \"48px\",\n            fontSize: \"10px\",\n          }}\n        />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          {/* About, Order, Help Links */}\n          <Nav className=\"me-auto\" defaultActiveKey=\"/home\">\n            <Nav.Link href=\"#/about\">\n              {/* adjust marginRight Based on screens */}\n              <span\n                className=\"fontAdjustment\"\n                style={{ marginLeft: \"0px\", marginRight: \"40px\" }}\n              >\n                About\n              </span>\n            </Nav.Link>\n            <Nav.Link href=\"#/order\">\n              <span className=\"fontAdjustment\" style={{ marginRight: \"40px\" }}>\n                Order\n              </span>\n            </Nav.Link>\n            <Nav.Link className=\"text-dark mx-1\" onClick={(e) => toFAQ(e)}>\n              <span className=\"fontAdjustment\" style={{ marginRight: \"40px\" }}>\n                FAQ\n              </span>\n            </Nav.Link>\n            <Nav.Link href=\"#/help\">\n              <span className=\"fontAdjustment\" style={{ marginRight: \"40px\" }}>\n                Help\n              </span>\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n      {userSession.isLoggedIn() ? (\n        <AccountInfo\n          show={displayAccountInfo}\n          setShow={setDisplayAccountInfo}\n        />\n      ) : null}\n    </Navbar>\n  );\n}\nexport default NavBar;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Footer/Footer.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Help/Help.js",["250","251","252"],[],"import { useEffect } from \"react\";\nimport { Button, NavItem } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport React, { useRef } from \"react\";\nimport ScrollTop from \"../../Service/ScrollTop\";\n\nconst Help = ({scrollFAQ, setScrollFAQ}) => {\n  useEffect(() => {\n    document.title=\"Help\"\n    ScrollTop.scrollUp();\n  }, []);\n  const navigate = useNavigate();\n  const toFAQ = (e) => {\n    e.preventDefault();\n    setScrollFAQ(true); \n    navigate(\"/\");\n\n  };\n  return (\n    <section\n      className=\"mealPlans bg-primary\"\n      style={{ fontFamily: \"Signika\", padding: \"64px 32px\" }}\n    >\n      <div\n        className=\"container text-center\"\n        style={{\n          marginRight: \"auto\",\n          marginBottom: \"340px\",\n          marginLeft: \"auto\",\n        }}\n      >\n        <div style={{ marginTop: \"40px\" }}>\n          {/* Image */}\n          <img\n            className=\"img-fluid\"\n            src={require(\"../../Resources/Vector/help.png\")}\n          />\n          {/* Help Text */}\n          <div style={{ marginTop: \"30px\" }}>\n            <p className=\"\">\n              Any inquiries, comments, concerns, or requests for cancellations\n              please address to: support@mirchimeal.com\n            </p>\n            <p>\n              Our support staff will get back to you in less than 3 hours.\n              Promise :)\n            </p>\n            <p>\n              Please check our <Link className=\"text-dark mx-1\" onClick={(e)=>toFAQ(e)} to =\"\">FAQ</Link>\n              section to see if you can find the answer to your question.{\" \"}\n            </p>\n            <p>In the meantime, try out our meals.</p>\n\n            {/* Order Button */}\n            <div className=\"h-100 d-flex align-items-center justify-content-center\">\n              <Link to=\"/order\">\n                <Button\n                  variant=\"secondary\"\n                  className=\"text-primary\"\n                  style={{\n                    height: \"50px\",\n                    width: \"150px\",\n                    borderRadius: \"25px\",\n                    fontSize: \"25px\",\n                  }}\n                >\n                  Order\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Help;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/Home.js",["253","254"],[],"/***\n * has 1 Nav bar, 2 Information Boxes, 1 Foot Bar\n */\n\nimport { useEffect } from \"react\";\nimport ScrollTop from \"../../Service/ScrollTop\";\nimport React from \"react\";\nimport Showcase from \"./Showcase/Showcase\";\nimport Question from \"./Questions/Question\";\nimport Contact from \"./Contact/Contact\";\nimport InformationGrid from \"../About/InformationGrid/InformationGrid\";\nimport MealPlans from \"./MealPlans/MealPlans\";\nimport MealsLookUp from \"./MealsLookUp/MealsLookUp\";\nimport Testimonials from \"./Testimonials/Testimonials\";\nconst Home = ({\n  loggedIn,\n  setLogIn,\n  setMeals,\n  setResetOrderPageInfo,\n  setCart,\n  setMealNumbers,\n  scrollFAQ,\n  setScrollFAQ,\n}) => {\n  useEffect(() => {\n    document.title=\"Mirchi Meals\"\n    if (scrollFAQ) {\n      console.log(\"Down!!!\");\n      ScrollTop.scrollToFAQ();\n      setScrollFAQ(false);\n    } else {\n      console.log(\"UP!!!\");\n      ScrollTop.scrollUp();\n    }\n  }, []);\n  const saveTime = {\n    backColor: \"primary\",\n    headingColor: \"dark\",\n    titleColor: \"secondary\",\n    textColor: \"dark\",\n\n    heading: \"How It Works?\",\n    image1: require(\"../../Resources/Vector/step1.png\"),\n    image1Height: \"150px\",\n    image1Width: \"250px\",\n    title1: \"Choose Your Meals and Plan\",\n    description1:\n      \"Choose a minimum of 4 ready-to-eat meals\",\n\n    image2: require(\"../../Resources/Vector/step2.png\"),\n    image2Width: \"250px\",\n    image2Height: \"150px\",\n    title2: \"Receive Your Delivery \",\n    description2: \"All meals for the week are delivered straight to you.\",\n\n    image3: require(\"../../Resources/Vector/step3.png\"),\n    image3Width: \"250px\",\n    image3Height: \"150px\",\n    title3: \"Enjoy Your Meals\",\n    description3: \"Microwave meals throughout the week and enjoy right away!\",\n  };\n\n  const stats = {\n    backColor: \"light\",\n    headingColor: \"dark\",\n    titleColor: \"dark\",\n    textColor: \"dark\",\n\n    heading: \"Authentically Amazing\",\n    image1: require(\"../../Resources/Vector/customers.png\"),\n    image1Height: \"150px\",\n    image1Width: \"345.95px\",\n    title1: \"Diverse Customers\",\n    description1:\n      \"Customers from backgrounds such as: programmers, students, sports enthusiasts, military veterans\",\n\n    image2: require(\"../../Resources/Vector/satisfiction.png\"),\n    image2Width: \"241.44px\",\n    image2Height: \"150px\",\n    title2: \"Guaranteed Satisfaction\",\n    description2:\n      \"Customers have repeatedly praised Mirchi Meals’ affordability, quantity and pure taste\",\n\n    image3: require(\"../../Resources/Vector/kitchen.png\"),\n    image3Width: \"313.80px\",\n    image3Height: \"150px\",\n    title3: \"Quality Chefs and Ingredients\",\n    description3:\n      \"Across New Jersey, we are partnered with top rated kitchens.\",\n  };\n  return (\n    <>\n      {/* Log In & Sign Up Button */}\n      <Showcase loggedIn={loggedIn} setLogIn={setLogIn} />\n\n      {/* How you save time */}\n      <InformationGrid data={saveTime} />\n\n      {/* Meal Plans */}\n      <MealPlans\n        setMeals={setMeals}\n        setResetOrderPageInfo={setResetOrderPageInfo}\n        setCart={setCart}\n        setMealNumbers={setMealNumbers}\n      />\n\n      {/* Fans Favorite */}\n      {/* <MealsLookUp /> */}\n      <Testimonials />\n\n      {/* Stats */}\n      <InformationGrid data={stats} />\n\n      {/* FAQs */}\n      <Question />\n\n      {/* Contact */}\n      <Contact />\n    </>\n  );\n};\n\nexport default Home;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/OrderPage/OrderPage.js",["255"],[],"/**\n * Might need API call to validate zipcode based on region\n */\nimport DeliveryDate from \"./DeliveryDate/DeliveryDate\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { Dropdown } from \"react-bootstrap\";\nimport ZipCode from \"./ZipCode/ZipCode\";\nimport { useState} from \"react\";\nimport InformationGrid from \"../About/InformationGrid/InformationGrid\";\nimport Scroll from \"../../Service/ScrollTop\";\nimport { Modal } from \"react-bootstrap\";\n\nconst data = {\n  backColor: \"primary\",\n  headingColor: \"dark\",\n  titleColor: \"secondary\",\n  textColor: \"dark\",\n  heading: \"\",\n  image1: require(\"../../Resources/Vector/fresh.png\"),\n  image1Height: \"150px\",\n  image1Width: \"250px\",\n  title1: \"Fresh\",\n  description1: \"Meals cooked by our partner kitchens when ordered\",\n\n  image2: require(\"../../Resources/Vector/tasty.png\"),\n  image2Width: \"250px\",\n  image2Height: \"150px\",\n  title2: \"Tasty\",\n  description2: \"Authentically sourced and spiced, for the right taste\",\n\n  image3: require(\"../../Resources/Vector/convinient.png\"),\n  image3Width: \"250px\",\n  image3Height: \"150px\",\n  title3: \"Convinient\",\n  description3: \"Contact-less delivery right to your doorstep, just in-time\",\n};\n\nconst OrderPage = ({\n  numMeals,\n  setNumMeals,\n  zipCode,\n  setZipCode,\n  freq,\n  setFreq,\n  delivDate,\n  setDelivDate,\n  resetOrderPageInfo,\n  setResetOrderPageInfo,\n  setMealNumbers,\n  numMealsSelected,\n  setNumMealsSelected,\n}) => {\n  const navigate = useNavigate();\n\n  // For pop up if something is missing\n  const [show, setShow] = useState(false);\n  const [msg, setMsg] = useState(\"\");\n\n  /**\n   * coming from pickMeals, want to reselect all options\n   * coming from MealPlans section of home page, want to enter everything EXCEPT plan size because we clicked on one of the buttons like 4 meals, 6 meals, ...\n   * coming from else where, go to pickMeals page or stay on orderPage depending on previous interaction of user with orderPage\n   */\n  useEffect(() => {\n    console.log(\"ORDER PAGE FOR FIRST TIME\");\n    // user was looking at pickMeals; went else where; wants to go back to pickMeals\n    // GO to pick meals\n    if (resetOrderPageInfo === 0) {\n      console.log(\"GOING TO PM PAGE==>\");\n      navigate(\"/pickMeals\");\n    }\n    // came from mealPlans section of Home Page\n    // reset date and zipcode\n    else if (resetOrderPageInfo === 1) {\n      // setFreq(\"Select Frequency\");\n      setZipCode(\"\");\n      setDelivDate(\"Select Date\");\n    } else {\n      // Want to choose every option again; Coming back from Pick Meals Page\n      console.log(\"COMING BACK FROM PICK MEALS OR COMING FROM HOME PAGE: RESET EVERYTHING\");\n      setNumMeals(\"Select Plan\");\n      setZipCode(\"\");\n      // setFreq(\"Select Frequency\");\n      setDelivDate(\"Select Date\");\n    }\n    document.title=\"Order\"\n    Scroll.scrollUp();\n  }, []);\n\n  // Pick meals button clicked\n  const handlePickMeals = () => {\n    // NEED PROPER ZIPCODE, AND ZIPCODE SHOULD BE in specific range\n    if (zipCode.length === 0) {\n      // might require API call\n      handleDisplay(\"Enter Proper Zip Code\");\n    } else if (numMeals === \"Select Plan\") {\n      handleDisplay(\"Select Plan\");\n    }\n    // else if (freq === \"Select Frequency\") {\n    // handleDisplay(\"Select Frequency\");\n    // }\n    else if (delivDate === \"Select Date\") {\n      handleDisplay(\"Select Date\");\n    } else {\n      // move to pickMeals page\n      setResetOrderPageInfo(0);\n      setMealNumbers([]);\n      navigate(\"/pickMeals\");\n    }\n  };\n\n  // open pop up\n  const handleDisplay = (msg) => {\n    setMsg(msg);\n    setShow(true);\n  };\n\n  // closes pop up\n  const handleClose = () => {\n    setMsg(\"\");\n    setShow(false);\n  };\n\n  return (\n    <>\n      {/* User Input for zipcode, freq, plan, date */}\n      <section\n        className=\"bg-light text-dark p-5 p-lg-0 pt-lg-5 text-center text-sm-start\"\n        id=\"Showcase\"\n        style={{ fontFamily: \"Signika\", marginBottom: \"0px\" }}\n      >\n        <div className=\"container\" style={{ paddingBottom: \"10px\" }}>\n          <div className=\"d-sm-flex align-items-center my-2\">\n            {/* Image on left; disappears in small devices */}\n            <img\n              className=\"img-fluid w-50 d-none d-sm-block\"\n              src={require(\"../../Resources/Meals/pavbhaji.png\")}\n              alt=\"lorem\"\n              style={{\n                padding: \"10px\",\n                height: \"450px\",\n                width: \"450px%\",\n                borderRadius: \"17px\",\n                marginBottom: \"6px\",\n                marginRight: \"60px\",\n              }}\n            />\n\n            {/* User Input Stuff on Right*/}\n            <Container>\n              <Row>\n                <h1 className=\"text-center\">Enter Zip Code</h1>\n              </Row>\n\n              {/* Zip Code Element */}\n              <Row>\n                <ZipCode zipCode={zipCode} setZipCode={setZipCode} />\n              </Row>\n\n              <Row>\n                {/* Plan Size */}\n                <Col style={{ marginBottom: \"35px\" }}>\n                  <h2 className=\"text-center\">Plan Size</h2>\n                  <h6 className=\"text-center\">Each meal is made for 1 adult</h6>\n\n                  <div className=\"d-flex align-items-center justify-content-center\">\n                    <Dropdown>\n                      <Dropdown.Toggle\n                        variant=\"dark\"\n                        id=\"dropdown-basic\"\n                        style={{ height: \"50px\", width: \"150px\" }}\n                      >\n                        <span className=\"text-primary\">{numMeals}</span>\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item\n                          onMouseEnter={() => setNumMeals(\"4 Meals\")}\n                          onClick={() => setNumMeals(\"4 Meals\")}\n                        >\n                          <span>4 meals</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onMouseEnter={() => setNumMeals(\"6 Meals\")}\n                          onClick={() => setNumMeals(\"6 Meals\")}\n                        >\n                          <span>6 meals</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onMouseEnter={() => setNumMeals(\"8 Meals\")}\n                          onClick={() => setNumMeals(\"8 Meals\")}\n                        >\n                          <span>8 meals</span>\n                        </Dropdown.Item>\n\n                        <Dropdown.Item\n                          onMouseEnter={() => setNumMeals(\"12+ Meals\")}\n                          onClick={() => setNumMeals(\"12+ Meals\")}\n                        >\n                          <span>12+ meals</span>\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </div>\n                </Col>\n\n                {/* Freq */}\n                {/* <Col style={{ marginBottom: \"35px\" }}>\n                  <h2 className=\"text-center\">Frequency</h2>\n                  <h6 className=\"text-center\">Order one-time or recurring </h6>\n\n                  <div className=\"d-flex align-items-center justify-content-center\">\n                    <Dropdown>\n                      <Dropdown.Toggle\n                        variant=\"dark\"\n                        id=\"dropdown-basic\"\n                        style={{ height: \"50px\", width: \"150px\" }}\n                      >\n                        <span className=\"text-primary\">{freq}</span>\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item\n                          onMouseEnter={() => setFreq(\"Weekly\")}\n                          onClick={() => setFreq(\"Weekly\")}\n                        >\n                          <span>Weekly</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onMouseEnter={() => setFreq(\"Bi-Weekly\")}\n                          onClick={() => setFreq(\"Bi-Weekly\")}\n                        >\n                          <span>Bi-Weekly</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onMouseEnter={() => setFreq(\"One Time\")}\n                          onClick={() => setFreq(\"One Time\")}\n                        >\n                          <span>One Time</span>\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </div>\n                </Col> */}\n\n                {/* Delivery Date */}\n                <Col style={{ marginBottom: \"55px\" }}>\n                  <h2 className=\"text-center\">Delivery</h2>\n                  <h6 className=\"text-center\">\n                    Deliveries between 6pm - 7:30pm\n                  </h6>\n                  <div className=\"d-flex align-items-center justify-content-center\">\n                    {/* <Dropdown>\n                      <Dropdown.Toggle\n                        variant=\"dark\"\n                        id=\"dropdown-basic\"\n                        style={{ height: \"50px\", width: \"150px\" }}\n                      >\n                        <span className=\"text-primary\">{delivDate}</span>\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item\n                          onMouseEnter={() => setDelivDate(\"Monday\")}\n                          onClick={() => setDelivDate(\"Monday\")}\n                        >\n                          <span>Monday</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onMouseEnter={() => setDelivDate(\"Wednesday\")}\n                          onClick={() => setDelivDate(\"Wednesday\")}\n                        >\n                          <span>Wednesday</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onMouseEnter={() => setDelivDate(\"Friday\")}\n                          onClick={() => setDelivDate(\"Friday\")}\n                        >\n                          <span>Friday</span>\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown> */}\n\n                    <DeliveryDate\n                      delivDate={delivDate}\n                      setDelivDate={setDelivDate}\n                    />\n                  </div>\n                </Col>\n              </Row>\n\n              {/* Pick Meals Button */}\n              <div className=\"d-flex justify-content-center align-items-center\">\n                <Button\n                  variant=\"secondary\"\n                  className=\"text-primary\"\n                  style={{\n                    height: \"50px\",\n                    width: \"150px\",\n                    borderRadius: \"25px\",\n                    fontSize: \"25px\",\n                  }}\n                  onClick={handlePickMeals}\n                >\n                  Pick Meals\n                </Button>\n              </div>\n            </Container>\n          </div>\n        </div>\n      </section>\n\n      {/* Tasty, Fresh, Convinient section */}\n      <InformationGrid data={data} />\n\n      {/* Pop up if zipcode, freq, plan, or date missing */}\n      <Modal show={show} onHide={handleClose} style={{ fontFamily: \"Signika\" }}>\n        <Modal.Header closeButton style={{ textAlign: \"center\" }}>\n          <Modal.Title>Fill all Info Correctly to pick meals</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p className=\"lead text-center\">{msg}</p>\n        </Modal.Body>\n\n        <Modal.Footer className=\"h-100 d-flex align-items-center justify-content-center\">\n          <Button variant=\"dark\" onClick={handleClose}>\n            <span className=\"text-primary\">Close</span>\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default OrderPage;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/CheckOut/CheckOut.js",["256"],[],"import Row from \"react-bootstrap/Row\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n} from \"mdb-react-ui-kit\";\n\nimport \"./checkOut.css\";\nimport { Button } from \"react-bootstrap\";\nimport userSession from \"../../Service/userSession\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport SignUpPopUp from \"../NavBar/SignUpPopUp/SignUpPopUp\";\nimport LogInPopUP from \"../NavBar/LogInPopUp/LogInPopUp\";\nimport MealData from \"../../Service/MealData\";\nconst CheckOut = ({ setLogIn, mealNumbers, cart, setCart, totalPrice }) => {\n  const navigate = useNavigate();\n  const handleBack = () => {\n    navigate(\"/pickMeals\");\n  };\n  const checkOutContent = () => {\n    return (\n      <section\n        className=\"vh-100\"\n        style={{ backgroundColor: \"white\", fontFamily: \"Signika\" }}\n      >\n        <MDBContainer className=\"h-100\">\n          <MDBRow className=\"justify-content-center align-items-center h-100\">\n            <MDBCol>\n              <p className=\"text-center\">\n                <span className=\"h2\">Check Out</span>\n              </p>\n\n              <MDBCard className=\"mb-4\">\n                <MDBCardBody className=\"p-4 mt-0\">\n                  {/* replicate row */}\n\n                  {cart.map((item) => {\n                    return (\n                      <>\n                        <MDBRow className=\"align-items-center\" key={item.id}>\n                          <MDBCol\n                            md=\"2\"\n                            className=\"d-flex justify-content-center\"\n                          >\n                            <div>\n                              <p className=\"small text-muted mb-0 pb-1 text-center\">\n                                Name\n                              </p>\n                              <p className=\"lead fw-normal mb-0 text-center\">\n                                {item.mealName}\n                              </p>\n                            </div>\n                          </MDBCol>\n                          <MDBCol\n                            md=\"2\"\n                            className=\"d-flex justify-content-center\"\n                          >\n                            <div>\n                              <p className=\"small text-muted pb-1 text-center\">\n                                Quantity\n                              </p>\n                              <p className=\"lead fw-normal text-center\">\n                                {mealNumbers[item.id]}\n                              </p>\n                            </div>\n                          </MDBCol>\n                          <MDBCol\n                            md=\"2\"\n                            className=\"d-flex justify-content-center\"\n                          >\n                            <div>\n                              <p className=\"small text-muted pb-1 text-center\">\n                                Price\n                              </p>\n                              <p className=\"lead fw-normal text-center\">\n                                ${MealData.getMeals()[item.id].price}\n                              </p>\n                            </div>\n                          </MDBCol>\n                          <MDBCol\n                            md=\"2\"\n                            className=\"d-flex justify-content-center\"\n                          >\n                            <div>\n                              <p className=\"small text-muted mb-0 pb-2 text-center\">\n                                Total\n                              </p>\n                              <p className=\"lead fw-normal mb-0\">\n                                $\n                                {mealNumbers[item.id] *\n                                  MealData.getMeals()[item.id].price}\n                              </p>\n                            </div>\n                          </MDBCol>\n                        </MDBRow>\n                        <hr />\n                      </>\n                    );\n                  })}\n                </MDBCardBody>\n              </MDBCard>\n\n              <MDBCard className=\"mb-5\">\n                <MDBCardBody className=\"p-4 mt-0\">\n                  <div className=\"float-end\">\n                    <p className=\"mb-0 me-5 d-flex align-items-center\">\n                      <span className=\"small text-muted me-2\">\n                        Order total:\n                      </span>\n                      <span className=\"lead fw-normal\">${totalPrice}</span>\n                    </p>\n                  </div>\n                </MDBCardBody>\n              </MDBCard>\n\n              <div className=\"d-flex justify-content-end\">\n                <MDBBtn\n                  color=\"light\"\n                  size=\"lg\"\n                  className=\"me-2\"\n                  onClick={() => handleBack()}\n                >\n                  &lt; Back\n                </MDBBtn>\n                <MDBBtn size=\"lg\" color=\"dark\">\n                  Proceed\n                </MDBBtn>\n              </div>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </section>\n    );\n  };\n\n  const logInFirst = () => {\n    return (\n      <div\n        className=\"container min-vh-100 align-items-center d-flex justify-content-center\"\n        style={{ fontFamily: \"Signika\" }}\n      >\n        <form\n          style={{ backgroundColor: \"rgb(247, 193, 68)\", padding: \"20px\" }}\n          className=\"rounded\"\n        >\n          <Row className=\"mb-4\">\n            <div className=\"form-group\">\n              <label for=\"exampleInputEmail1\" className=\"mb-2\">\n                <p className=\"lead\">Log in to continue</p>\n              </label>\n            </div>\n          </Row>\n\n          <div className=\"container text-center mb-4\">\n            <LogInPopUP\n              style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n              setLogIn={setLogIn}\n            />\n          </div>\n\n          <div className=\"container text-center\">\n            {/* <Button variant=\"dark\" className=\"\">\n              Log In\n            </Button> */}\n            <SignUpPopUp\n              style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n              setLogIn={setLogIn}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  };\n  return <>{userSession.isLoggedIn() ? checkOutContent() : logInFirst()}</>;\n};\n\nexport default CheckOut;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/OrderHistory/OrderHistory.js",["257","258","259","260"],[],"import { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport userSession from \"../../Service/userSession\";\nimport OrderAPIService from \"../../Service/OrderAPIService\";\n\nconst OrderHistory = ({ isLoggedIn }) => {\n  const navigate = useNavigate();\n  const [orders, setOrders] = useState(null);\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/\");\n    } else {\n      document.title = \"History\";\n      const fetchHistory = () => {\n        console.log(\"SERVICE CALLED....\");\n        OrderAPIService.orderHistory({ id: userSession.getUser().id })\n          .then((response) => {\n            if (response.status == 200) {\n              setOrders(response.data);\n            } else {\n              setOrders(null);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n            setOrders(null);\n          });\n      };\n      !orders && fetchHistory();\n    }\n  }, []);\n\n  const toHomePage = () => {\n    navigate(\"/\");\n  };\n  const noHistory = () => {\n    return (\n      <section\n        className=\"md-primary\"\n        style={{ fontFamily: \"Signika\", padding: \"64px 32px\" }}\n      >\n        <div\n          className=\"container text-center\"\n          style={{\n            marginRight: \"auto\",\n            marginBottom: \"340px\",\n            marginLeft: \"auto\",\n          }}\n        >\n          <div style={{ marginTop: \"40px\" }}>\n            {/* Image */}\n            <img\n              className=\"img-fluid\"\n              src={require(\"../../Resources/Vector/noHistory.png\")}\n              style={{ height: \"60%\", width: \"50%\" }}\n            />\n            {/* Help Text */}\n            <div style={{ marginTop: \"\" }}>\n              <p\n                className=\"\"\n                style={{\n                  fontSize: \"2.5vw\",\n                  marginTop: \"8.5vh\",\n                  marginBottom: \"6.5vh\",\n                }}\n              >\n                Uh-Oh! Looks like you don't have any orders yet! Try our meals\n                now!\n              </p>\n\n              {/* Order Button */}\n              <div className=\"h-100 d-flex align-items-center justify-content-center\">\n                <Link to=\"/order\">\n                  <Button\n                    variant=\"secondary\"\n                    className=\"text-primary\"\n                    style={{\n                      height: \"50px\",\n                      width: \"150px\",\n                      borderRadius: \"25px\",\n                      fontSize: \"25px\",\n                    }}\n                  >\n                    Order\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  };\n\n  const history = () => {\n    return (\n      <section\n        className=\"bg-primary\"\n        style={{ fontFamily: \"Signika\", padding: \"20% 32px\" }}\n      >\n        <Table striped bordered hover style={{ fontSize: \"calc(16px+1vw)\" }}>\n          <thead>\n            <tr>\n              <th>Meal Size</th>\n              <th>Types of Meals</th>\n              <th>Price</th>\n              <th>Date Ordered</th>\n              <th>Delivery Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => {\n              const {\n                OrderId,\n                deliveryDate,\n                totalPrice,\n                mealSize,\n                orderDate,\n                meals,\n              } = order;\n              return (\n                <tr>\n                  <td>{mealSize}</td>\n                  <td>\n                    {meals.map((meal) => {\n                      return (\n                        <span>\n                          {meal.name}\n                          <br></br>\n                        </span>\n                      );\n                    })}\n                  </td>\n                  <td>{totalPrice}</td>\n                  <td>{orderDate}</td>\n                  <td>{deliveryDate}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n\n        <div className=\"mt-4\">\n          If you would like to cancel your order, please email\n          support@mirchimeals.com before 3pm the prior day of delivery.\n        </div>\n      </section>\n    );\n  };\n\n  const viewOrderHistoryPage = () => {\n    // fetchOrders();\n    if (orders) {\n      if (orders.length === 0) {\n        return noHistory();\n      } else {\n        return history();\n      }\n    } else {\n      return <div>Loading... </div>;\n    }\n  };\n  return <>{isLoggedIn ? viewOrderHistoryPage() : toHomePage()}</>;\n};\n\nexport default OrderHistory;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/RefundsAndCancellationsPolicy/RefundsAndCancellationsPolicy.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/TermsAndCondition/TermsAndCondition.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Hotel/Hotel.js",["261","262"],[],"/**\n * API call required\n */\nimport { useEffect } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Table } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport React from \"react\";\nimport \"./Hotel.css\";\nimport MealData from \"../../Service/MealData\";\nimport HotelAPIService from \"../../Service/HotelAPIService\";\n\nconst Hotel = () => {\n  const [pinLabel, setPinLabel] = useState(\n    <label for=\"exampleInputEmail1\" className=\"mb-2\">\n      PIN\n    </label>\n  );\n  const [pinValue, setPinValue] = useState(\"\");\n  const [mealQuantityTable, setMealQuantityTable] = useState(null);\n  const [ordersTable, setOrdersTable] = useState(null);\n  useEffect(() => {\n    //Replace dates with upcoming sunday's date\n    // Display only after 3:00 PM on Friday\n    HotelAPIService.getMealQuantityTable({ date: \"Sunday: 1/29/2023\" })\n      .then((res) => {\n        setMealQuantityTable(res.data);\n      })\n      .catch((err) => {\n        console.log(\"Erro while fetching mealQuantityTable::: \" + err);\n      });\n\n    //Replace dates with upcoming sunday's date\n    HotelAPIService.getOrderTables({ date: \"Sunday: 1/29/2023\" })\n      .then((res) => {\n        setOrdersTable(res.data);\n      })\n      .catch((err) => {\n        console.log(\"Erro while fetching Orders Table::: \" + err);\n      });\n  }, []);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [displayReport, setDisplayReport] = useState(false);\n  const handleCloseReport = () => setDisplayReport(false);\n  /**\n   * API call to send notifcation to admin\n   */\n  const handleSubmitReport = () => {\n    handleCloseReport();\n  };\n\n  // do validation of pin after than let user in\n  const handleSubmit = () => {\n    if (pinValue === \"123\") {\n      setIsLoggedIn(true);\n      setPinLabel(\n        <label for=\"exampleInputEmail1\" className=\"mb-2\">\n          PIN \n        </label>\n      );\n    } else {\n      setPinLabel(\n        <label for=\"exampleInputEmail1\" className=\"mb-2\" style={{color:\"red\"}}>\n          Incorrect PIN\n        </label>\n      );\n    }\n  };\n  const logInBox = () => {\n    return (\n      <div\n        className=\"container min-vh-100 align-items-center d-flex justify-content-center\"\n        style={{ fontFamily: \"Signika\" }}\n      >\n        <form\n          style={{ backgroundColor: \"rgb(247, 193, 68)\", padding: \"20px\" }}\n          className=\"rounded\"\n        >\n          <Row className=\"mb-4\">\n            <div className=\"form-group\">\n              {pinLabel}\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                placeholder=\"Enter PIN\"\n                onChange={(e) => setPinValue(e.target.value)}\n                value={pinValue}\n              />\n            </div>\n          </Row>\n\n          <div className=\"container text-center\">\n            <Button variant=\"dark\" onClick={handleSubmit} className=\"\">\n              Log In\n            </Button>\n          </div>\n        </form>\n      </div>\n    );\n  };\n\n  const displayMealQuantityTable = () => {\n    return (\n      <>\n        {mealQuantityTable === null ? (\n          \"Loading...\"\n        ) : (\n          <section\n            className=\"bg-primary\"\n            style={{ fontFamily: \"Signika\", padding: \"64px 32px\" }}\n          >\n            <h1 style={{ fontFamily: \"Signika\" }} className=\"text-center mb-4\">\n              Meal Quantity Table\n            </h1>\n            <Table\n              striped\n              bordered\n              hover\n              style={{ fontSize: \"calc(16px+1vw)\", fontFamily: \"Signika\" }}\n            >\n              <thead>\n                <tr>\n                  <th>Meal Type</th>\n                  <th>Total Quantity</th>\n                  <th>Total Qauntity of contents</th>\n                </tr>\n              </thead>\n              <tbody>\n                {mealQuantityTable.map((mealQuantityInfo) => {\n                  const { item_id, Total_Quantity } = mealQuantityInfo;\n                  return (\n                    <tr>\n                      <td>{MealData.getMeals()[item_id].mealName}</td>\n\n                      <td>{Total_Quantity}</td>\n                      <td>\n                        {Object.keys(\n                          MealData.getMeals()[item_id].description\n                        ).map((key) => {\n                          return (\n                            <span>\n                              {`${key} : ${\n                                Total_Quantity *\n                                MealData.getMeals()[item_id].description[key]\n                              }`}\n                              <br></br>\n                            </span>\n                          );\n                        })}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </section>\n        )}\n      </>\n    );\n  };\n  const displayOrdersTable = () => {\n    return (\n      <>\n        {ordersTable === null ? (\n          \"Loading...\"\n        ) : (\n          <section style={{ fontFamily: \"Signika\", padding: \"64px 32px\" }}>\n            <h1 style={{ fontFamily: \"Signika\" }} className=\"text-center mb-4\">\n              Orders Table- Due 5:30PM EST\n            </h1>\n            <Table\n              striped\n              bordered\n              hover\n              style={{ fontSize: \"calc(16px+1vw)\", fontFamily: \"Signika\" }}\n            >\n              <thead>\n                <tr>\n                  <th>Order#</th>\n                  <th>Meals</th>\n                  <th>Due Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {ordersTable.map((order) => {\n                  const { orderNumber, meals, dueDate } = order;\n                  return (\n                    <tr>\n                      <td>{orderNumber}</td>\n\n                      {/* handle meals  */}\n\n                      <td>\n                        {/* {Object.keys(meals).map((key) => {\n                          return (\n                            <span>\n                              {`${MealData.getMeals()[key].mealName} : ${\n                                meals[key]\n                              }`}\n                              <br></br>\n                            </span>\n                          );\n                        })} */}\n                        {meals.map((meal) => {\n                          return (\n                            <span>\n                              {`${meal[0]}: ${meal[1]}`}\n                              <br></br>\n                            </span>\n                          );\n                        })}\n                      </td>\n                      <td>{dueDate}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </section>\n        )}\n      </>\n    );\n  };\n  const actualPortal = () => {\n    /** TABLE 1\n     * call api to get first table in following format\n     * [{mealId:i1,quantity:q1},{mealId:i2,quantity:q2}, {mealId:i3,quantity:q3}...]\n     * \"i\": meal ID; \"q\": quanity of meal with meal id \"i\"\n     */\n    const mealQuantityTable = [\n      // gujarati thali 3 quantity\n\n      { id: 1, quantity: 2 },\n\n      // punjabi thali 1 quantity\n      { id: 2, quantity: 1 },\n\n      // Madrari thali 2 quantity\n      { id: 0, quantity: 2 },\n    ];\n\n    /** TABLE 2\n     * call api to get second table in following format\n     * [{orderNumber:o1, meals:[{mealId:i2,quantity:q2,mealId:i2,quantity:q2}],due:d}]\n     * \"i\": meal ID; \"q\": quanity of meal with id \"i\"; \"d\": due date\n     */\n\n    const ordersTable = [\n      {\n        orderNumber: 1,\n        meals: {\n          1: 2,\n          2: 1,\n        },\n        dueDate: \"12/11/2023\",\n      },\n      {\n        orderNumber: 2,\n        meals: {\n          0: 2,\n        },\n        dueDate: \"12/31/2023\",\n      },\n    ];\n    return (\n      <>\n        <Button\n          variant=\"light\"\n          className=\"text-dark text-center float-start position-fixed\"\n          onClick={() => setDisplayReport(true)}\n        >\n          Report\n        </Button>\n        <Button\n          variant=\"light\"\n          className=\"text-dark text-center float-end\"\n          onClick={() => setIsLoggedIn(false)}\n        >\n          Log Out\n        </Button>\n\n        {displayMealQuantityTable()}\n        {displayOrdersTable()}\n\n        <Modal\n          show={displayReport}\n          onHide={handleCloseReport}\n          style={{ fontFamily: \"Signika\" }}\n        >\n          <Modal.Header closeButton style={{ textAlign: \"center\" }}>\n            <Modal.Title>Report</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <p className=\"lead\">Describe report in detail</p>\n            <form>\n              <div className=\"mb-3\">\n                <label>Report</label>\n                {/* <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"first-name\"\n                  \n                /> */}\n                <textarea className=\"form-control\"></textarea>\n              </div>\n            </form>\n          </Modal.Body>\n\n          <Modal.Footer>\n            {/* Submit Button Clicked */}\n            <Button\n              className=\"text-center\"\n              variant=\"light\"\n              onClick={handleSubmitReport}\n            >\n              <span>Submit</span>\n            </Button>\n            <Button\n              className=\"text-center\"\n              variant=\"light\"\n              onClick={handleCloseReport}\n            >\n              <span>Close</span>\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n    // return(<p className=\"text-dark text-center\" >Logged In</p>)\n  };\n  return <>{!isLoggedIn ? logInBox() : actualPortal()}</>;\n};\n\nexport default Hotel;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/PrivacyPolicy/PrivacyPolicy.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/Service/StripeBackend.js",["263"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/Service/ScrollTop.js",["264"],[],"class ScrollTop{\n\n    // scrolls to the top of the window\n    scrollUp(){\n\n        window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n        });  \n    }\n\n    scrollToFAQ(){\n        window.scrollTo(0, document.body.scrollHeight*.73);\n        \n    }\n\n}\n\nexport default new ScrollTop(); ","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/Service/MealData.js",["265"],[],"class MealData {\n  // depends on zipcode entered by user\n  data = [\n    {\n      id: 0,\n      img: require(\"../Resources/Meals/meal1.png\"),\n      mealName: \"Madrasi Thari \",\n      // description: \"Special Dish from South India\",\n      description: {\n        sambhar: 2,\n        idli: 3,\n        chutney: 1,\n      },\n      price:11.99\n    },\n\n    {\n      id: 1,\n      img: require(\"../Resources/Meals/meal2.png\"),\n      mealName: \"Gujarati Thari\",\n      description: {\n        rotis: 4,\n        saak: 2,\n        gulabJamun: 1,\n      },\n      price:11.99\n    },\n\n    {\n      id: 2,\n      img: require(\"../Resources/Meals/meal3.png\"),\n      mealName: \"Punjabi Thari\",\n      description: {\n        rotis: 6,\n        pannerSabji: 1,\n        saak: 3,\n        gulabJamun: 3,\n        lassi: 1,\n      },\n      price:11.99\n    },\n\n    {\n      id: 3,\n      img: require(\"../Resources/Meals/meal4.png\"),\n      mealName: \"Benagali Thari\",\n      description: {\n        rotis: 4,\n        saak: 2,\n        rausagula: 1,\n      },\n      price:11.99\n    },\n  ];\n  getMeals = () => {\n    // validate zipCode then only send data\n    return this.data;\n  };\n}\n\nexport default new MealData();\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/NavBar/SignUpPopUp/SignUpPopUp.js",["266"],[],"import { Link } from \"react-router-dom\";\nimport { Form } from \"react-bootstrap\";\nimport UserApiService from \"../../../Service/UserApiService\";\n/***\n * Will call backend API to register user\n */\n\nimport userSession from \"../../../Service/userSession\";\nimport \"./SignUp.css\";\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\nfunction SignUpPopUp({ style, setLogIn }) {\n  // display pop up\n  const [display, setDisplay] = useState(false);\n\n  // states for firstName, firstNameLabel\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameLabel, setFirstNameLabel] = useState(\n    <label htmlFor=\"first-name\" className=\"col-form-label\">\n      <span style={{ color: \"black\" }}>\n        First Name <span style={{ color: \"red\" }}>*</span>\n      </span>\n    </label>\n  );\n\n  // states for lastName, lastNameLabel\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameLabel, setLastNameLabel] = useState(\n    <label htmlFor=\"last-name\" className=\"col-form-label\">\n      <span style={{ color: \"black\" }}>\n        Last Name <span style={{ color: \"red\" }}>*</span>\n      </span>\n    </label>\n  );\n\n  // states for email, emailLabel\n  const [email, setEmail] = useState(\"\");\n  const [emailLabel, setEmailLabel] = useState(\n    <label htmlFor=\"email\" className=\"col-form-label\">\n      <span style={{ color: \"black\" }}>\n        Email <span style={{ color: \"red\" }}>*</span>\n      </span>\n    </label>\n  );\n  // states for password, passwordLabel\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userPasswordLabel, setUserPasswordLabel] = useState(\n    <label htmlFor=\"userPassword\" className=\"col-form-label\">\n      <span style={{ color: \"black\" }}>\n        Create Password <span style={{ color: \"red\" }}>*</span>\n      </span>\n    </label>\n  );\n\n  // states for phone, phoneLabel\n  const [phone, setPhone] = useState(\"\");\n  const [phoneLabel, setPhoneLabel] = useState(\n    <label htmlFor=\"phone\" className=\"col-form-label\">\n      <span style={{ color: \"black\" }}>\n        Phone <span style={{ color: \"red\" }}>*</span>\n      </span>\n    </label>\n  );\n\n  // restores labels to black text and replace ** with *\n  // for eg. First Name ** in red will become First Name * in black\n  const resetLabels = () => {\n    setFirstNameLabel(\n      <label htmlFor=\"first-name\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          First Name <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n    setLastNameLabel(\n      <label htmlFor=\"last-name\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          Last Name <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n    setEmailLabel(\n      <label htmlFor=\"email\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          Email <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n\n    setUserPasswordLabel(\n      <label htmlFor=\"userPassword\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          Create Password <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n\n    setPhoneLabel(\n      <label htmlFor=\"phone\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          Phone <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n  };\n\n  // resets state of data\n  const resetData = () => {\n    setFirstName(\"\");\n    setLastName(\"\");\n    setUserPassword(\"\");\n    setEmail(\"\");\n    setPhone(\"\");\n  };\n\n  // reset data & lables\n  const reset = () => {\n    localStorage.removeItem(\"Loading\");\n    resetLabels();\n    resetData();\n  };\n\n  //reset ALL states of data & CLOSE Pop Up\n  const handleClose = () => {\n    reset();\n    setDisplay(false);\n  };\n\n  const handleDisplay = (e) => {\n    e.preventDefault();\n    setDisplay(true);\n  };\n\n  /** User clicked on submit\n   * all fields were entered\n   * API interaction happens here\n   * Validate email\n   * Store data in DB\n   * get userId and update userInfo global state\n   */\n  const handleSubmit = () => {\n    resetLabels();\n    if (firstName.length === 0) {\n      setFirstNameLabel(\n        <label htmlFor=\"first-name\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            First Name <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else if (lastName.length === 0) {\n      setLastNameLabel(\n        <label htmlFor=\"last-name\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            Last Name <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else if (email.length === 0) {\n      setEmailLabel(\n        <label htmlFor=\"email\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            Email <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else if (phone.length !== 10) {\n      setPhoneLabel(\n        <label htmlFor=\"phone\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            Phone <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else if (userPassword.length === 0) {\n      setUserPasswordLabel(\n        <label htmlFor=\"userPassword\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            Create Password <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else if (!document.getElementById(\"ageRestriction\").checked) {\n      document.getElementById(\"agreement\").style.color = \"red\";\n    } else {\n      const toBeAdded = {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: userPassword,\n        phone:phone\n      };\n      UserApiService.registerUser(toBeAdded)\n        .then((response) => {\n          localStorage.removeItem(\"Loading\");\n          if (response.status === 201) {\n            setLogIn(true);\n            const userLoggedIn = {\n              id: response.data,\n              fname: firstName,\n              lname: lastName,\n              emailAddress: email,\n              password: userPassword,\n              phone:phone\n            };\n            userSession.addUser(userLoggedIn);\n            handleClose();\n            console.log(\"SUCCESS ON FRONT END \");\n          } else {\n            console.log(\"FAILURE ON FRONT END \");\n          }\n        })\n        .catch((err) => {\n          localStorage.removeItem(\"Loading\");\n          console.log(\"ERROR::: \" + err);\n        });\n      // IF email valid => following things\n      // store more info on order history\n      // setLogIn(true);\n      // const userLoggedIn = {\n      //   fname: firstName,\n      //   lname: lastName,\n      //   emailAddress: email,\n      //   password: userPassword,\n      // };\n      // userSession.addUser(userLoggedIn);\n      // handleClose();\n\n      // IF email invalid => take some action\n    }\n  };\n\n  return (\n    <>\n      {/* Sign Up Button on Red Box in Showcase */}\n      <button onClick={(e) => handleDisplay(e)} className=\"buttonAdjustments\">\n        <span style={{ color: style.textColor }}>Sign Up</span>\n      </button>\n\n      {/* Content in Pop Up */}\n      <Modal\n        show={display}\n        onHide={handleClose}\n        style={{ fontFamily: \"Signika\" }}\n      >\n        <Modal.Header closeButton style={{ textAlign: \"center\" }}>\n          <Modal.Title>Sign Up</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p className=\"lead\">Fill out this form and you are all set</p>\n          <form>\n            <div className=\"mb-3\">\n              {firstNameLabel}\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"first-name\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n              />\n            </div>\n            <div className=\"mb-3\">\n              {lastNameLabel}\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"last-name\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n              />\n            </div>\n            <div className=\"mb-3\">\n              {emailLabel}\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              {phoneLabel}\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"phone\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              {userPasswordLabel}\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"userPassword\"\n                value={userPassword}\n                onChange={(e) => setUserPassword(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <p id=\"agreement\">\n                {\" \"}\n                <span style={{ marginRight: \"7px\" }}>\n                  <input type=\"checkbox\" id=\"ageRestriction\" />\n                </span>\n                I am 18 years of age or older and agree to the{\" \"}\n                <Link className=\"text-dark\" to=\"/privacy\">\n                  Privacy Policy\n                </Link>\n                ,{\" \"}\n                <Link className=\"text-dark\" to=\"/terms\">\n                  Terms and Conditions\n                </Link>\n                , and{\" \"}\n                <Link className=\"text-dark\" to=\"/refund\">\n                  Refunds and Cancellation Policy\n                </Link>\n                .\n              </p>\n            </div>\n          </form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant={style.buttonColor} onClick={handleClose}>\n            <span style={{ color: style.textColor }}>Close</span>\n          </Button>\n          {/* Submit Button Clicked */}\n          <Button variant={style.buttonColor} onClick={handleSubmit}>\n            {localStorage.getItem(\"Loading\") ? (\n              <span style={{ color: style.textColor }}>Loading...</span>\n            ) : (\n              <span style={{ color: style.textColor }}>Submit</span>\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\nexport default SignUpPopUp;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/NavBar/LogInPopUp/LogInPopUp.js",["267"],[],"import UserApiService from \"../../../Service/UserApiService\";\n/***\n * Will call backend API to authenticate user based on username and password\n */\n\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport userSession from \"../../../Service/userSession\";\n\nfunction LogInPopUP({ style, setLogIn }) {\n  // display pop up\n  const [display, setDisplay] = useState(false);\n\n  const [invalid, setInvalid] = useState(false);\n\n  // states for email, emailLabel\n  const [email, setEmail] = useState(\"\");\n  const [emailLabel, setEmailLabel] = useState(\n    <label htmlFor=\"email\" className=\"col-form-label\">\n      Enter email<span style={{ color: \"red\" }}>*</span>\n    </label>\n  );\n\n  // states for password, passwordLabel\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userPasswordLabel, setUserPasswordLabel] = useState(\n    <label htmlFor=\"userPassword\" className=\"col-form-label\">\n      Enter Password <span style={{ color: \"red\" }}>*</span>\n    </label>\n  );\n\n  // restores labels to black text and replace ** with *\n  // for eg. User Name ** in red will become User Name * in black\n  const resetLabels = () => {\n    setEmailLabel(\n      <label htmlFor=\"email\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          Enter email <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n    setUserPasswordLabel(\n      <label htmlFor=\"userPassword\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          Enter Password <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n\n    setInvalid(false);\n  };\n\n  // resets state of data\n  const resetData = () => {\n    setEmail(\"\");\n    setUserPassword(\"\");\n  };\n\n  // reset data & lables\n  const reset = () => {\n    localStorage.removeItem(\"Loading\");\n    resetData();\n    resetLabels();\n  };\n\n  //reset ALL states of data & CLOSE Pop Up\n  const handleClose = () => {\n    reset();\n    setDisplay(false);\n  };\n\n  const handleDisplay = (e) => {\n    e.preventDefault();\n    setDisplay(true);\n  };\n\n  /** User clicked on submit\n   * all fields were entered\n   * API interaction happens here\n   * Authenticate user from backend based on email & password\n   * get userinfo from backend and update userInfo global state\n   */\n  const handleSubmit = () => {\n    resetLabels();\n    if (email.length === 0) {\n      setEmailLabel(\n        <label htmlFor=\"email\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            Enter User Name <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else if (userPassword.length === 0) {\n      setUserPasswordLabel(\n        <label htmlFor=\"userPassword\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            Enter Password <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else {\n      const toBeAuthenticated = {\n        userName: email,\n        password: userPassword,\n      };\n      // API rough work: order history not fetched!\n      UserApiService.logUserIn(toBeAuthenticated)\n        .then((response) => {\n          localStorage.removeItem(\"Loading\");\n          if (response.status === 200) {\n            if(response.data.length!==0){\n              const userLoggedIn = {\n                id: response.data.id,\n                fname: response.data.First_Name,\n                lname: response.data.Last_Name,\n                emailAddress: response.data.Email,\n                password: response.data.Password,\n                // fix this once it DB is updated!\n                // phone:response.data.phone\n              };\n              userSession.addUser(userLoggedIn);\n              setInvalid(false);\n              setLogIn(true);\n              handleClose();\n            }else{\n              // incorrect password!\n              setInvalid(true);\n            }\n            \n          }\n        })\n        .catch((err) => {\n          localStorage.removeItem(\"Loading\");\n          setInvalid(true);\n          console.log(\"ERROR::: \" + err);\n        });\n\n      // IF username && password valid => following things\n\n      // setLogIn(true);\n\n      // need to receive more info from backend like name and order history\n      const orderhistory = [\n        {\n          size: 4,\n          meals: [\n            \"Punjabi Meal\",\n            \"Gujarati Meal\",\n            \"Bangladeshi Meal\",\n            \"Gujarati Meal\",\n          ],\n          price: 96,\n          orderDate: \"12/11/2022\",\n          deliveryDate: \"Sunday\",\n        },\n\n        {\n          size: 6,\n          meals: [\n            \"Punjabi Meal\",\n            \"Gujarati Meal\",\n            \"Bangladeshi Meal\",\n            \"Gujarati Meal\",\n            \"Gujarati Meal\",\n            \"Bangladeshi Meal\",\n          ],\n          price: 96,\n          orderDate: \"12/12/2022\",\n          deliveryDate: \"Friday\",\n        },\n      ];\n\n      /**\n       * Stuff is commented out because version 1.0 of backend API is being integrated\n       */\n\n      // const userReceived = {\n      //   fname: \"First\",\n      //   lname: \"Last\",\n      //   emailAddress: email,\n      //   password: userPassword,\n      //   orderHistory: orderhistory,\n      // };\n      // userSession.addUser(userReceived);\n      // handleClose();\n\n      // IF username || password invalid => take some action\n    }\n  };\n\n  return (\n    <>\n      {/* Log In Button on Red Box in Showcase */}\n      <button onClick={(e) => handleDisplay(e)} className=\"buttonAdjustments\">\n        <span style={{ color: style.textColor }}>Log In</span>\n      </button>\n\n      {/* Content in Pop Up */}\n      <Modal\n        show={display}\n        onHide={handleClose}\n        style={{ fontFamily: \"Signika\" }}\n      >\n        <Modal.Header closeButton style={{ textAlign: \"center\" }}>\n          <Modal.Title>\n            {invalid ? (\n              <span style={{ color: \"red\" }}>\n                Invalid LogIn Credentials Try Again!\n              </span>\n            ) : (\n              <span>Log In</span>\n            )}\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p className=\"lead\">Enter email and password</p>\n          <form>\n            <div className=\"mb-3\">\n              {emailLabel}\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              {userPasswordLabel}\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"userPassword\"\n                value={userPassword}\n                onChange={(e) => setUserPassword(e.target.value)}\n              />\n            </div>\n          </form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant={style.buttonColor} onClick={handleClose}>\n            <span style={{ color: style.textColor }}>Close</span>\n          </Button>\n          {/* Submit Button Clicked */}\n          <Button variant={style.buttonColor} onClick={handleSubmit}>\n            {localStorage.getItem(\"Loading\") ? (\n              <span style={{ color: style.textColor }}>Loading...</span>\n            ) : (\n              <span style={{ color: style.textColor }}>Submit</span>\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\nexport default LogInPopUP;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/Service/OrderAPIService.js",["268"],[],"import axios from \"axios\";\nconst ORDER_BASE_REST_API_URL = \"https://mm-pure-backend-production.up.railway.app/api/checkout/\";\n\nclass OrderAPIService {\n  addOrder(orderInfo,setSuccessBody) {\n    setSuccessBody(\"Sending Order to DB....\");\n    return axios.post(`${ORDER_BASE_REST_API_URL}addOrder`, orderInfo);\n  }\n  orderHistory(customerId){\n    return axios.post(`${ORDER_BASE_REST_API_URL}getOrderHistory`, customerId);\n  }\n}\n\nexport default new OrderAPIService();\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/Service/HotelAPIService.js",["269"],[],"import axios from \"axios\";\nconst HOTE_BASE_API_URL = \"https://mm-pure-backend-production.up.railway.app/api/hotel/\";\n\nclass HotelAPIService {\n  \n  getMealQuantityTable(date){\n    return axios.post(`${HOTE_BASE_API_URL}mealQuantityTable`, date);\n  }\n  getOrderTables(date){\n    return axios.post(`${HOTE_BASE_API_URL}ordersTable`, date);\n  }\n\n}\n\nexport default new HotelAPIService();\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/AccountInfo/AccountInfo.js",["270","271"],[],"// makes APIcall\nimport UserApiService from \"../../Service/UserApiService\";\nimport { useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport userSession from \"../../Service/userSession\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nconst AccountInfo = ({ show, setShow }) => {\n  // email value displayed on inputfield\n  const [email, setEmail] = useState(userSession.getUser().emailAddress);\n\n  // toggle password visibility\n  const [eyeIcon, setEyeIcon] = useState(<i className=\"bi bi-eye\"></i>);\n\n  // passwd displayed on input field\n  const [userPassword, setUserPassword] = useState(\n    userSession.getUser().password\n  );\n\n  /**\n   * closed without saving\n   * set email and pass to what original was original email and password were\n   */\n  const handleClose = () => {\n    localStorage.removeItem(\"Loading\");\n    disableEmail();\n    disablePassword();\n    setEmail(userSession.getUser().emailAddress);\n    setUserPassword(userSession.getUser().password);\n    setShow(false);\n  };\n\n  /**\n   * case 1: both fields are empty\n   * case 2: nothing is changed\n   * case 3: email is missing\n   * case 4: password is missing\n   * API call made and local session should be updated with updated Info\n   */\n  const handleSubmit = () => {\n    // both fields empty\n    if (\n      (email.length === 0 && userPassword.length === 0) ||\n      (email === userSession.getUser().emailAddress &&\n        userPassword === userSession.getUser().password)\n    ) {\n      setEmail(userSession.getUser().emailAddress);\n      setUserPassword(userSession.getUser().password);\n    } else if (email.length === 0) {\n      setEmail(userSession.getUser().emailAddress);\n      // perform API work to update password\n      // check if email is really changed\n    } else if (userPassword.length === 0) {\n      setUserPassword(userSession.getUser().password);\n      // perform API work to update email\n      // check if password is really changed\n    } else {\n      const currentUserInfo = userSession.getUser();\n      const toBeUpdated = {\n        id: currentUserInfo.id,\n        userName: email,\n        password: userPassword,\n      };\n\n      // if any error happens roll back to caching method\n      // const temp = {\n      //   email: email,\n      //   pass: userPassword,\n      // };\n      // userSession.cache(temp);\n      UserApiService.updateUser(toBeUpdated)\n        .then((response) => {\n          localStorage.removeItem(\"Loading\");\n          if (response.status === 200) {\n            const updatedUser = {\n              id: currentUserInfo.id,\n              fname: currentUserInfo.fname,\n              lname: currentUserInfo.lname,\n              emailAddress: email,\n              password: userPassword,\n            };\n\n            // user session updated to new user\n            userSession.addUser(updatedUser);\n\n            // if any error happens roll back to caching method\n            // userSession.removeCache();\n\n            handleClose();\n          } else if (response.status === 501) {\n            console.log(\"INTERNAL ERR ON SERVER SIDE...\");\n          } else {\n            console.log(\"NO CHANGES MADE! \");\n          }\n        })\n        .catch((err) => {\n          localStorage.removeItem(\"Loading\");\n          console.log(\"ERROR::: \" + err);\n        });\n      // API call to update both email and password\n    }\n    setShow(false);\n  };\n\n  const disableEmail = () => {\n    const element = document.getElementById(\"emailAddressChange\");\n    element.setAttribute(\"disabled\", true);\n  };\n  const enableEmail = () => {\n    const element = document.getElementById(\"emailAddressChange\");\n    if (element.hasAttribute(\"disabled\")) {\n      element.removeAttribute(\"disabled\");\n    }\n  };\n\n  const disablePassword = () => {\n    const element = document.getElementById(\"passwordChange\");\n    element.setAttribute(\"disabled\", true);\n  };\n  const enablePassword = () => {\n    const element = document.getElementById(\"passwordChange\");\n    if (element.hasAttribute(\"disabled\")) {\n      element.removeAttribute(\"disabled\");\n    }\n  };\n\n  const passwordVisibility = () => {\n    const element = document.getElementById(\"passwordChange\");\n    if (element.type === \"text\") {\n      // hide\n      setEyeIcon(<i className=\"bi bi-eye\"></i>);\n      element.type = \"password\";\n    } else {\n      // show\n      setEyeIcon(<i className=\"bi bi-eye-slash\"></i>);\n      element.type = \"text\";\n    }\n  };\n\n  return (\n    <Modal show={show} onHide={handleClose} style={{ fontFamily: \"Signika\" }}>\n      <Modal.Header closeButton style={{ textAlign: \"center\" }}>\n        <Modal.Title>Account Info</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p className=\"lead\">\n          <span>{userSession.getUser().fname} </span>\n          <span>{userSession.getUser().lname}</span>\n        </p>\n        <form>\n          <div className=\"mb-3\">\n            <label htmlFor=\"email\" className=\"col-form-label\">\n              <span style={{ color: \"black\" }}>Email</span>\n            </label>\n            <Button\n              variant=\"light\"\n              style={{\n                height: \"21px\",\n                width: \"26px\",\n                padding: \"1px\",\n                fontSize: \"small\",\n                marginLeft: \"10px\",\n              }}\n              onClick={enableEmail}\n            >\n              <i className=\"bi bi-pencil\"></i>\n            </Button>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"emailAddressChange\"\n              value={email}\n              disabled\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"userPassword\" className=\"col-form-label\">\n              <span style={{ color: \"black\" }}>Password</span>\n            </label>\n            <Button\n              variant=\"light\"\n              style={{\n                height: \"21px\",\n                width: \"26px\",\n                padding: \"1px\",\n                fontSize: \"small\",\n                marginLeft: \"10px\",\n              }}\n              onClick={passwordVisibility}\n            >\n              {eyeIcon}\n            </Button>\n            <Button\n              variant=\"light\"\n              style={{\n                height: \"21px\",\n                width: \"26px\",\n                padding: \"1px\",\n                fontSize: \"small\",\n                marginLeft: \"10px\",\n              }}\n              onClick={enablePassword}\n            >\n              <i className=\"bi bi-pencil\"></i>\n            </Button>\n\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"passwordChange\"\n              value={userPassword}\n              disabled\n              onChange={(e) => setUserPassword(e.target.value)}\n            />\n          </div>\n        </form>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"light\" onClick={handleClose}>\n          <span className=\"text-dark\">Close</span>\n        </Button>\n        {/* Submit Button Clicked */}\n        <Button variant=\"light\" onClick={handleSubmit}>\n          {localStorage.getItem(\"Loading\") ? (\n            <span className=\"text-dark\">Loading...</span>\n          ) : (\n            <span className=\"text-dark\">Save</span>\n          )}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default AccountInfo;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/SharedComponents/PopUp/PopUp.js",["272"],[],"import { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport React from \"react\";\n\nconst PopUp = ({displayPopUp,setDisplayPopUp,title,body}) => {\n  return (\n    <Modal\n          show={displayPopUp}\n          onHide={() => setDisplayPopUp(false)}\n          style={{ fontFamily: \"Signika\" }}\n        >\n          <Modal.Header closeButton style={{ textAlign: \"center\" }}>\n            <Modal.Title>{title}</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>{body}</Modal.Body>\n\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => setDisplayPopUp(false)}>\n              <span className=\"text-primary\">Close</span>\n            </Button>\n          </Modal.Footer>\n        </Modal>\n  );\n};\n\nexport default PopUp;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/About/InformationBox/InformationBox.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/SharedComponents/PopUp/Payment/Payment.js",["273","274","275"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/NavBar/UserProfile/UserProfile.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/Showcase/Showcase.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/NavBar/ShoppingCart/ShoppingCart.js",["276","277","278","279","280","281"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/Questions/Question.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/About/InformationGrid/InformationGrid.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/MealsLookUp/MealsLookUp.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/Testimonials/Testimonials.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/Contact/Contact.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/MealPlans/MealPlans.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/OrderPage/ZipCode/ZipCode.js",["282"],[],"import React from 'react'\nimport './ZipCode.css'; \n\nconst ZipCode = ({zipCode, setZipCode}) => {\n  return (\n    <div className=\"bg-second  p-5\" id = \"Newsletter\" style={{marginTop:\"-40px\", marginBottom:\"10px\"}}>\n      <div className=\"container\" >\n        <div className=\"d-md-flex justify-content-between align-items-center\">\n          <h3 className=\"mb-3 mb-md-0\"></h3>\n\n          <div className=\"input-group news-input\" style={{boxShadow:\"10px 10px 10px black\", borderRadius:\"8px\"}}>\n            <input type=\"number\" min = '0' max='9999' className=\"form-control\" placeholder=\"Enter Zip Code\" value = {zipCode} style={{textAlign:\"center\"}} onChange = {(e)=>setZipCode(e.target.value)}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ZipCode;","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/OrderPage/DeliveryDate/DeliveryDate.js",["283"],[],"import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nconst DeliveryDate = ({ delivDate, setDelivDate }) => {\n  const isSaturday = () => {\n    return new Date().getDay() === 6;\n  };\n\n  const isSunday = () => {\n    return new Date().getDay() === 0;\n  };\n  const [mins, setmins] = useState();\n  useEffect(() => {\n    // Have timer IF today == saturday\n    if (isSaturday()) {\n      const interval = setInterval(() => {\n        setmins(new Date().getSeconds());\n        console.log(\"In Deliv Date Component\");\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, []);\n\n  // 4 upcoming sundays\n  const sundays = () => {\n    const today = new Date();\n    const ar = [];\n    let dayToday = today.getDay();\n    let diff = (7 - dayToday) % 7;\n    // today = first sunday\n    today.setDate(today.getDate() + diff);\n\n    // saturday & after 11:59AM\n    const saturdayCondition =\n      isSaturday() &&\n      new Date().toLocaleTimeString(\"en-US\").split(\" \")[1] === \"PM\";\n\n    let numSundays;\n    // if sunday OR (saturday AND time after 11:59 AM EST)\n    if (isSunday() || saturdayCondition) {\n      numSundays = 4;\n      today.setDate(today.getDate() + 7);\n    } else {\n      numSundays = 3;\n      ar.push(\"Sunday: \" + today.toLocaleDateString());\n      today.setDate(today.getDate() + 7);\n    }\n\n    for (let i = 0; i < numSundays; i++) {\n      ar.push(\"Sunday: \" + today.toLocaleDateString());\n      today.setDate(today.getDate() + 7);\n    }\n    return ar;\n  };\n\n\n  \n  return (\n    <div>\n      <Dropdown>\n        <Dropdown.Toggle\n          variant=\"dark\"\n          id=\"dropdown-basic\"\n          style={{ height: \"50px\", width: \"161px\" }}\n        >\n          <span className=\"text-primary\">{delivDate}</span>\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {sundays().map((item) => {\n            return (\n              <Dropdown.Item key = {item} onClick={() => setDelivDate(item)}>\n                <span>{item}</span>\n              </Dropdown.Item>\n            );\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default DeliveryDate;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/Service/UserApiService.js",["284"],[],"import axios from \"axios\";\nconst USER_BASE_REST_API_URL = \"https://mm-pure-backend-production.up.railway.app/api/auth/\";\n\nclass UserApiServer {\n  // Read\n  // getAllEmployees() {\n  //   return axios.get(USER_BASE_REST_API_URL);\n  // }\n\n  // Create; REGISTER\n  registerUser(user) {\n    localStorage.setItem(\"Loading\",6); \n    return axios.post(`${USER_BASE_REST_API_URL}register`, user);\n  }\n\n  // LOG IN\n  logUserIn(user) {\n    localStorage.setItem(\"Loading\",6); \n    return axios.post(`${USER_BASE_REST_API_URL}login`, user);\n  }\n  // GET\n    // getEmployeeById(id) {\n    //   return axios.get(USER_BASE_REST_API_URL + \"/\" + id);\n    // }\n\n  // UPDATE\n  updateUser(user) {\n    localStorage.setItem(\"Loading\",6); \n    return axios.put(`${USER_BASE_REST_API_URL}update`,user);\n  }\n\n  // delete\n    // deleteEmployee(id) {\n    //   return axios.delete(USER_BASE_REST_API_URL + \"/\" + id);\n    // }\n}\n\nexport default new UserApiServer();\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/FrontendOnly/MM-Pure-FrontEnd/src/components/Home/Testimonials/TestimonialCard.js",[],[],{"ruleId":"285","severity":1,"message":"286","line":30,"column":1,"nodeType":"287","endLine":30,"endColumn":34},{"ruleId":"288","severity":1,"message":"289","line":7,"column":8,"nodeType":"290","messageId":"291","endLine":7,"endColumn":21},{"ruleId":"288","severity":1,"message":"292","line":8,"column":8,"nodeType":"290","messageId":"291","endLine":8,"endColumn":22},{"ruleId":"293","severity":1,"message":"294","line":56,"column":6,"nodeType":"295","endLine":56,"endColumn":8,"suggestions":"296"},{"ruleId":"297","severity":1,"message":"298","line":141,"column":28,"nodeType":"299","messageId":"300","endLine":141,"endColumn":30},{"ruleId":"297","severity":1,"message":"298","line":165,"column":30,"nodeType":"299","messageId":"300","endLine":165,"endColumn":32},{"ruleId":"301","severity":1,"message":"302","line":192,"column":3,"nodeType":"303","messageId":"304","endLine":194,"endColumn":4},{"ruleId":"288","severity":1,"message":"305","line":195,"column":10,"nodeType":"290","messageId":"291","endLine":195,"endColumn":22},{"ruleId":"288","severity":1,"message":"306","line":195,"column":24,"nodeType":"290","messageId":"291","endLine":195,"endColumn":39},{"ruleId":"288","severity":1,"message":"307","line":196,"column":10,"nodeType":"290","messageId":"291","endLine":196,"endColumn":22},{"ruleId":"288","severity":1,"message":"308","line":196,"column":24,"nodeType":"290","messageId":"291","endLine":196,"endColumn":39},{"ruleId":"288","severity":1,"message":"309","line":197,"column":10,"nodeType":"290","messageId":"291","endLine":197,"endColumn":21},{"ruleId":"288","severity":1,"message":"310","line":197,"column":23,"nodeType":"290","messageId":"291","endLine":197,"endColumn":37},{"ruleId":"311","severity":1,"message":"312","line":307,"column":21,"nodeType":"313","endLine":307,"endColumn":76},{"ruleId":"288","severity":1,"message":"314","line":1,"column":10,"nodeType":"290","messageId":"291","endLine":1,"endColumn":14},{"ruleId":"288","severity":1,"message":"315","line":14,"column":10,"nodeType":"290","messageId":"291","endLine":14,"endColumn":17},{"ruleId":"288","severity":1,"message":"315","line":2,"column":18,"nodeType":"290","messageId":"291","endLine":2,"endColumn":25},{"ruleId":"288","severity":1,"message":"316","line":4,"column":17,"nodeType":"290","messageId":"291","endLine":4,"endColumn":23},{"ruleId":"311","severity":1,"message":"312","line":34,"column":11,"nodeType":"313","endLine":37,"endColumn":13},{"ruleId":"288","severity":1,"message":"317","line":13,"column":8,"nodeType":"290","messageId":"291","endLine":13,"endColumn":19},{"ruleId":"293","severity":1,"message":"318","line":35,"column":6,"nodeType":"295","endLine":35,"endColumn":8,"suggestions":"319"},{"ruleId":"293","severity":1,"message":"320","line":91,"column":6,"nodeType":"295","endLine":91,"endColumn":8,"suggestions":"321"},{"ruleId":"288","severity":1,"message":"322","line":12,"column":10,"nodeType":"290","messageId":"291","endLine":12,"endColumn":16},{"ruleId":"323","severity":1,"message":"324","line":23,"column":33,"nodeType":"325","messageId":"326","endLine":23,"endColumn":35},{"ruleId":"293","severity":1,"message":"327","line":36,"column":6,"nodeType":"295","endLine":36,"endColumn":8,"suggestions":"328"},{"ruleId":"311","severity":1,"message":"312","line":57,"column":13,"nodeType":"313","endLine":61,"endColumn":15},{"ruleId":"288","severity":1,"message":"329","line":119,"column":17,"nodeType":"290","messageId":"291","endLine":119,"endColumn":24},{"ruleId":"288","severity":1,"message":"330","line":234,"column":11,"nodeType":"290","messageId":"291","endLine":234,"endColumn":28},{"ruleId":"288","severity":1,"message":"331","line":252,"column":11,"nodeType":"290","messageId":"291","endLine":252,"endColumn":22},{"ruleId":"285","severity":1,"message":"286","line":16,"column":1,"nodeType":"287","endLine":16,"endColumn":36},{"ruleId":"285","severity":1,"message":"286","line":19,"column":1,"nodeType":"287","endLine":19,"endColumn":32},{"ruleId":"285","severity":1,"message":"286","line":61,"column":1,"nodeType":"287","endLine":61,"endColumn":31},{"ruleId":"288","severity":1,"message":"332","line":2,"column":10,"nodeType":"290","messageId":"291","endLine":2,"endColumn":14},{"ruleId":"288","severity":1,"message":"333","line":145,"column":13,"nodeType":"290","messageId":"291","endLine":145,"endColumn":25},{"ruleId":"285","severity":1,"message":"286","line":14,"column":1,"nodeType":"287","endLine":14,"endColumn":38},{"ruleId":"285","severity":1,"message":"286","line":15,"column":1,"nodeType":"287","endLine":15,"endColumn":38},{"ruleId":"288","severity":1,"message":"334","line":3,"column":10,"nodeType":"290","messageId":"291","endLine":3,"endColumn":19},{"ruleId":"288","severity":1,"message":"335","line":9,"column":10,"nodeType":"290","messageId":"291","endLine":9,"endColumn":21},{"ruleId":"288","severity":1,"message":"336","line":1,"column":10,"nodeType":"290","messageId":"291","endLine":1,"endColumn":18},{"ruleId":"297","severity":1,"message":"298","line":71,"column":31,"nodeType":"299","messageId":"300","endLine":71,"endColumn":33},{"ruleId":"293","severity":1,"message":"337","line":130,"column":6,"nodeType":"295","endLine":130,"endColumn":19,"suggestions":"338"},{"ruleId":"288","severity":1,"message":"339","line":132,"column":7,"nodeType":"290","messageId":"291","endLine":132,"endColumn":22},{"ruleId":"288","severity":1,"message":"334","line":1,"column":10,"nodeType":"290","messageId":"291","endLine":1,"endColumn":19},{"ruleId":"288","severity":1,"message":"292","line":2,"column":8,"nodeType":"290","messageId":"291","endLine":2,"endColumn":22},{"ruleId":"288","severity":1,"message":"289","line":14,"column":8,"nodeType":"290","messageId":"291","endLine":14,"endColumn":21},{"ruleId":"288","severity":1,"message":"340","line":15,"column":8,"nodeType":"290","messageId":"291","endLine":15,"endColumn":23},{"ruleId":"297","severity":1,"message":"298","line":54,"column":28,"nodeType":"299","messageId":"300","endLine":54,"endColumn":30},{"ruleId":"297","severity":1,"message":"298","line":72,"column":30,"nodeType":"299","messageId":"300","endLine":72,"endColumn":32},{"ruleId":"341","severity":1,"message":"342","line":9,"column":11,"nodeType":"313","endLine":9,"endColumn":40},{"ruleId":"288","severity":1,"message":"343","line":13,"column":10,"nodeType":"290","messageId":"291","endLine":13,"endColumn":14},{"ruleId":"285","severity":1,"message":"286","line":38,"column":1,"nodeType":"287","endLine":38,"endColumn":36},"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'StripeBackend' is defined but never used.","Identifier","unusedVar","'StripeCheckout' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data.length', 'mealNumbers.length', 'navigate', 'setMealNumbers', 'setResetOrderPageInfo', and 'zipCode'. Either include them or remove the dependency array. If 'setResetOrderPageInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["344"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'successPopUp' is assigned a value but never used.","'setSuccessPopUp' is assigned a value but never used.","'successTitle' is assigned a value but never used.","'setSuccessTitle' is assigned a value but never used.","'successBody' is assigned a value but never used.","'setSuccessBody' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'NavItem' is defined but never used.","'useRef' is defined but never used.","'MealsLookUp' is defined but never used.","React Hook useEffect has missing dependencies: 'scrollFAQ' and 'setScrollFAQ'. Either include them or remove the dependency array. If 'setScrollFAQ' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["345"],"React Hook useEffect has missing dependencies: 'navigate', 'resetOrderPageInfo', 'setDelivDate', 'setNumMeals', and 'setZipCode'. Either include them or remove the dependency array. If 'setZipCode' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["346"],"'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'isLoggedIn', 'navigate', and 'orders'. Either include them or remove the dependency array.",["347"],"'OrderId' is assigned a value but never used.","'mealQuantityTable' is assigned a value but never used.","'ordersTable' is assigned a value but never used.","'Form' is defined but never used.","'orderhistory' is assigned a value but never used.","'useEffect' is defined but never used.","'useNavigate' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'amount', 'cart', 'cartPrice', 'delivDate', 'mealNumbers', 'setCart', 'setCartPrice', and 'setNumMealsSelected'. Either include them or remove the dependency array. If 'setCart' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["348"],"'multilineString' is assigned a value but never used.","'OrderAPIService' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'mins' is assigned a value but never used.",{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},"Update the dependencies array to be: [data.length, mealNumbers.length, navigate, setMealNumbers, setResetOrderPageInfo, zipCode]",{"range":"359","text":"360"},"Update the dependencies array to be: [scrollFAQ, setScrollFAQ]",{"range":"361","text":"362"},"Update the dependencies array to be: [navigate, resetOrderPageInfo, setDelivDate, setNumMeals, setZipCode]",{"range":"363","text":"364"},"Update the dependencies array to be: [isLoggedIn, navigate, orders]",{"range":"365","text":"366"},"Update the dependencies array to be: [amount, cart, cartPrice, delivDate, mealNumbers, setCart, setCartPrice, setNumMealsSelected, stripeToken]",{"range":"367","text":"368"},[1956,1958],"[data.length, mealNumbers.length, navigate, setMealNumbers, setResetOrderPageInfo, zipCode]",[915,917],"[scrollFAQ, setScrollFAQ]",[2931,2933],"[navigate, resetOrderPageInfo, setDelivDate, setNumMeals, setZipCode]",[1081,1083],"[isLoggedIn, navigate, orders]",[4896,4909],"[amount, cart, cartPrice, delivDate, mealNumbers, setCart, setCartPrice, setNumMealsSelected, stripeToken]"]