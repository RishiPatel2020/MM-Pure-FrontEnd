[{"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/index.js":"1","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/reportWebVitals.js":"2","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/App.js":"3","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/Service/userSession.js":"4","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/ErrorPage/ErrorPage.js":"5","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Footer/Footer.js":"6","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Help/Help.js":"7","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/OrderPage/OrderPage.js":"8","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/PickMeals/PickMeals.js":"9","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/About/About.js":"10","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/Home.js":"11","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/NavBar/Nav.js":"12","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Hotel/Hotel.js":"13","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/TermsAndCondition/TermsAndCondition.js":"14","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/PrivacyPolicy/PrivacyPolicy.js":"15","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/CheckOut/CheckOut.js":"16","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/OrderHistory/OrderHistory.js":"17","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/RefundsAndCancellationsPolicy/RefundsAndCancellationsPolicy.js":"18","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/Service/ScrollTop.js":"19","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/Service/MealData.js":"20","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/OrderPage/ZipCode/ZipCode.js":"21","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/About/InformationGrid/InformationGrid.js":"22","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/OrderPage/DeliveryDate/DeliveryDate.js":"23","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/NavBar/SignUpPopUp/SignUpPopUp.js":"24","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/Showcase/Showcase.js":"25","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/NavBar/LogInPopUp/LogInPopUp.js":"26","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/Contact/Contact.js":"27","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/About/InformationBox/InformationBox.js":"28","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/Questions/Question.js":"29","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/AccountInfo/AccountInfo.js":"30","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/MealsLookUp/MealsLookUp.js":"31","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/MealPlans/MealPlans.js":"32","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/NavBar/UserProfile/UserProfile.js":"33","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/Testimonials/Testimonials.js":"34","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/NavBar/ShoppingCart/ShoppingCart.js":"35","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/SharedComponents/PopUp/PopUp.js":"36","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/Service/UserApiService.js":"37","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/Testimonials/TestimonialCard.js":"38","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/Service/StripeBackend.js":"39","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/Service/OrderAPIService.js":"40","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/Service/HotelAPIService.js":"41","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/SharedComponents/PopUp/Payment/Payment.js":"42","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/index.js":"43","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/reportWebVitals.js":"44","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/App.js":"45","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/Service/userSession.js":"46","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/ErrorPage/ErrorPage.js":"47","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Help/Help.js":"48","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/Home.js":"49","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/About/About.js":"50","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Footer/Footer.js":"51","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/NavBar/Nav.js":"52","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/OrderPage/OrderPage.js":"53","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/PickMeals/PickMeals.js":"54","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/CheckOut/CheckOut.js":"55","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Hotel/Hotel.js":"56","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/OrderHistory/OrderHistory.js":"57","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/TermsAndCondition/TermsAndCondition.js":"58","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/PrivacyPolicy/PrivacyPolicy.js":"59","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/RefundsAndCancellationsPolicy/RefundsAndCancellationsPolicy.js":"60","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/SharedComponents/PopUp/Payment/Payment.js":"61","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/Service/ScrollTop.js":"62","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/Questions/Question.js":"63","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/About/InformationGrid/InformationGrid.js":"64","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/Showcase/Showcase.js":"65","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/Contact/Contact.js":"66","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/MealPlans/MealPlans.js":"67","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/About/InformationBox/InformationBox.js":"68","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/NavBar/ShoppingCart/ShoppingCart.js":"69","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/MealsLookUp/MealsLookUp.js":"70","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/Testimonials/Testimonials.js":"71","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/AccountInfo/AccountInfo.js":"72","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/Service/StripeBackend.js":"73","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/NavBar/UserProfile/UserProfile.js":"74","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/OrderPage/DeliveryDate/DeliveryDate.js":"75","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/Service/HotelAPIService.js":"76","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/Service/MealData.js":"77","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/SharedComponents/PopUp/PopUp.js":"78","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/OrderPage/ZipCode/ZipCode.js":"79","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/Service/OrderAPIService.js":"80","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/NavBar/SignUpPopUp/SignUpPopUp.js":"81","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/NavBar/LogInPopUp/LogInPopUp.js":"82","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/Testimonials/TestimonialCard.js":"83","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/Service/UserApiService.js":"84"},{"size":627,"mtime":1674104178000,"results":"85","hashOfConfig":"86"},{"size":362,"mtime":1674104178000,"results":"87","hashOfConfig":"86"},{"size":6274,"mtime":1674875010296,"results":"88","hashOfConfig":"86"},{"size":735,"mtime":1674192711338,"results":"89","hashOfConfig":"86"},{"size":1519,"mtime":1674336170171,"results":"90","hashOfConfig":"86"},{"size":832,"mtime":1674104178000,"results":"91","hashOfConfig":"86"},{"size":2305,"mtime":1674440434275,"results":"92","hashOfConfig":"86"},{"size":12051,"mtime":1674440465737,"results":"93","hashOfConfig":"86"},{"size":11967,"mtime":1674876693833,"results":"94","hashOfConfig":"86"},{"size":6687,"mtime":1674440349526,"results":"95","hashOfConfig":"86"},{"size":3356,"mtime":1674440716144,"results":"96","hashOfConfig":"86"},{"size":4059,"mtime":1674683954260,"results":"97","hashOfConfig":"86"},{"size":9958,"mtime":1674872283372,"results":"98","hashOfConfig":"86"},{"size":16859,"mtime":1674104178000,"results":"99","hashOfConfig":"86"},{"size":25836,"mtime":1674104178000,"results":"100","hashOfConfig":"86"},{"size":6370,"mtime":1674104178000,"results":"101","hashOfConfig":"86"},{"size":4760,"mtime":1674795296052,"results":"102","hashOfConfig":"86"},{"size":3034,"mtime":1674104178000,"results":"103","hashOfConfig":"86"},{"size":304,"mtime":1674104178000,"results":"104","hashOfConfig":"86"},{"size":1168,"mtime":1674104178000,"results":"105","hashOfConfig":"86"},{"size":774,"mtime":1674104178000,"results":"106","hashOfConfig":"86"},{"size":2535,"mtime":1674104178000,"results":"107","hashOfConfig":"86"},{"size":2184,"mtime":1674104178000,"results":"108","hashOfConfig":"86"},{"size":10685,"mtime":1674335211185,"results":"109","hashOfConfig":"86"},{"size":2568,"mtime":1674104178000,"results":"110","hashOfConfig":"86"},{"size":7326,"mtime":1674880217480,"results":"111","hashOfConfig":"86"},{"size":853,"mtime":1674104178000,"results":"112","hashOfConfig":"86"},{"size":1548,"mtime":1674104178000,"results":"113","hashOfConfig":"86"},{"size":4447,"mtime":1674104178000,"results":"114","hashOfConfig":"86"},{"size":7481,"mtime":1674253671760,"results":"115","hashOfConfig":"86"},{"size":3537,"mtime":1674104178000,"results":"116","hashOfConfig":"86"},{"size":6208,"mtime":1674104178000,"results":"117","hashOfConfig":"86"},{"size":3246,"mtime":1674104178000,"results":"118","hashOfConfig":"86"},{"size":3881,"mtime":1674104178000,"results":"119","hashOfConfig":"86"},{"size":11045,"mtime":1674876685217,"results":"120","hashOfConfig":"86"},{"size":773,"mtime":1674104178000,"results":"121","hashOfConfig":"86"},{"size":906,"mtime":1674682810126,"results":"122","hashOfConfig":"86"},{"size":553,"mtime":1674104178000,"results":"123","hashOfConfig":"86"},{"size":490,"mtime":1674686215825,"results":"124","hashOfConfig":"86"},{"size":438,"mtime":1674865062921,"results":"125","hashOfConfig":"86"},{"size":355,"mtime":1674870535375,"results":"126","hashOfConfig":"86"},{"size":5383,"mtime":1674880277532,"results":"127","hashOfConfig":"86"},{"size":627,"mtime":1674104178000,"results":"128","hashOfConfig":"129"},{"size":362,"mtime":1674104178000,"results":"130","hashOfConfig":"129"},{"size":6274,"mtime":1674875010296,"results":"131","hashOfConfig":"129"},{"size":735,"mtime":1674192711338,"results":"132","hashOfConfig":"129"},{"size":1519,"mtime":1674336170171,"results":"133","hashOfConfig":"129"},{"size":2305,"mtime":1674440434275,"results":"134","hashOfConfig":"129"},{"size":3356,"mtime":1674440716144,"results":"135","hashOfConfig":"129"},{"size":6687,"mtime":1674440349526,"results":"136","hashOfConfig":"129"},{"size":832,"mtime":1674104178000,"results":"137","hashOfConfig":"129"},{"size":4059,"mtime":1674683954260,"results":"138","hashOfConfig":"129"},{"size":12051,"mtime":1674440465737,"results":"139","hashOfConfig":"129"},{"size":11967,"mtime":1674876693833,"results":"140","hashOfConfig":"129"},{"size":6370,"mtime":1674104178000,"results":"141","hashOfConfig":"129"},{"size":9958,"mtime":1674872283372,"results":"142","hashOfConfig":"129"},{"size":4760,"mtime":1674795296052,"results":"143","hashOfConfig":"129"},{"size":16859,"mtime":1674104178000,"results":"144","hashOfConfig":"129"},{"size":25836,"mtime":1674104178000,"results":"145","hashOfConfig":"129"},{"size":3034,"mtime":1674104178000,"results":"146","hashOfConfig":"129"},{"size":5383,"mtime":1674880277532,"results":"147","hashOfConfig":"129"},{"size":304,"mtime":1674104178000,"results":"148","hashOfConfig":"129"},{"size":4447,"mtime":1674104178000,"results":"149","hashOfConfig":"129"},{"size":2535,"mtime":1674104178000,"results":"150","hashOfConfig":"129"},{"size":2568,"mtime":1674104178000,"results":"151","hashOfConfig":"129"},{"size":853,"mtime":1674104178000,"results":"152","hashOfConfig":"129"},{"size":6208,"mtime":1674104178000,"results":"153","hashOfConfig":"129"},{"size":1548,"mtime":1674104178000,"results":"154","hashOfConfig":"129"},{"size":11045,"mtime":1674876685217,"results":"155","hashOfConfig":"129"},{"size":3537,"mtime":1674104178000,"results":"156","hashOfConfig":"129"},{"size":3881,"mtime":1674104178000,"results":"157","hashOfConfig":"129"},{"size":7481,"mtime":1674253671760,"results":"158","hashOfConfig":"129"},{"size":490,"mtime":1674686215825,"results":"159","hashOfConfig":"129"},{"size":3246,"mtime":1674104178000,"results":"160","hashOfConfig":"129"},{"size":2184,"mtime":1674104178000,"results":"161","hashOfConfig":"129"},{"size":355,"mtime":1674870535375,"results":"162","hashOfConfig":"129"},{"size":1168,"mtime":1674104178000,"results":"163","hashOfConfig":"129"},{"size":773,"mtime":1674104178000,"results":"164","hashOfConfig":"129"},{"size":774,"mtime":1674104178000,"results":"165","hashOfConfig":"129"},{"size":438,"mtime":1674865062921,"results":"166","hashOfConfig":"129"},{"size":10685,"mtime":1674335211185,"results":"167","hashOfConfig":"129"},{"size":7326,"mtime":1674880217480,"results":"168","hashOfConfig":"129"},{"size":553,"mtime":1674104178000,"results":"169","hashOfConfig":"129"},{"size":906,"mtime":1674682810126,"results":"170","hashOfConfig":"129"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19jyoj",{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"250"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"57bc2x",{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308"},{"filePath":"309","messages":"310","suppressedMessages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","suppressedMessages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","suppressedMessages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318"},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322"},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332"},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336"},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340"},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344"},{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348"},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352"},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365"},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","suppressedMessages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390"},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400"},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410"},{"filePath":"411","messages":"412","suppressedMessages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","suppressedMessages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420"},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424"},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431"},{"filePath":"432","messages":"433","suppressedMessages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249"},{"filePath":"435","messages":"436","suppressedMessages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","suppressedMessages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/index.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/reportWebVitals.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/App.js",["441","442"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/Service/userSession.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/ErrorPage/ErrorPage.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Footer/Footer.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Help/Help.js",["443","444","445"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/OrderPage/OrderPage.js",["446"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/PickMeals/PickMeals.js",["447","448","449","450","451","452","453","454","455","456","457","458","459"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/About/About.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/Home.js",["460","461"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/NavBar/Nav.js",["462","463"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Hotel/Hotel.js",["464","465"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/TermsAndCondition/TermsAndCondition.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/PrivacyPolicy/PrivacyPolicy.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/CheckOut/CheckOut.js",["466"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/OrderHistory/OrderHistory.js",["467","468","469","470"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/RefundsAndCancellationsPolicy/RefundsAndCancellationsPolicy.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/Service/ScrollTop.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/Service/MealData.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/OrderPage/ZipCode/ZipCode.js",["471"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/About/InformationGrid/InformationGrid.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/OrderPage/DeliveryDate/DeliveryDate.js",["472"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/NavBar/SignUpPopUp/SignUpPopUp.js",["473"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/Showcase/Showcase.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/NavBar/LogInPopUp/LogInPopUp.js",["474"],[],"import UserApiService from \"../../../Service/UserApiService\";\n/***\n * Will call backend API to authenticate user based on username and password\n */\n\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport userSession from \"../../../Service/userSession\";\n\nfunction LogInPopUP({ style, setLogIn }) {\n  // display pop up\n  const [display, setDisplay] = useState(false);\n\n  const [invalid, setInvalid] = useState(false);\n\n  // states for email, emailLabel\n  const [email, setEmail] = useState(\"\");\n  const [emailLabel, setEmailLabel] = useState(\n    <label htmlFor=\"email\" className=\"col-form-label\">\n      Enter email<span style={{ color: \"red\" }}>*</span>\n    </label>\n  );\n\n  // states for password, passwordLabel\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userPasswordLabel, setUserPasswordLabel] = useState(\n    <label htmlFor=\"userPassword\" className=\"col-form-label\">\n      Enter Password <span style={{ color: \"red\" }}>*</span>\n    </label>\n  );\n\n  // restores labels to black text and replace ** with *\n  // for eg. User Name ** in red will become User Name * in black\n  const resetLabels = () => {\n    setEmailLabel(\n      <label htmlFor=\"email\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          Enter email <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n    setUserPasswordLabel(\n      <label htmlFor=\"userPassword\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          Enter Password <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n\n    setInvalid(false);\n  };\n\n  // resets state of data\n  const resetData = () => {\n    setEmail(\"\");\n    setUserPassword(\"\");\n  };\n\n  // reset data & lables\n  const reset = () => {\n    localStorage.removeItem(\"Loading\");\n    resetData();\n    resetLabels();\n  };\n\n  //reset ALL states of data & CLOSE Pop Up\n  const handleClose = () => {\n    reset();\n    setDisplay(false);\n  };\n\n  const handleDisplay = (e) => {\n    e.preventDefault();\n    setDisplay(true);\n  };\n\n  /** User clicked on submit\n   * all fields were entered\n   * API interaction happens here\n   * Authenticate user from backend based on email & password\n   * get userinfo from backend and update userInfo global state\n   */\n  const handleSubmit = () => {\n    resetLabels();\n    if (email.length === 0) {\n      setEmailLabel(\n        <label htmlFor=\"email\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            Enter User Name <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else if (userPassword.length === 0) {\n      setUserPasswordLabel(\n        <label htmlFor=\"userPassword\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            Enter Password <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else {\n      const toBeAuthenticated = {\n        userName: email,\n        password: userPassword,\n      };\n      // API rough work: order history not fetched!\n      UserApiService.logUserIn(toBeAuthenticated)\n        .then((response) => {\n          localStorage.removeItem(\"Loading\");\n          if (response.status === 200) {\n            const userLoggedIn = {\n              id: response.data.id,\n              fname: response.data.First_Name,\n              lname: response.data.Last_Name,\n              emailAddress: response.data.Email,\n              password: response.data.Password,\n              phone:response.data.phone\n            };\n            userSession.addUser(userLoggedIn);\n            setInvalid(false);\n            setLogIn(true);\n            handleClose();\n          }\n        })\n        .catch((err) => {\n          localStorage.removeItem(\"Loading\");\n          setInvalid(true);\n          console.log(\"ERROR::: \" + err);\n        });\n\n      // IF username && password valid => following things\n\n      // setLogIn(true);\n\n      // need to receive more info from backend like name and order history\n      const orderhistory = [\n        {\n          size: 4,\n          meals: [\n            \"Punjabi Meal\",\n            \"Gujarati Meal\",\n            \"Bangladeshi Meal\",\n            \"Gujarati Meal\",\n          ],\n          price: 96,\n          orderDate: \"12/11/2022\",\n          deliveryDate: \"Sunday\",\n        },\n\n        {\n          size: 6,\n          meals: [\n            \"Punjabi Meal\",\n            \"Gujarati Meal\",\n            \"Bangladeshi Meal\",\n            \"Gujarati Meal\",\n            \"Gujarati Meal\",\n            \"Bangladeshi Meal\",\n          ],\n          price: 96,\n          orderDate: \"12/12/2022\",\n          deliveryDate: \"Friday\",\n        },\n      ];\n\n      /**\n       * Stuff is commented out because version 1.0 of backend API is being integrated\n       */\n\n      // const userReceived = {\n      //   fname: \"First\",\n      //   lname: \"Last\",\n      //   emailAddress: email,\n      //   password: userPassword,\n      //   orderHistory: orderhistory,\n      // };\n      // userSession.addUser(userReceived);\n      // handleClose();\n\n      // IF username || password invalid => take some action\n    }\n  };\n\n  return (\n    <>\n      {/* Log In Button on Red Box in Showcase */}\n      <button onClick={(e) => handleDisplay(e)} className=\"buttonAdjustments\">\n        <span style={{ color: style.textColor }}>Log In</span>\n      </button>\n\n      {/* Content in Pop Up */}\n      <Modal\n        show={display}\n        onHide={handleClose}\n        style={{ fontFamily: \"Signika\" }}\n      >\n        <Modal.Header closeButton style={{ textAlign: \"center\" }}>\n          <Modal.Title>\n            {invalid ? (\n              <span style={{ color: \"red\" }}>\n                Invalid LogIn Credentials Try Again!\n              </span>\n            ) : (\n              <span>Log In</span>\n            )}\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p className=\"lead\">Enter email and password</p>\n          <form>\n            <div className=\"mb-3\">\n              {emailLabel}\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              {userPasswordLabel}\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"userPassword\"\n                value={userPassword}\n                onChange={(e) => setUserPassword(e.target.value)}\n              />\n            </div>\n          </form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant={style.buttonColor} onClick={handleClose}>\n            <span style={{ color: style.textColor }}>Close</span>\n          </Button>\n          {/* Submit Button Clicked */}\n          <Button variant={style.buttonColor} onClick={handleSubmit}>\n            {localStorage.getItem(\"Loading\") ? (\n              <span style={{ color: style.textColor }}>Loading...</span>\n            ) : (\n              <span style={{ color: style.textColor }}>Submit</span>\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\nexport default LogInPopUP;\n",[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/Contact/Contact.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/About/InformationBox/InformationBox.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/Questions/Question.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/AccountInfo/AccountInfo.js",["475","476"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/MealsLookUp/MealsLookUp.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/MealPlans/MealPlans.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/NavBar/UserProfile/UserProfile.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/Testimonials/Testimonials.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/NavBar/ShoppingCart/ShoppingCart.js",["477","478","479","480","481","482"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/SharedComponents/PopUp/PopUp.js",["483"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/Service/UserApiService.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/components/Home/Testimonials/TestimonialCard.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/Service/StripeBackend.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/Service/OrderAPIService.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/Service/HotelAPIService.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/front-end/src/SharedComponents/PopUp/Payment/Payment.js",["484","485"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/index.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/reportWebVitals.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/App.js",["486","487"],[],"import ErrorPage from \"./components/ErrorPage/ErrorPage\";\nimport { useEffect, useRef } from \"react\";\nimport Help from \"./components/Help/Help\";\nimport Home from \"./components/Home/Home\";\nimport About from \"./components/About/About\";\nimport Footer from \"./components/Footer/Footer\";\nimport React from \"react\";\nimport \"./index.css\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/NavBar/Nav\";\nimport { Route, Routes } from \"react-router-dom\";\nimport OrderPage from \"./components/OrderPage/OrderPage\";\nimport PickMeals from \"./components/PickMeals/PickMeals\";\nimport CheckOut from \"./components/CheckOut/CheckOut\";\nimport Hotel from \"./components/Hotel/Hotel\";\nimport userSession from \"./Service/userSession\";\nimport OrderHistory from \"./components/OrderHistory/OrderHistory\";\nimport PrivacyPolicy from \"./components/PrivacyPolicy/PrivacyPolicy\";\nimport TermsAndCondition from \"./components/TermsAndCondition/TermsAndCondition\";\nimport RefundsAndCancellationsPolicy from \"./components/RefundsAndCancellationsPolicy/RefundsAndCancellationsPolicy\";\nimport Payment from \"./SharedComponents/PopUp/Payment/Payment\";\nfunction App() {\n  useEffect(() => {\n    console.log(\"APP RENDERED...\");\n  }, []);\n  // Nav, Home\n  const [loggedIn, setLogIn] = useState(userSession.isLoggedIn());\n\n  // OrderPage\n  const [numMeals, setNumMeals] = useState(\"Select Plan\"); // won't be that useful; just to trick user's mind\n  const [zipCode, setZipCode] = useState(\"\");\n  // const [freq, setFreq] = useState(\"Select Frequency\");\n  const [delivDate, setDelivDate] = useState(\"Select Day\");\n\n  // Nav, PickMeals\n  const [cart, setCart] = useState([]);\n  const [mealNumbers, setMealNumbers] = useState([]);\n\n  // Connecting PickMeals & OrderPage, [About,Home,Help....]\n  // 0: do NOT reset, 1: RESET Everything except Number of Meals bc we go from Home to OrderPage by selecting number of meals, 2: RESET EVERYTHING\n  const [resetOrderPageInfo, setResetOrderPageInfo] = useState(3);\n\n  // total price REMOVE THIS IF LOCAL WORKS\n  const [totalPrice, setTotalPrice] = useState(0);\n  // localtotalPrice\n  const [cartPrice, setCartPrice] = useState(0);\n  const [numMealsSelected, setNumMealsSelected] = useState(0);\n\n  // Scroll\n  const [scrollFAQ, setScrollFAQ] = useState(false);\n\n  const navAndFoot = (element) => {\n    return (\n      <>\n        <Nav\n          loggedIn={loggedIn}\n          setLogIn={setLogIn}\n          cart={cart}\n          setCart={setCart}\n          mealNumbers={mealNumbers}\n          setMealNumbers={setMealNumbers}\n          totalPrice={totalPrice}\n          setTotalPrice={setTotalPrice}\n          cartPrice={cartPrice}\n          setCartPrice={setCartPrice}\n          numMeals={numMeals}\n          numMealsSelected={numMealsSelected}\n          setNumMealsSelected={setNumMealsSelected}\n          scrollFAQ={scrollFAQ}\n          setScrollFAQ={setScrollFAQ}\n          delivDate ={delivDate}\n        />\n\n        {/* to make nav sticked to top */}\n        <section className=\"stickNavBarAdjustments\"></section>\n        {/* About, Home, Help,... */}\n        {element}\n        <Footer />\n      </>\n    );\n  };\n\n  return (\n    <>\n      <Routes>\n        {/* Home */}\n        <Route\n          exact\n          path=\"/\"\n          element={navAndFoot(\n            <Home\n              loggedIn={loggedIn}\n              setLogIn={setLogIn}\n              setMeals={setNumMeals}\n              setResetOrderPageInfo={setResetOrderPageInfo}\n              setCart={setCart}\n              setMealNumbers={setMealNumbers}\n              scrollFAQ={scrollFAQ}\n              setScrollFAQ={setScrollFAQ}\n            />\n          )}\n        />\n\n        {/* About */}\n        <Route exact path=\"/about\" element={navAndFoot(<About />)} />\n\n        {/* Help */}\n        <Route\n          exact\n          path=\"/help\"\n          element={navAndFoot(\n            <Help scrollFAQ={scrollFAQ} setScrollFAQ={setScrollFAQ} />\n          )}\n        />\n\n        {/* Order Page */}\n        <Route\n          exact\n          path=\"/order\"\n          element={navAndFoot(\n            <OrderPage\n              numMeals={numMeals}\n              setNumMeals={setNumMeals}\n              zipCode={zipCode}\n              setZipCode={setZipCode}\n              // freq={freq}\n              // setFreq={setFreq}\n              delivDate={delivDate}\n              setDelivDate={setDelivDate}\n              resetOrderPageInfo={resetOrderPageInfo}\n              setResetOrderPageInfo={setResetOrderPageInfo}\n              setMealNumbers={setMealNumbers}\n            />\n          )}\n        />\n\n        {/* PickMeals page */}\n        <Route\n          exact\n          path=\"/pickMeals\"\n          element={navAndFoot(\n            <PickMeals\n              zipCode={zipCode}\n              cart={cart}\n              setCart={setCart}\n              mealNumbers={mealNumbers}\n              setMealNumbers={setMealNumbers}\n              setResetOrderPageInfo={setResetOrderPageInfo}\n              totalPrice={totalPrice}\n              setTotalPrice={setTotalPrice}\n              numMealsSelected={numMealsSelected}\n              setNumMealsSelected={setNumMealsSelected}\n              setLogIn={setLogIn}\n              numMeals={numMeals}\n              cartPrice={cartPrice}\n              setCartPrice={setCartPrice}\n              delivDate={delivDate}\n            />\n          )}\n        />\n\n        {/* CheckOut Page */}\n        <Route exact path=\"/checkOut\" element={<CheckOut />} />\n\n        {/* Order History Page */}\n        <Route\n          exact\n          path=\"/orderHistory\"\n          element={navAndFoot(<OrderHistory isLoggedIn={loggedIn} />)}\n        />\n\n        {/* Hotel Page */}\n        <Route exact path=\"/hotel\" element={<Hotel />} />\n\n        {/* Privacy Policy */}\n        <Route exact path=\"/privacy\" element={navAndFoot(<PrivacyPolicy />)} />\n\n        {/* Terms & Condition Policy */}\n        <Route\n          exact\n          path=\"/terms\"\n          element={navAndFoot(<TermsAndCondition />)}\n        />\n\n        {/* Refunds Policy */}\n        <Route\n          exact\n          path=\"/refund\"\n          element={navAndFoot(<RefundsAndCancellationsPolicy />)}\n        />\n\n        <Route path=\"*\" element={navAndFoot(<ErrorPage />)} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/Service/userSession.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/ErrorPage/ErrorPage.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Help/Help.js",["488","489","490"],[],"import { useEffect } from \"react\";\nimport { Button, NavItem } from \"react-bootstrap\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport React, { useRef } from \"react\";\nimport ScrollTop from \"../../Service/ScrollTop\";\n\nconst Help = ({scrollFAQ, setScrollFAQ}) => {\n  useEffect(() => {\n    document.title=\"Help\"\n    ScrollTop.scrollUp();\n  }, []);\n  const navigate = useNavigate();\n  const toFAQ = (e) => {\n    e.preventDefault();\n    setScrollFAQ(true); \n    navigate(\"/\");\n\n  };\n  return (\n    <section\n      className=\"mealPlans bg-primary\"\n      style={{ fontFamily: \"Signika\", padding: \"64px 32px\" }}\n    >\n      <div\n        className=\"container text-center\"\n        style={{\n          marginRight: \"auto\",\n          marginBottom: \"340px\",\n          marginLeft: \"auto\",\n        }}\n      >\n        <div style={{ marginTop: \"40px\" }}>\n          {/* Image */}\n          <img\n            className=\"img-fluid\"\n            src={require(\"../../Resources/Vector/help.png\")}\n          />\n          {/* Help Text */}\n          <div style={{ marginTop: \"30px\" }}>\n            <p className=\"\">\n              Any inquiries, comments, concerns, or requests for cancellations\n              please address to: support@mirchimeal.com\n            </p>\n            <p>\n              Our support staff will get back to you in less than 3 hours.\n              Promise :)\n            </p>\n            <p>\n              Please check our <Link className=\"text-dark mx-1\" onClick={(e)=>toFAQ(e)}>FAQ</Link>\n              section to see if you can find the answer to your question.{\" \"}\n            </p>\n            <p>In the meantime, try out our meals.</p>\n\n            {/* Order Button */}\n            <div className=\"h-100 d-flex align-items-center justify-content-center\">\n              <Link to=\"/order\">\n                <Button\n                  variant=\"secondary\"\n                  className=\"text-primary\"\n                  style={{\n                    height: \"50px\",\n                    width: \"150px\",\n                    borderRadius: \"25px\",\n                    fontSize: \"25px\",\n                  }}\n                >\n                  Order\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Help;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/Home.js",["491","492"],[],"/***\n * has 1 Nav bar, 2 Information Boxes, 1 Foot Bar\n */\n\nimport { useEffect } from \"react\";\nimport ScrollTop from \"../../Service/ScrollTop\";\nimport React from \"react\";\nimport Showcase from \"./Showcase/Showcase\";\nimport Question from \"./Questions/Question\";\nimport Contact from \"./Contact/Contact\";\nimport InformationGrid from \"../About/InformationGrid/InformationGrid\";\nimport MealPlans from \"./MealPlans/MealPlans\";\nimport MealsLookUp from \"./MealsLookUp/MealsLookUp\";\nimport Testimonials from \"./Testimonials/Testimonials\";\nconst Home = ({\n  loggedIn,\n  setLogIn,\n  setMeals,\n  setResetOrderPageInfo,\n  setCart,\n  setMealNumbers,\n  scrollFAQ,\n  setScrollFAQ,\n}) => {\n  useEffect(() => {\n    document.title=\"Mirchi Meals\"\n    if (scrollFAQ) {\n      console.log(\"Down!!!\");\n      ScrollTop.scrollToFAQ();\n      setScrollFAQ(false);\n    } else {\n      console.log(\"UP!!!\");\n      ScrollTop.scrollUp();\n    }\n  }, []);\n  const saveTime = {\n    backColor: \"primary\",\n    headingColor: \"dark\",\n    titleColor: \"secondary\",\n    textColor: \"dark\",\n\n    heading: \"How It Works?\",\n    image1: require(\"../../Resources/Vector/step1.png\"),\n    image1Height: \"150px\",\n    image1Width: \"250px\",\n    title1: \"Choose Your Meals and Plan\",\n    description1:\n      \"Choose a minimum of 4 ready-to-eat meals\",\n\n    image2: require(\"../../Resources/Vector/step2.png\"),\n    image2Width: \"250px\",\n    image2Height: \"150px\",\n    title2: \"Receive Your Delivery \",\n    description2: \"All meals for the week are delivered straight to you.\",\n\n    image3: require(\"../../Resources/Vector/step3.png\"),\n    image3Width: \"250px\",\n    image3Height: \"150px\",\n    title3: \"Enjoy Your Meals\",\n    description3: \"Microwave meals throughout the week and enjoy right away!\",\n  };\n\n  const stats = {\n    backColor: \"light\",\n    headingColor: \"dark\",\n    titleColor: \"dark\",\n    textColor: \"dark\",\n\n    heading: \"Authentically Amazing\",\n    image1: require(\"../../Resources/Vector/customers.png\"),\n    image1Height: \"150px\",\n    image1Width: \"345.95px\",\n    title1: \"Diverse Customers\",\n    description1:\n      \"Customers from backgrounds such as: programmers, students, sports enthusiasts, military veterans\",\n\n    image2: require(\"../../Resources/Vector/satisfiction.png\"),\n    image2Width: \"241.44px\",\n    image2Height: \"150px\",\n    title2: \"Guaranteed Satisfaction\",\n    description2:\n      \"Customers have repeatedly praised Mirchi Meals’ affordability, quantity and pure taste\",\n\n    image3: require(\"../../Resources/Vector/kitchen.png\"),\n    image3Width: \"313.80px\",\n    image3Height: \"150px\",\n    title3: \"Quality Chefs and Ingredients\",\n    description3:\n      \"Across New Jersey, we are partnered with top rated kitchens.\",\n  };\n  return (\n    <>\n      {/* Log In & Sign Up Button */}\n      <Showcase loggedIn={loggedIn} setLogIn={setLogIn} />\n\n      {/* How you save time */}\n      <InformationGrid data={saveTime} />\n\n      {/* Meal Plans */}\n      <MealPlans\n        setMeals={setMeals}\n        setResetOrderPageInfo={setResetOrderPageInfo}\n        setCart={setCart}\n        setMealNumbers={setMealNumbers}\n      />\n\n      {/* Fans Favorite */}\n      {/* <MealsLookUp /> */}\n      <Testimonials />\n\n      {/* Stats */}\n      <InformationGrid data={stats} />\n\n      {/* FAQs */}\n      <Question />\n\n      {/* Contact */}\n      <Contact />\n    </>\n  );\n};\n\nexport default Home;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/About/About.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Footer/Footer.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/NavBar/Nav.js",["493","494"],[],"import { Link } from \"react-router-dom\";\nimport Nav from \"react-bootstrap/Nav\";\nimport AccountInfo from \"../AccountInfo/AccountInfo\";\nimport userSession from \"../../Service/userSession\";\nimport Container from \"react-bootstrap/Container\";\nimport \"./Nav.css\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport ShoppingCart from \"./ShoppingCart/ShoppingCart\";\nimport UserProfile from \"./UserProfile/UserProfile\";\nimport { useNavigate } from \"react-router-dom\";\nimport ScrollTop from \"../../Service/ScrollTop\";\nimport { NavItem } from \"react-bootstrap\";\n\nfunction NavBar({\n  loggedIn,\n  setLogIn,\n  cart,\n  setCart,\n  mealNumbers,\n  setMealNumbers,\n  cartPrice,\n  setCartPrice,\n  numMeals,\n  numMealsSelected,\n  setNumMealsSelected,\n  setScrollFAQ,\n  delivDate\n}) {\n  const navigate = useNavigate();\n  const [displayAccountInfo, setDisplayAccountInfo] = useState(false);\n  // might cause error in PRODUCTION due to paths and hashes \"#/\"\n  const toFAQ = (e) => {\n    // console.log(\"PATH::: \"+window.location.href);\n    let path = window.location.href;\n    path = path.split(\"#/\")[1];\n    console.log(\"PATH::: \" + path);\n    if (path === undefined || path.length === 0) {\n      ScrollTop.scrollToFAQ();\n    } else {\n      navigate(\"/\");\n      setScrollFAQ(true);\n    }\n  };\n\n  return (\n    <Navbar\n      collapseOnSelect\n      expand=\"lg\"\n      bg=\"secondary\"\n      variant=\"light\"\n      className=\"fixed-top\"\n    >\n      <Container style={{ fontFamily: \"Signika\" }}>\n        {/* Mirchi Meals  */}\n        <Navbar.Brand>\n          <Nav.Link href=\"#/\">\n            <img\n              src={require(\"../../Resources/Logo/mirchiMealsLogo.png\")}\n              alt=\"MirchiMealsLogo\"\n              className=\"logoAdjustment\"\n            />\n          </Nav.Link>\n        </Navbar.Brand>\n\n        {/* user Profile */}\n        <UserProfile\n          setDisplayAccountInfo={setDisplayAccountInfo}\n          setLogIn={setLogIn}\n        />\n\n        {/* Shopping cart */}\n        <ShoppingCart\n          cart={cart}\n          setCart={setCart}\n          cartPrice={cartPrice}\n          setCartPrice={setCartPrice}\n          mealNumbers={mealNumbers}\n          setMealNumbers={setMealNumbers}\n          setLogIn={setLogIn}\n          numMeals={numMeals}\n          numMealsSelected={numMealsSelected}\n          setNumMealsSelected={setNumMealsSelected}\n          delivDate={delivDate}\n        />\n\n        <Navbar.Toggle\n          aria-controls=\"responsive-navbar-nav\"\n          style={{\n            backgroundColor: \"rgb(247, 193, 68)\",\n            boxShadow: \"2px 1px 3px black\",\n            height: \"36px\",\n            width: \"48px\",\n            fontSize: \"10px\",\n          }}\n        />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          {/* About, Order, Help Links */}\n          <Nav className=\"me-auto\" defaultActiveKey=\"/home\">\n            <Nav.Link href=\"#/about\">\n              {/* adjust marginRight Based on screens */}\n              <span\n                className=\"fontAdjustment\"\n                style={{ marginLeft: \"0px\", marginRight: \"40px\" }}\n              >\n                About\n              </span>\n            </Nav.Link>\n            <Nav.Link href=\"#/order\">\n              <span className=\"fontAdjustment\" style={{ marginRight: \"40px\" }}>\n                Order\n              </span>\n            </Nav.Link>\n            <Nav.Link className=\"text-dark mx-1\" onClick={(e) => toFAQ(e)}>\n              <span className=\"fontAdjustment\" style={{ marginRight: \"40px\" }}>\n                FAQ\n              </span>\n            </Nav.Link>\n            <Nav.Link href=\"#/help\">\n              <span className=\"fontAdjustment\" style={{ marginRight: \"40px\" }}>\n                Help\n              </span>\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n      {userSession.isLoggedIn() ? (\n        <AccountInfo\n          show={displayAccountInfo}\n          setShow={setDisplayAccountInfo}\n        />\n      ) : null}\n    </Navbar>\n  );\n}\nexport default NavBar;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/OrderPage/OrderPage.js",["495"],[],"/**\n * Might need API call to validate zipcode based on region\n */\nimport DeliveryDate from \"./DeliveryDate/DeliveryDate\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nimport { Dropdown } from \"react-bootstrap\";\nimport ZipCode from \"./ZipCode/ZipCode\";\nimport { useState} from \"react\";\nimport InformationGrid from \"../About/InformationGrid/InformationGrid\";\nimport Scroll from \"../../Service/ScrollTop\";\nimport { Modal } from \"react-bootstrap\";\n\nconst data = {\n  backColor: \"primary\",\n  headingColor: \"dark\",\n  titleColor: \"secondary\",\n  textColor: \"dark\",\n  heading: \"\",\n  image1: require(\"../../Resources/Vector/fresh.png\"),\n  image1Height: \"150px\",\n  image1Width: \"250px\",\n  title1: \"Fresh\",\n  description1: \"Meals cooked by our partner kitchens when ordered\",\n\n  image2: require(\"../../Resources/Vector/tasty.png\"),\n  image2Width: \"250px\",\n  image2Height: \"150px\",\n  title2: \"Tasty\",\n  description2: \"Authentically sourced and spiced, for the right taste\",\n\n  image3: require(\"../../Resources/Vector/convinient.png\"),\n  image3Width: \"250px\",\n  image3Height: \"150px\",\n  title3: \"Convinient\",\n  description3: \"Contact-less delivery right to your doorstep, just in-time\",\n};\n\nconst OrderPage = ({\n  numMeals,\n  setNumMeals,\n  zipCode,\n  setZipCode,\n  freq,\n  setFreq,\n  delivDate,\n  setDelivDate,\n  resetOrderPageInfo,\n  setResetOrderPageInfo,\n  setMealNumbers,\n  numMealsSelected,\n  setNumMealsSelected,\n}) => {\n  const navigate = useNavigate();\n\n  // For pop up if something is missing\n  const [show, setShow] = useState(false);\n  const [msg, setMsg] = useState(\"\");\n\n  /**\n   * coming from pickMeals, want to reselect all options\n   * coming from MealPlans section of home page, want to enter everything EXCEPT plan size because we clicked on one of the buttons like 4 meals, 6 meals, ...\n   * coming from else where, go to pickMeals page or stay on orderPage depending on previous interaction of user with orderPage\n   */\n  useEffect(() => {\n    console.log(\"ORDER PAGE FOR FIRST TIME\");\n    // user was looking at pickMeals; went else where; wants to go back to pickMeals\n    // GO to pick meals\n    if (resetOrderPageInfo === 0) {\n      console.log(\"GOING TO PM PAGE==>\");\n      navigate(\"/pickMeals\");\n    }\n    // came from mealPlans section of Home Page\n    // reset date and zipcode\n    else if (resetOrderPageInfo === 1) {\n      // setFreq(\"Select Frequency\");\n      setZipCode(\"\");\n      setDelivDate(\"Select Date\");\n    } else {\n      // Want to choose every option again; Coming back from Pick Meals Page\n      console.log(\"COMING BACK FROM PICK MEALS OR COMING FROM HOME PAGE: RESET EVERYTHING\");\n      setNumMeals(\"Select Plan\");\n      setZipCode(\"\");\n      // setFreq(\"Select Frequency\");\n      setDelivDate(\"Select Date\");\n    }\n    document.title=\"Order\"\n    Scroll.scrollUp();\n  }, []);\n\n  // Pick meals button clicked\n  const handlePickMeals = () => {\n    // NEED PROPER ZIPCODE, AND ZIPCODE SHOULD BE in specific range\n    if (zipCode.length === 0) {\n      // might require API call\n      handleDisplay(\"Enter Proper Zip Code\");\n    } else if (numMeals === \"Select Plan\") {\n      handleDisplay(\"Select Plan\");\n    }\n    // else if (freq === \"Select Frequency\") {\n    // handleDisplay(\"Select Frequency\");\n    // }\n    else if (delivDate === \"Select Date\") {\n      handleDisplay(\"Select Date\");\n    } else {\n      // move to pickMeals page\n      setResetOrderPageInfo(0);\n      setMealNumbers([]);\n      navigate(\"/pickMeals\");\n    }\n  };\n\n  // open pop up\n  const handleDisplay = (msg) => {\n    setMsg(msg);\n    setShow(true);\n  };\n\n  // closes pop up\n  const handleClose = () => {\n    setMsg(\"\");\n    setShow(false);\n  };\n\n  return (\n    <>\n      {/* User Input for zipcode, freq, plan, date */}\n      <section\n        className=\"bg-light text-dark p-5 p-lg-0 pt-lg-5 text-center text-sm-start\"\n        id=\"Showcase\"\n        style={{ fontFamily: \"Signika\", marginBottom: \"0px\" }}\n      >\n        <div className=\"container\" style={{ paddingBottom: \"10px\" }}>\n          <div className=\"d-sm-flex align-items-center my-2\">\n            {/* Image on left; disappears in small devices */}\n            <img\n              className=\"img-fluid w-50 d-none d-sm-block\"\n              src={require(\"../../Resources/Meals/pavbhaji.png\")}\n              alt=\"lorem\"\n              style={{\n                padding: \"10px\",\n                height: \"450px\",\n                width: \"450px%\",\n                borderRadius: \"17px\",\n                marginBottom: \"6px\",\n                marginRight: \"60px\",\n              }}\n            />\n\n            {/* User Input Stuff on Right*/}\n            <Container>\n              <Row>\n                <h1 className=\"text-center\">Enter Zip Code</h1>\n              </Row>\n\n              {/* Zip Code Element */}\n              <Row>\n                <ZipCode zipCode={zipCode} setZipCode={setZipCode} />\n              </Row>\n\n              <Row>\n                {/* Plan Size */}\n                <Col style={{ marginBottom: \"35px\" }}>\n                  <h2 className=\"text-center\">Plan Size</h2>\n                  <h6 className=\"text-center\">Each meal is made for 1 adult</h6>\n\n                  <div className=\"d-flex align-items-center justify-content-center\">\n                    <Dropdown>\n                      <Dropdown.Toggle\n                        variant=\"dark\"\n                        id=\"dropdown-basic\"\n                        style={{ height: \"50px\", width: \"150px\" }}\n                      >\n                        <span className=\"text-primary\">{numMeals}</span>\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item\n                          onMouseEnter={() => setNumMeals(\"4 Meals\")}\n                          onClick={() => setNumMeals(\"4 Meals\")}\n                        >\n                          <span>4 meals</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onMouseEnter={() => setNumMeals(\"6 Meals\")}\n                          onClick={() => setNumMeals(\"6 Meals\")}\n                        >\n                          <span>6 meals</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onMouseEnter={() => setNumMeals(\"8 Meals\")}\n                          onClick={() => setNumMeals(\"8 Meals\")}\n                        >\n                          <span>8 meals</span>\n                        </Dropdown.Item>\n\n                        <Dropdown.Item\n                          onMouseEnter={() => setNumMeals(\"12+ Meals\")}\n                          onClick={() => setNumMeals(\"12+ Meals\")}\n                        >\n                          <span>12+ meals</span>\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </div>\n                </Col>\n\n                {/* Freq */}\n                {/* <Col style={{ marginBottom: \"35px\" }}>\n                  <h2 className=\"text-center\">Frequency</h2>\n                  <h6 className=\"text-center\">Order one-time or recurring </h6>\n\n                  <div className=\"d-flex align-items-center justify-content-center\">\n                    <Dropdown>\n                      <Dropdown.Toggle\n                        variant=\"dark\"\n                        id=\"dropdown-basic\"\n                        style={{ height: \"50px\", width: \"150px\" }}\n                      >\n                        <span className=\"text-primary\">{freq}</span>\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item\n                          onMouseEnter={() => setFreq(\"Weekly\")}\n                          onClick={() => setFreq(\"Weekly\")}\n                        >\n                          <span>Weekly</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onMouseEnter={() => setFreq(\"Bi-Weekly\")}\n                          onClick={() => setFreq(\"Bi-Weekly\")}\n                        >\n                          <span>Bi-Weekly</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onMouseEnter={() => setFreq(\"One Time\")}\n                          onClick={() => setFreq(\"One Time\")}\n                        >\n                          <span>One Time</span>\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </div>\n                </Col> */}\n\n                {/* Delivery Date */}\n                <Col style={{ marginBottom: \"55px\" }}>\n                  <h2 className=\"text-center\">Delivery</h2>\n                  <h6 className=\"text-center\">\n                    Deliveries between 6pm - 7:30pm\n                  </h6>\n                  <div className=\"d-flex align-items-center justify-content-center\">\n                    {/* <Dropdown>\n                      <Dropdown.Toggle\n                        variant=\"dark\"\n                        id=\"dropdown-basic\"\n                        style={{ height: \"50px\", width: \"150px\" }}\n                      >\n                        <span className=\"text-primary\">{delivDate}</span>\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item\n                          onMouseEnter={() => setDelivDate(\"Monday\")}\n                          onClick={() => setDelivDate(\"Monday\")}\n                        >\n                          <span>Monday</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onMouseEnter={() => setDelivDate(\"Wednesday\")}\n                          onClick={() => setDelivDate(\"Wednesday\")}\n                        >\n                          <span>Wednesday</span>\n                        </Dropdown.Item>\n                        <Dropdown.Item\n                          onMouseEnter={() => setDelivDate(\"Friday\")}\n                          onClick={() => setDelivDate(\"Friday\")}\n                        >\n                          <span>Friday</span>\n                        </Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown> */}\n\n                    <DeliveryDate\n                      delivDate={delivDate}\n                      setDelivDate={setDelivDate}\n                    />\n                  </div>\n                </Col>\n              </Row>\n\n              {/* Pick Meals Button */}\n              <div className=\"d-flex justify-content-center align-items-center\">\n                <Button\n                  variant=\"secondary\"\n                  className=\"text-primary\"\n                  style={{\n                    height: \"50px\",\n                    width: \"150px\",\n                    borderRadius: \"25px\",\n                    fontSize: \"25px\",\n                  }}\n                  onClick={handlePickMeals}\n                >\n                  Pick Meals\n                </Button>\n              </div>\n            </Container>\n          </div>\n        </div>\n      </section>\n\n      {/* Tasty, Fresh, Convinient section */}\n      <InformationGrid data={data} />\n\n      {/* Pop up if zipcode, freq, plan, or date missing */}\n      <Modal show={show} onHide={handleClose} style={{ fontFamily: \"Signika\" }}>\n        <Modal.Header closeButton style={{ textAlign: \"center\" }}>\n          <Modal.Title>Fill all Info Correctly to pick meals</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p className=\"lead text-center\">{msg}</p>\n        </Modal.Body>\n\n        <Modal.Footer className=\"h-100 d-flex align-items-center justify-content-center\">\n          <Button variant=\"dark\" onClick={handleClose}>\n            <span className=\"text-primary\">Close</span>\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default OrderPage;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/PickMeals/PickMeals.js",["496","497","498","499","500","501","502","503","504","505","506","507","508"],[],"/**\n *  For now can look in csv file for meal data based on zip code entered\n *  Scaling: might need API call to search meal info based on given zip code\n */\n\nimport Payment from \"../../SharedComponents/PopUp/Payment/Payment\";\nimport StripeBackend from \"../../Service/StripeBackend\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport SignUpPopUp from \"../NavBar/SignUpPopUp/SignUpPopUp\";\nimport LogInPopUP from \"../NavBar/LogInPopUp/LogInPopUp\";\nimport userSession from \"../../Service/userSession\";\nimport PopUp from \"../../SharedComponents/PopUp/PopUp\";\nimport \"./PickMeals.css\";\nimport { useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport ScrollTop from \"../../Service/ScrollTop\";\nimport MealData from \"../../Service/MealData\";\nconst PickMeals = ({\n  zipCode,\n  cart,\n  setCart,\n  mealNumbers,\n  setMealNumbers,\n  setResetOrderPageInfo,\n  numMealsSelected,\n  setNumMealsSelected,\n  setLogIn,\n  numMeals,\n  cartPrice,\n  setCartPrice,\n  delivDate,\n}) => {\n  // so we can go back to orderPage\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log(\"ZIPCODE ON PM RENDERED::: \" + zipCode);\n    // if zipCode not provided, go back to order page\n    if (zipCode.length === 0) {\n      console.log(\"NO ZIPCODE; GO BACK TO ORDER AND RESET EVERYTHING\");\n      setResetOrderPageInfo(2); // if no zip code; go back to order page and have user fill out all the fields\n      navigate(\"/order\");\n    } else {\n      // scroll up only once when user arrives on this page\n      ScrollTop.scrollUp();\n      if (mealNumbers.length === 0) {\n        setMealNumbers(new Array(data.length).fill(0));\n        console.log(\"RESETTING CART\");\n        // should do this in case of payment success\n      }\n    }\n  }, []);\n\n  const data = MealData.getMeals();\n\n  // pop up to show description/ingridents to users\n  const [show, setShow] = useState(false);\n  const [description, setDescription] = useState(\"\");\n  const [mealSelected, setMealSelected] = useState(\"\");\n\n  // What if user wants to reset freq, zipcode, etc...?? => we let user go back to OrderPage\n  const backToOrderPage = () => {\n    setCart([]);\n    setCartPrice(0);\n    setNumMealsSelected(0);\n    setMealNumbers([]);\n    setResetOrderPageInfo(2); // reset everything in orderPage\n    console.log(\"<== BACK BUTTON CLICKED...\");\n    navigate(\"/order\");\n  };\n\n  // Handles PopUp display\n  const handleDisplay = (description, mealName) => {\n    setDescription(description);\n    setMealSelected(mealName);\n    setShow(true);\n  };\n\n  // closes description pop up when user closes it\n  const handleClose = () => {\n    setDescription(\"\");\n    setMealSelected(\"\");\n    setShow(false);\n  };\n\n  /**\n   * @Goal ADD item to cart && increment quantity by 1\n   * @param idNum of item to be added\n   * 1. Increment quantity in mealNumbers at index \"id\"\n   * 2. Update cart by setCart()\n   */\n\n  const add = (idNum) => {\n    setNumMealsSelected((numMealsSelected) => numMealsSelected + 1);\n    setCartPrice(\n      (cartPrice) =>\n        Math.round(\n          (cartPrice + MealData.getMeals()[idNum].price + Number.EPSILON) * 100\n        ) / 100\n    );\n    // will have to add PRICE\n    const addToCart = {\n      id: idNum,\n      mealName: data[idNum].mealName,\n      description: data[idNum].description,\n      price: data[idNum].price,\n    };\n\n    const tempArray = [];\n\n    if (cart.length === 0) {\n      // cart is empty\n      tempArray.push(addToCart);\n      setCart(tempArray);\n    } else {\n      // cart is NOT empty; 2 cases: idNum IS in cart OR NOT in the cart\n\n      // don't wanna add duplicate items\n      let found = false;\n\n      cart.forEach((element) => {\n        if (element.id === idNum) {\n          found = true;\n        }\n        tempArray.push(element);\n      });\n\n      // adding item first time\n      if (!found) {\n        tempArray.push(addToCart);\n      }\n      setCart(tempArray); // Update cart to display correct items in cart\n    }\n\n    mealNumbers[idNum]++; // increment quantity in mealNumbers at index \"idNum\"\n    const newAr = [];\n    mealNumbers.map((item) => {\n      newAr.push(item);\n    });\n    setMealNumbers(newAr); // Update mealNumbers to display correct quantity numbers in cart AND pickMeals page\n  };\n\n  /**\n   * @Goal REMOVE item from cart && decrement quantity by 1\n   * @param id of item to be removed/reduced\n   * 1. Decrement quantity in mealNumbers at index \"idNum\"\n   * 2. Update cart by setCart()\n   */\n  const remove = (id) => {\n    // CANNOT have quantity < 0\n    if (mealNumbers[id] > 0) {\n      setNumMealsSelected((numMealsSelected) => numMealsSelected - 1);\n      setCartPrice(\n        (cartPrice) =>\n          Math.round(\n            (cartPrice - MealData.getMeals()[id].price + Number.EPSILON) * 100\n          ) / 100\n      );\n      mealNumbers[id]--; // decrement quantity in mealNumbers at index \"id\"\n      const newAr = [];\n      mealNumbers.map((item) => {\n        newAr.push(item);\n      });\n      setMealNumbers(newAr); // update mealNumbers\n\n      if (mealNumbers[id] === 0) {\n        // if item is reduced to 0 in cart, cart should be updated so we don't have an item in cart whose quantity = 0\n        const tempCart = [];\n        cart.forEach((element) => {\n          if (element.id !== id) {\n            tempCart.push(element);\n          }\n        });\n        setCart(tempCart);\n      }\n    }\n  };\n\n  // log in warnin\n  const [displayPopUp, setDisplayPopUp] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const [displayEnoughPopUp, setDisplayEnoughPopUp] = useState(false);\n  const [titleEnough, setTitleEnough] = useState(\"\");\n  const [bodyEnough, setBodyEnough] = useState(\"\");\n\n  {\n    /* remove this after stripe */\n  }\n  const [successPopUp, setSuccessPopUp] = useState(false);\n  const [successTitle, setSuccessTitle] = useState(\"\");\n  const [successBody, setSuccessBody] = useState(\"\");\n\n  /**\n   * send Data to DB for DA purporses\n   * STRIP INTEGRATION\n   */\n  const handleCheckOut = () => {\n    if (numMeals === \"12+ Meals\" && numMealsSelected < 12) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough(<p>Select at least 12 meals</p>);\n      setDisplayEnoughPopUp(true);\n    } else if (parseInt(numMeals[0]) > numMealsSelected) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough(<p>Select at least {numMeals[0]} meals</p>);\n      setDisplayEnoughPopUp(true);\n    } else if (!userSession.isLoggedIn()) {\n      setTitle(\"LogIn/SignUp\");\n\n      setBody(\n        <div\n          className=\"container align-items-center d-flex justify-content-center\"\n          style={{ fontFamily: \"Signika\" }}\n        >\n          <form style={{ padding: \"20px\" }} className=\"rounded\">\n            <Row className=\"\">\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\" className=\"mb-4\">\n                  <p className=\"lead\">Log in or Sign Up to continue</p>\n                </label>\n              </div>\n            </Row>\n\n            <div className=\"container text-center mb-4\">\n              <LogInPopUP\n                style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n                setLogIn={setLogIn}\n              />\n            </div>\n\n            <div className=\"container text-center\">\n              <SignUpPopUp\n                style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n                setLogIn={setLogIn}\n              />\n            </div>\n          </form>\n        </div>\n      );\n      setDisplayPopUp(true);\n    } else {\n      // Handle Stripe Payment\n      // setPayPopUp(true);\n      document.getElementById(\"hiddenPaymentButton\").click();\n    }\n  };\n\n  return (\n    <>\n      <div className=\"justify-content-center backButtonContainer\">\n        <Button\n          variant=\"secondary\"\n          className=\"position-fixed backButton\"\n          onClick={() => backToOrderPage()}\n          style={{ fontFamily: \"Signika\", color: \"white\" }}\n        >\n          Back\n        </Button>\n      </div>\n      <section style={{ fontFamily: \"Signika\" }}>\n        <Container className=\"text-dark my-4 customCss\">\n          <Row style={{ marginTop: \"66px\", marginBottom: \"32px\" }} xs=\"auto\">\n            {data.map((item) => {\n              const { id, img, mealName, description, price } = item;\n              return (\n                <Col key={id} className=\"p-3 spacesBetweenBoxes\">\n                  <div className=\"card-body text-center\">\n                    <img src={img} className=\"img-fluid imageAdjustment\" />\n                    <h4 className=\"titleAdjustment\">{mealName}</h4>\n                    <h5>\n                      <del className=\"mx-2\">$15.99</del>${price}\n                    </h5>\n                    <Link onClick={() => handleDisplay(description, mealName)}>\n                      <p className=\"text-light descriptionAdjustment\">\n                        Description/Ingridients\n                      </p>\n                    </Link>\n\n                    <Button\n                      variant=\"light\"\n                      onClick={() => remove(id)}\n                      className=\"buttonAdjustment\"\n                    >\n                      <span className=\"letterAdjustment\">-</span>\n                    </Button>\n\n                    <span className=\"amountAdjustment\">{mealNumbers[id]}</span>\n\n                    <Button\n                      variant=\"light\"\n                      onClick={() => add(id)}\n                      className=\"buttonAdjustment\"\n                    >\n                      <span className=\"letterAdjustment\">+</span>\n                    </Button>\n                  </div>\n                </Col>\n              );\n            })}\n\n            <Modal\n              show={show}\n              onHide={handleClose}\n              style={{ fontFamily: \"Signika\" }}\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>{mealSelected}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                {Object.keys(description).map((key) => {\n                  return (\n                    <span>\n                      {`${key} : ${description[key]}`}\n                      <br></br>\n                    </span>\n                  );\n                })}\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"light\" onClick={handleClose}>\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </Row>\n\n          <Row>\n            {/* Only show checkout button if # of item > 0 */}\n\n            <div className=\"h-100 d-flex align-items-center justify-content-center\">\n              <Button\n                variant=\"secondary\"\n                className=\"text-primary checkOutButton\"\n                onClick={() => handleCheckOut()}\n              >\n                Check Out\n              </Button>\n            </div>\n          </Row>\n        </Container>\n        {/* should probably remove 1st condition */}\n        {(numMealsSelected === 0 || !userSession.isLoggedIn()) && (\n          <PopUp\n            displayPopUp={displayPopUp}\n            setDisplayPopUp={setDisplayPopUp}\n            title={title}\n            body={body}\n          />\n        )}\n\n        <PopUp\n          displayPopUp={displayEnoughPopUp}\n          setDisplayPopUp={setDisplayEnoughPopUp}\n          title={titleEnough}\n          body={bodyEnough}\n        />\n\n        <Payment\n          cart={cart}\n          setCart={setCart}\n          mealNumbers={mealNumbers}\n          cartPrice={cartPrice}\n          setCartPrice={setCartPrice}\n          setNumMealsSelected={setNumMealsSelected}\n          delivDate={delivDate}\n        />\n      </section>\n    </>\n  );\n};\n\nexport default PickMeals;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/CheckOut/CheckOut.js",["509"],[],"import Row from \"react-bootstrap/Row\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCol,\n  MDBContainer,\n  MDBRow,\n} from \"mdb-react-ui-kit\";\n\nimport \"./checkOut.css\";\nimport { Button } from \"react-bootstrap\";\nimport userSession from \"../../Service/userSession\";\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport SignUpPopUp from \"../NavBar/SignUpPopUp/SignUpPopUp\";\nimport LogInPopUP from \"../NavBar/LogInPopUp/LogInPopUp\";\nimport MealData from \"../../Service/MealData\";\nconst CheckOut = ({ setLogIn, mealNumbers, cart, setCart, totalPrice }) => {\n  const navigate = useNavigate();\n  const handleBack = () => {\n    navigate(\"/pickMeals\");\n  };\n  const checkOutContent = () => {\n    return (\n      <section\n        className=\"vh-100\"\n        style={{ backgroundColor: \"white\", fontFamily: \"Signika\" }}\n      >\n        <MDBContainer className=\"h-100\">\n          <MDBRow className=\"justify-content-center align-items-center h-100\">\n            <MDBCol>\n              <p className=\"text-center\">\n                <span className=\"h2\">Check Out</span>\n              </p>\n\n              <MDBCard className=\"mb-4\">\n                <MDBCardBody className=\"p-4 mt-0\">\n                  {/* replicate row */}\n\n                  {cart.map((item) => {\n                    return (\n                      <>\n                        <MDBRow className=\"align-items-center\" key={item.id}>\n                          <MDBCol\n                            md=\"2\"\n                            className=\"d-flex justify-content-center\"\n                          >\n                            <div>\n                              <p className=\"small text-muted mb-0 pb-1 text-center\">\n                                Name\n                              </p>\n                              <p className=\"lead fw-normal mb-0 text-center\">\n                                {item.mealName}\n                              </p>\n                            </div>\n                          </MDBCol>\n                          <MDBCol\n                            md=\"2\"\n                            className=\"d-flex justify-content-center\"\n                          >\n                            <div>\n                              <p className=\"small text-muted pb-1 text-center\">\n                                Quantity\n                              </p>\n                              <p className=\"lead fw-normal text-center\">\n                                {mealNumbers[item.id]}\n                              </p>\n                            </div>\n                          </MDBCol>\n                          <MDBCol\n                            md=\"2\"\n                            className=\"d-flex justify-content-center\"\n                          >\n                            <div>\n                              <p className=\"small text-muted pb-1 text-center\">\n                                Price\n                              </p>\n                              <p className=\"lead fw-normal text-center\">\n                                ${MealData.getMeals()[item.id].price}\n                              </p>\n                            </div>\n                          </MDBCol>\n                          <MDBCol\n                            md=\"2\"\n                            className=\"d-flex justify-content-center\"\n                          >\n                            <div>\n                              <p className=\"small text-muted mb-0 pb-2 text-center\">\n                                Total\n                              </p>\n                              <p className=\"lead fw-normal mb-0\">\n                                $\n                                {mealNumbers[item.id] *\n                                  MealData.getMeals()[item.id].price}\n                              </p>\n                            </div>\n                          </MDBCol>\n                        </MDBRow>\n                        <hr />\n                      </>\n                    );\n                  })}\n                </MDBCardBody>\n              </MDBCard>\n\n              <MDBCard className=\"mb-5\">\n                <MDBCardBody className=\"p-4 mt-0\">\n                  <div className=\"float-end\">\n                    <p className=\"mb-0 me-5 d-flex align-items-center\">\n                      <span className=\"small text-muted me-2\">\n                        Order total:\n                      </span>\n                      <span className=\"lead fw-normal\">${totalPrice}</span>\n                    </p>\n                  </div>\n                </MDBCardBody>\n              </MDBCard>\n\n              <div className=\"d-flex justify-content-end\">\n                <MDBBtn\n                  color=\"light\"\n                  size=\"lg\"\n                  className=\"me-2\"\n                  onClick={() => handleBack()}\n                >\n                  &lt; Back\n                </MDBBtn>\n                <MDBBtn size=\"lg\" color=\"dark\">\n                  Proceed\n                </MDBBtn>\n              </div>\n            </MDBCol>\n          </MDBRow>\n        </MDBContainer>\n      </section>\n    );\n  };\n\n  const logInFirst = () => {\n    return (\n      <div\n        className=\"container min-vh-100 align-items-center d-flex justify-content-center\"\n        style={{ fontFamily: \"Signika\" }}\n      >\n        <form\n          style={{ backgroundColor: \"rgb(247, 193, 68)\", padding: \"20px\" }}\n          className=\"rounded\"\n        >\n          <Row className=\"mb-4\">\n            <div className=\"form-group\">\n              <label for=\"exampleInputEmail1\" className=\"mb-2\">\n                <p className=\"lead\">Log in to continue</p>\n              </label>\n            </div>\n          </Row>\n\n          <div className=\"container text-center mb-4\">\n            <LogInPopUP\n              style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n              setLogIn={setLogIn}\n            />\n          </div>\n\n          <div className=\"container text-center\">\n            {/* <Button variant=\"dark\" className=\"\">\n              Log In\n            </Button> */}\n            <SignUpPopUp\n              style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n              setLogIn={setLogIn}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  };\n  return <>{userSession.isLoggedIn() ? checkOutContent() : logInFirst()}</>;\n};\n\nexport default CheckOut;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Hotel/Hotel.js",["510","511"],[],"/**\n * API call required\n */\nimport { useEffect } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Table } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport React from \"react\";\nimport \"./Hotel.css\";\nimport MealData from \"../../Service/MealData\";\nimport HotelAPIService from \"../../Service/HotelAPIService\";\n\nconst Hotel = () => {\n  const [pinLabel, setPinLabel] = useState(\n    <label for=\"exampleInputEmail1\" className=\"mb-2\">\n      PIN\n    </label>\n  );\n  const [pinValue, setPinValue] = useState(\"\");\n  const [mealQuantityTable, setMealQuantityTable] = useState(null);\n  const [ordersTable, setOrdersTable] = useState(null);\n  useEffect(() => {\n    //Replace dates with upcoming sunday's date\n    // Display only after 3:00 PM on Friday\n    HotelAPIService.getMealQuantityTable({ date: \"Sunday: 1/29/2023\" })\n      .then((res) => {\n        setMealQuantityTable(res.data);\n      })\n      .catch((err) => {\n        console.log(\"Erro while fetching mealQuantityTable::: \" + err);\n      });\n\n    //Replace dates with upcoming sunday's date\n    HotelAPIService.getOrderTables({ date: \"Sunday: 1/29/2023\" })\n      .then((res) => {\n        setOrdersTable(res.data);\n      })\n      .catch((err) => {\n        console.log(\"Erro while fetching Orders Table::: \" + err);\n      });\n  }, []);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [displayReport, setDisplayReport] = useState(false);\n  const handleCloseReport = () => setDisplayReport(false);\n  /**\n   * API call to send notifcation to admin\n   */\n  const handleSubmitReport = () => {\n    handleCloseReport();\n  };\n\n  // do validation of pin after than let user in\n  const handleSubmit = () => {\n    if (pinValue === \"123\") {\n      setIsLoggedIn(true);\n      setPinLabel(\n        <label for=\"exampleInputEmail1\" className=\"mb-2\">\n          PIN \n        </label>\n      );\n    } else {\n      setPinLabel(\n        <label for=\"exampleInputEmail1\" className=\"mb-2\" style={{color:\"red\"}}>\n          Incorrect PIN\n        </label>\n      );\n    }\n  };\n  const logInBox = () => {\n    return (\n      <div\n        className=\"container min-vh-100 align-items-center d-flex justify-content-center\"\n        style={{ fontFamily: \"Signika\" }}\n      >\n        <form\n          style={{ backgroundColor: \"rgb(247, 193, 68)\", padding: \"20px\" }}\n          className=\"rounded\"\n        >\n          <Row className=\"mb-4\">\n            <div className=\"form-group\">\n              {pinLabel}\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"exampleInputEmail1\"\n                aria-describedby=\"emailHelp\"\n                placeholder=\"Enter PIN\"\n                onChange={(e) => setPinValue(e.target.value)}\n                value={pinValue}\n              />\n            </div>\n          </Row>\n\n          <div className=\"container text-center\">\n            <Button variant=\"dark\" onClick={handleSubmit} className=\"\">\n              Log In\n            </Button>\n          </div>\n        </form>\n      </div>\n    );\n  };\n\n  const displayMealQuantityTable = () => {\n    return (\n      <>\n        {mealQuantityTable === null ? (\n          \"Loading...\"\n        ) : (\n          <section\n            className=\"bg-primary\"\n            style={{ fontFamily: \"Signika\", padding: \"64px 32px\" }}\n          >\n            <h1 style={{ fontFamily: \"Signika\" }} className=\"text-center mb-4\">\n              Meal Quantity Table\n            </h1>\n            <Table\n              striped\n              bordered\n              hover\n              style={{ fontSize: \"calc(16px+1vw)\", fontFamily: \"Signika\" }}\n            >\n              <thead>\n                <tr>\n                  <th>Meal Type</th>\n                  <th>Total Quantity</th>\n                  <th>Total Qauntity of contents</th>\n                </tr>\n              </thead>\n              <tbody>\n                {mealQuantityTable.map((mealQuantityInfo) => {\n                  const { item_id, Total_Quantity } = mealQuantityInfo;\n                  return (\n                    <tr>\n                      <td>{MealData.getMeals()[item_id].mealName}</td>\n\n                      <td>{Total_Quantity}</td>\n                      <td>\n                        {Object.keys(\n                          MealData.getMeals()[item_id].description\n                        ).map((key) => {\n                          return (\n                            <span>\n                              {`${key} : ${\n                                Total_Quantity *\n                                MealData.getMeals()[item_id].description[key]\n                              }`}\n                              <br></br>\n                            </span>\n                          );\n                        })}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </section>\n        )}\n      </>\n    );\n  };\n  const displayOrdersTable = () => {\n    return (\n      <>\n        {ordersTable === null ? (\n          \"Loading...\"\n        ) : (\n          <section style={{ fontFamily: \"Signika\", padding: \"64px 32px\" }}>\n            <h1 style={{ fontFamily: \"Signika\" }} className=\"text-center mb-4\">\n              Orders Table- Due 5:30PM EST\n            </h1>\n            <Table\n              striped\n              bordered\n              hover\n              style={{ fontSize: \"calc(16px+1vw)\", fontFamily: \"Signika\" }}\n            >\n              <thead>\n                <tr>\n                  <th>Order#</th>\n                  <th>Meals</th>\n                  <th>Due Date</th>\n                </tr>\n              </thead>\n              <tbody>\n                {ordersTable.map((order) => {\n                  const { orderNumber, meals, dueDate } = order;\n                  return (\n                    <tr>\n                      <td>{orderNumber}</td>\n\n                      {/* handle meals  */}\n\n                      <td>\n                        {/* {Object.keys(meals).map((key) => {\n                          return (\n                            <span>\n                              {`${MealData.getMeals()[key].mealName} : ${\n                                meals[key]\n                              }`}\n                              <br></br>\n                            </span>\n                          );\n                        })} */}\n                        {meals.map((meal) => {\n                          return (\n                            <span>\n                              {`${meal[0]}: ${meal[1]}`}\n                              <br></br>\n                            </span>\n                          );\n                        })}\n                      </td>\n                      <td>{dueDate}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </section>\n        )}\n      </>\n    );\n  };\n  const actualPortal = () => {\n    /** TABLE 1\n     * call api to get first table in following format\n     * [{mealId:i1,quantity:q1},{mealId:i2,quantity:q2}, {mealId:i3,quantity:q3}...]\n     * \"i\": meal ID; \"q\": quanity of meal with meal id \"i\"\n     */\n    const mealQuantityTable = [\n      // gujarati thali 3 quantity\n\n      { id: 1, quantity: 2 },\n\n      // punjabi thali 1 quantity\n      { id: 2, quantity: 1 },\n\n      // Madrari thali 2 quantity\n      { id: 0, quantity: 2 },\n    ];\n\n    /** TABLE 2\n     * call api to get second table in following format\n     * [{orderNumber:o1, meals:[{mealId:i2,quantity:q2,mealId:i2,quantity:q2}],due:d}]\n     * \"i\": meal ID; \"q\": quanity of meal with id \"i\"; \"d\": due date\n     */\n\n    const ordersTable = [\n      {\n        orderNumber: 1,\n        meals: {\n          1: 2,\n          2: 1,\n        },\n        dueDate: \"12/11/2023\",\n      },\n      {\n        orderNumber: 2,\n        meals: {\n          0: 2,\n        },\n        dueDate: \"12/31/2023\",\n      },\n    ];\n    return (\n      <>\n        <Button\n          variant=\"light\"\n          className=\"text-dark text-center float-start position-fixed\"\n          onClick={() => setDisplayReport(true)}\n        >\n          Report\n        </Button>\n        <Button\n          variant=\"light\"\n          className=\"text-dark text-center float-end\"\n          onClick={() => setIsLoggedIn(false)}\n        >\n          Log Out\n        </Button>\n\n        {displayMealQuantityTable()}\n        {displayOrdersTable()}\n\n        <Modal\n          show={displayReport}\n          onHide={handleCloseReport}\n          style={{ fontFamily: \"Signika\" }}\n        >\n          <Modal.Header closeButton style={{ textAlign: \"center\" }}>\n            <Modal.Title>Report</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>\n            <p className=\"lead\">Describe report in detail</p>\n            <form>\n              <div className=\"mb-3\">\n                <label>Report</label>\n                {/* <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"first-name\"\n                  \n                /> */}\n                <textarea className=\"form-control\"></textarea>\n              </div>\n            </form>\n          </Modal.Body>\n\n          <Modal.Footer>\n            {/* Submit Button Clicked */}\n            <Button\n              className=\"text-center\"\n              variant=\"light\"\n              onClick={handleSubmitReport}\n            >\n              <span>Submit</span>\n            </Button>\n            <Button\n              className=\"text-center\"\n              variant=\"light\"\n              onClick={handleCloseReport}\n            >\n              <span>Close</span>\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n    // return(<p className=\"text-dark text-center\" >Logged In</p>)\n  };\n  return <>{!isLoggedIn ? logInBox() : actualPortal()}</>;\n};\n\nexport default Hotel;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/OrderHistory/OrderHistory.js",["512","513","514","515"],[],"import { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport userSession from \"../../Service/userSession\";\nimport OrderAPIService from \"../../Service/OrderAPIService\";\n\nconst OrderHistory = ({ isLoggedIn }) => {\n  const navigate = useNavigate();\n  const [orders, setOrders] = useState(null);\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate(\"/\");\n    } else {\n      document.title = \"History\";\n      const fetchHistory = () => {\n        console.log(\"SERVICE CALLED....\");\n        OrderAPIService.orderHistory({ id: userSession.getUser().id })\n          .then((response) => {\n            if (response.status == 200) {\n              setOrders(response.data);\n            } else {\n              setOrders(null);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n            setOrders(null);\n          });\n      };\n      !orders && fetchHistory();\n    }\n  }, []);\n\n  const toHomePage = () => {\n    navigate(\"/\");\n  };\n  const noHistory = () => {\n    return (\n      <section\n        className=\"md-primary\"\n        style={{ fontFamily: \"Signika\", padding: \"64px 32px\" }}\n      >\n        <div\n          className=\"container text-center\"\n          style={{\n            marginRight: \"auto\",\n            marginBottom: \"340px\",\n            marginLeft: \"auto\",\n          }}\n        >\n          <div style={{ marginTop: \"40px\" }}>\n            {/* Image */}\n            <img\n              className=\"img-fluid\"\n              src={require(\"../../Resources/Vector/noHistory.png\")}\n              style={{ height: \"60%\", width: \"50%\" }}\n            />\n            {/* Help Text */}\n            <div style={{ marginTop: \"\" }}>\n              <p\n                className=\"\"\n                style={{\n                  fontSize: \"2.5vw\",\n                  marginTop: \"8.5vh\",\n                  marginBottom: \"6.5vh\",\n                }}\n              >\n                Uh-Oh! Looks like you don't have any orders yet! Try our meals\n                now!\n              </p>\n\n              {/* Order Button */}\n              <div className=\"h-100 d-flex align-items-center justify-content-center\">\n                <Link to=\"/order\">\n                  <Button\n                    variant=\"secondary\"\n                    className=\"text-primary\"\n                    style={{\n                      height: \"50px\",\n                      width: \"150px\",\n                      borderRadius: \"25px\",\n                      fontSize: \"25px\",\n                    }}\n                  >\n                    Order\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  };\n\n  const history = () => {\n    return (\n      <section\n        className=\"bg-primary\"\n        style={{ fontFamily: \"Signika\", padding: \"20% 32px\" }}\n      >\n        <Table striped bordered hover style={{ fontSize: \"calc(16px+1vw)\" }}>\n          <thead>\n            <tr>\n              <th>Meal Size</th>\n              <th>Types of Meals</th>\n              <th>Price</th>\n              <th>Date Ordered</th>\n              <th>Delivery Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => {\n              const {\n                OrderId,\n                deliveryDate,\n                totalPrice,\n                mealSize,\n                orderDate,\n                meals,\n              } = order;\n              return (\n                <tr>\n                  <td>{mealSize}</td>\n                  <td>\n                    {meals.map((meal) => {\n                      return (\n                        <span>\n                          {meal.name}\n                          <br></br>\n                        </span>\n                      );\n                    })}\n                  </td>\n                  <td>{totalPrice}</td>\n                  <td>{orderDate}</td>\n                  <td>{deliveryDate}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n\n        <div className=\"mt-4\">\n          If you would like to cancel your order, please email\n          support@mirchimeals.com before 3pm the prior day of delivery.\n        </div>\n      </section>\n    );\n  };\n\n  const viewOrderHistoryPage = () => {\n    // fetchOrders();\n    if (orders) {\n      if (orders.length === 0) {\n        return noHistory();\n      } else {\n        return history();\n      }\n    } else {\n      return <div>Loading... </div>;\n    }\n  };\n  return <>{isLoggedIn ? viewOrderHistoryPage() : toHomePage()}</>;\n};\n\nexport default OrderHistory;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/TermsAndCondition/TermsAndCondition.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/PrivacyPolicy/PrivacyPolicy.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/RefundsAndCancellationsPolicy/RefundsAndCancellationsPolicy.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/SharedComponents/PopUp/Payment/Payment.js",["516","517"],[],"import PopUp from \"../PopUp\";\nimport userSession from \"../../../Service/userSession\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport OrderAPIService from \"../../../Service/OrderAPIService\";\nimport { useEffect } from \"react\";\nimport StripeBackend from \"../../../Service/StripeBackend\";\n\nimport { useState } from \"react\";\nimport React from \"react\";\n\nconst Payment = ({\n  cart,\n  setCart,\n  mealNumbers,\n  cartPrice,\n  setCartPrice,\n  setNumMealsSelected,\n  delivDate,\n}) => {\n  // To give users live update about making payment & storing order\n  const [statusPopUp, setStatusPopUp] = useState(false);\n  const [statusTitle, setStatusTitle] = useState(\"\");\n  const [statusBody, setStatusBody] = useState(\"\");\n  const STRIPE_KEY =\n    \"pk_test_51MLGUDLxe44udBspRQVfTcgFGVZRI6NRIlrfX4lexUptlrYTJjsqfJZFBeDrKXdyOCiJVVQKcD88WAQDsNPVWZ9b00bKBn0FaU\";\n\n  // stripeToken will have store shipping info\n  const [stripeToken, setStripeToken] = useState(null);\n  const onToken = (token) => {\n    setStripeToken(token);\n    console.log(\"TOKEN::: \" + JSON.stringify(token));\n  };\n\n  useEffect(() => {\n    const makeRequest = () => {\n      setStatusTitle(\"Payment Status\");\n      // Sending req to backend to create charge based on card details entered by user..\n      StripeBackend.requestToServer(\n        stripeToken,\n        cartPrice * 100,\n        setStatusBody,\n        setStatusPopUp\n      ) // Response received from backend and we know if payment succeded or not\n        .then((res) => {\n          // Payment failed\n          if (res.status === 206) {\n            setStatusBody(res.data);\n            // let user view err msg for 2s; close pop up; reopen payment pop up\n            setTimeout(() => {\n              document.getElementById(\"hiddenPaymentButton\").click();\n            }, 2000);\n          } else {\n            // Successful payment; so, STORE ORDER IN DB\n            setStatusBody(\"Successful Payment!\");\n            setTimeout(() => {\n              setStatusTitle(\"Order Status\");\n              setStatusBody(\"Sending Order to DB....\");\n            }, 1000);\n            setTimeout(() => {\n              // mealAndFreqsArr is in format: [[id1,q1],[id2,q2]....]\n              const mealAndFreqsArr = [];\n              cart.map((item) => {\n                mealAndFreqsArr.push([item.id, mealNumbers[item.id]]);\n              });\n\n              let todaysDate = new Date().toDateString();\n\n              const objToSend = {\n                Order_date: todaysDate,\n                Shipping_date: delivDate,\n                Total_Price: cartPrice,\n                email: stripeToken.email,\n                Address: `${stripeToken.card.address_line1} ${stripeToken.card.address_city}, ${stripeToken.card.address_zip}`,\n                Customer_id: userSession.getUser().id,\n                mealAndFreqs: mealAndFreqsArr,\n              };\n              // setStatusTitle(\"Order Status\");\n              OrderAPIService.addOrder(objToSend, setStatusBody)\n                .then((res) => {\n                  setStatusBody(\"Order saved in DB! Order#: \" + res.data);\n\n                  \n                  // after 2 seconds close the pop up\n                  setTimeout(() => {\n                    setStatusPopUp(false);\n                    // here we empty previous token\n                    setStripeToken(null);\n                  }, 2000);\n                })\n                .catch((err) => {\n                  setStatusBody(\n                    \"Could NOT store the order please contact Admin \"\n                  );\n                  // after 2 seconds close the pop up\n                  setTimeout(() => {\n                    setStatusPopUp(false);\n                    // here we empty previous token\n                    setStripeToken(null);\n                  }, 2000);\n                });\n\n              // SUCCESS; RESET: cart, numMealsSelected, mealNumbers\n              setCart([]);\n              setNumMealsSelected(0);\n              setCartPrice(0);\n              for (let index = 0; index < mealNumbers.length; index++) {\n                mealNumbers[index] = 0;\n              }\n            }, 1200);\n          }\n        })\n        .catch((error) => {\n          setStatusPopUp(true);\n          setStatusBody(\"\" + error);\n          setTimeout(() => {\n            setStatusPopUp(false);\n            document.getElementById(\"hiddenPaymentButton\").click();\n          }, 3000);\n        });\n    };\n    stripeToken && makeRequest();\n  }, [stripeToken]);\n\n  return (\n    <>\n      {/* Regular Stripe pop UP */}\n      <StripeCheckout\n        name=\"Mirchi Meals\"\n        shippingAddress\n        billingAddress\n        description={`Total: $${cartPrice}`}\n        amount={cartPrice * 100}\n        token={onToken}\n        stripeKey={STRIPE_KEY}\n      >\n        <button\n          id=\"hiddenPaymentButton\"\n          style={{\n            borderColor: \"blue\",\n            padding: \"10px\",\n            fontSize: \"large\",\n            margin: \"50%\",\n            height: \"70px\",\n            width: \"100px\",\n            backgroundColor: \"black\",\n          }}\n          hidden\n        >\n          <span style={{ color: \"white\" }}>Pay ${cartPrice}</span>\n        </button>\n      </StripeCheckout>\n      <PopUp\n        displayPopUp={statusPopUp}\n        setDisplayPopUp={setStatusPopUp}\n        title={statusTitle}\n        body={statusBody}\n      />\n    </>\n  );\n};\n\nexport default Payment;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/Service/ScrollTop.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/Questions/Question.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/About/InformationGrid/InformationGrid.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/Showcase/Showcase.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/Contact/Contact.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/MealPlans/MealPlans.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/About/InformationBox/InformationBox.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/NavBar/ShoppingCart/ShoppingCart.js",["518","519","520","521","522","523"],[],"import { useEffect } from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport SignUpPopUp from \"../SignUpPopUp/SignUpPopUp\";\nimport LogInPopUP from \"../LogInPopUp/LogInPopUp\";\nimport { useNavigate } from \"react-router-dom\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Offcanvas } from \"react-bootstrap\";\nimport MealData from \"../../../Service/MealData\";\nimport userSession from \"../../../Service/userSession\";\nimport PopUp from \"../../../SharedComponents/PopUp/PopUp\";\nimport StripeBackend from \"../../../Service/StripeBackend\";\nimport OrderAPIService from \"../../../Service/OrderAPIService\";\nimport Payment from \"../../../SharedComponents/PopUp/Payment/Payment\";\nconst ShoppingCart = ({\n  cart,\n  setCart,\n  cartPrice,\n  setCartPrice,\n  mealNumbers,\n  setMealNumbers,\n  setLogIn,\n  numMeals,\n  numMealsSelected,\n  setNumMealsSelected,\n  delivDate,\n}) => {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => {\n    setShow(true);\n  };\n  const navigate = useNavigate();\n\n  const clearCart = () => {\n    setCart([]);\n    const emptyAr = new Array(mealNumbers.length).fill(0);\n    setMealNumbers(emptyAr);\n  };\n  const add = (id) => {\n    setNumMealsSelected((numMealsSelected) => numMealsSelected + 1);\n    setCartPrice(\n      (cartPrice) =>\n        Math.round(\n          (cartPrice + MealData.getMeals()[id].price + Number.EPSILON) * 100\n        ) / 100\n    );\n    mealNumbers[id]++;\n\n    const tempAr = [];\n\n    mealNumbers.map((item) => {\n      tempAr.push(item);\n    });\n\n    setMealNumbers(tempAr);\n  };\n  const remove = (id) => {\n    if (mealNumbers[id] > 0) {\n      setNumMealsSelected((numMealsSelected) => numMealsSelected - 1);\n      setCartPrice(\n        (cartPrice) =>\n          Math.round(\n            (cartPrice - MealData.getMeals()[id].price + Number.EPSILON) * 100\n          ) / 100\n      );\n      mealNumbers[id]--;\n      const tempAr = [];\n\n      mealNumbers.map((item) => {\n        tempAr.push(item);\n      });\n\n      setMealNumbers(tempAr);\n\n      if (mealNumbers[id] === 0) {\n        const tempCart = [];\n\n        cart.forEach((element) => {\n          if (element.id !== id) {\n            tempCart.push(element);\n          }\n        });\n\n        setCart(tempCart);\n      }\n    }\n  };\n\n  // log in warnin\n  const [displayPopUp, setDisplayPopUp] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const [displayEnoughPopUp, setDisplayEnoughPopUp] = useState(false);\n  const [titleEnough, setTitleEnough] = useState(\"\");\n  const [bodyEnough, setBodyEnough] = useState(\"\");\n\n  /**\n   * send Data to DB for DA purporses\n   * STRIP INTEGRATION\n   */\n  const handleCheckOut = () => {\n    console.log(`numMeals:: ${numMeals};;; Selected::: ${numMealsSelected}`);\n    // not enough meals selected\n    if (numMeals === \"12+ Meals\" && numMealsSelected < 12) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough(<p>Select at least 12 meals</p>);\n      setDisplayEnoughPopUp(true);\n    } else if (parseInt(numMeals[0]) > numMealsSelected) {\n      setTitleEnough(\"Not Enough Meals selected!!\");\n      setBodyEnough(<p>Select at least {numMeals[0]} meals</p>);\n      setDisplayEnoughPopUp(true);\n    } else if (!userSession.isLoggedIn()) {\n      setTitle(\"LogIn/SignUp\");\n\n      setBody(\n        <div\n          className=\"container align-items-center d-flex justify-content-center\"\n          style={{ fontFamily: \"Signika\" }}\n        >\n          <form style={{ padding: \"20px\" }} className=\"rounded\">\n            <Row className=\"\">\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputEmail1\" className=\"mb-4\">\n                  <p className=\"lead\">Log in or Sign Up to continue</p>\n                </label>\n              </div>\n            </Row>\n\n            <div className=\"container text-center mb-4\">\n              <LogInPopUP\n                style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n                setLogIn={setLogIn}\n              />\n            </div>\n\n            <div className=\"container text-center\">\n              {/* <Button variant=\"dark\" className=\"\">\n                Log In\n              </Button> */}\n              <SignUpPopUp\n                style={{ buttonColor: \"secondary\", textColor: \"white\" }}\n                setLogIn={setLogIn}\n              />\n            </div>\n          </form>\n        </div>\n      );\n      setDisplayPopUp(true);\n    } else {\n      document.getElementById(\"hiddenPaymentButton\").click();\n    }\n  };\n\n  return (\n    <Nav style={{ marginTop: \"8px\" }}>\n      <button\n        className=\"bg-light text-dark\"\n        style={{\n          border: \"0px\",\n          height: \"34px\",\n          width: \"56.67px\",\n          padding: \"inherit\",\n          borderRadius: \"10px\",\n          marginRight: \"17px\",\n          marginBottom: \"5px\",\n          boxShadow: \"2px 1px 3px black\",\n        }}\n        onClick={handleShow}\n      >\n        <i\n          className=\"bi bi-cart3\"\n          style={{\n            marginBottom: \"12px\",\n            borderRadius: \"10px\",\n            height: \"36px\",\n          }}\n        ></i>\n      </button>\n      {cart.length !== 0 ? (\n        <Offcanvas\n          show={show}\n          onHide={handleClose}\n          placement=\"end\"\n          style={{ fontFamily: \"Signika\", height: \"46%\" }}\n        >\n          <Offcanvas.Header closeButton>\n            <Offcanvas.Title className=\"d-flex align-items-center justify-content-center\">\n              Shopping Cart\n            </Offcanvas.Title>\n          </Offcanvas.Header>\n          <Offcanvas.Body>\n            <Container>\n              {cart.map((item) => {\n                return (\n                  <Row key={item.id}>\n                    <Col style={{ marginLeft: \"100px\", marginTop: \"10px\" }}>\n                      <span>{mealNumbers[item.id]} </span>\n                      <span>{item.mealName}</span>\n                      <br></br>\n                      <button\n                        variant=\"light\"\n                        onClick={() => remove(item.id)}\n                        style={{\n                          borderRadius: \"30px\",\n                          border: \"0px\",\n                          backgroundColor: \"rgb(247, 193, 68)\",\n                        }}\n                      >\n                        <span\n                          className=\"material-symbols-outlined\"\n                          style={{ padding: \"0px\" }}\n                        >\n                          remove\n                        </span>\n                      </button>\n\n                      <span\n                        style={{\n                          fontSize: \"40px\",\n                          paddingLeft: \"20px\",\n                          paddingRight: \"15px\",\n                        }}\n                      >\n                        {mealNumbers[item.id]}\n                      </span>\n\n                      <button\n                        variant=\"light\"\n                        onClick={() => add(item.id)}\n                        style={{\n                          borderRadius: \"30px\",\n                          border: \"0px\",\n                          backgroundColor: \"rgb(247, 193, 68)\",\n                        }}\n                      >\n                        <span\n                          className=\"material-symbols-outlined\"\n                          style={{ padding: \"4px\" }}\n                        >\n                          add\n                        </span>\n                      </button>\n                    </Col>\n                  </Row>\n                );\n              })}\n            </Container>\n            <h3 className=\"text-center mt-5\">{`${\n              \"Total Price $\" + cartPrice\n            }`}</h3>\n            <div className=\"h-50 d-flex align-items-center justify-content-center\">\n              <button\n                onClick={() => {\n                  setCartPrice(0);\n                  clearCart();\n                  handleClose();\n                }}\n                className=\"text-dark\"\n                style={{\n                  backgroundColor: \"rgb(247, 193, 68)\",\n                  border: \"0px\",\n                  height: \"45px\",\n                  width: \"145px\",\n                  borderRadius: \"25px\",\n                  fontSize: \"20px\",\n                }}\n              >\n                Clear Order\n              </button>\n\n              {/* <Link to=\"/checkOut\" style={{ marginLeft: \"24px\" }}> */}\n              <button\n                onClick={() => handleCheckOut()}\n                className=\"text-dark\"\n                style={{\n                  backgroundColor: \"rgb(247, 193, 68)\",\n                  border: \"0px\",\n                  height: \"45px\",\n                  width: \"145px\",\n                  borderRadius: \"25px\",\n                  fontSize: \"20px\",\n                }}\n              >\n                Check Out\n              </button>\n              {/* </Link> */}\n            </div>\n          </Offcanvas.Body>\n        </Offcanvas>\n      ) : (\n        <Offcanvas\n          show={show}\n          onHide={handleClose}\n          placement=\"end\"\n          style={{ fontFamily: \"Signika\", height: \"30%\" }}\n        >\n          <Offcanvas.Header closeButton>\n            <Offcanvas.Title className=\"d-flex align-items-center justify-content-center\">\n              Shopping Cart\n            </Offcanvas.Title>\n          </Offcanvas.Header>\n          <Offcanvas.Body>\n            <p className=\"text-center\">Empty Cart Order Now</p>\n            <div className=\"h-100 d-flex align-items-center justify-content-center\">\n              <button\n                onClick={() => {\n                  handleClose();\n                  navigate(\"/order\");\n                }}\n                className=\"text-dark\"\n                style={{\n                  backgroundColor: \"rgb(247, 193, 68)\",\n                  border: \"0px\",\n                  height: \"45px\",\n                  width: \"145px\",\n                  borderRadius: \"25px\",\n                  fontSize: \"20px\",\n                }}\n              >\n                Order Now\n              </button>\n            </div>\n          </Offcanvas.Body>\n        </Offcanvas>\n      )}\n\n      {/* login warning */}\n      {!userSession.isLoggedIn() && (\n        <PopUp\n          displayPopUp={displayPopUp}\n          setDisplayPopUp={setDisplayPopUp}\n          title={title}\n          body={body}\n        />\n      )}\n\n      <PopUp\n        displayPopUp={displayEnoughPopUp}\n        setDisplayPopUp={setDisplayEnoughPopUp}\n        title={titleEnough}\n        body={bodyEnough}\n      />\n\n     \n      <Payment\n        cart={cart}\n        setCart={setCart}\n        mealNumbers={mealNumbers}\n        cartPrice={cartPrice}\n        setCartPrice={setCartPrice}\n        setNumMealsSelected={setNumMealsSelected}\n        delivDate={delivDate}\n      />\n    </Nav>\n  );\n};\n\nexport default ShoppingCart;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/MealsLookUp/MealsLookUp.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/Testimonials/Testimonials.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/AccountInfo/AccountInfo.js",["524","525"],[],"// makes APIcall\nimport UserApiService from \"../../Service/UserApiService\";\nimport { useEffect } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport userSession from \"../../Service/userSession\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nconst AccountInfo = ({ show, setShow }) => {\n  // email value displayed on inputfield\n  const [email, setEmail] = useState(userSession.getUser().emailAddress);\n\n  // toggle password visibility\n  const [eyeIcon, setEyeIcon] = useState(<i className=\"bi bi-eye\"></i>);\n\n  // passwd displayed on input field\n  const [userPassword, setUserPassword] = useState(\n    userSession.getUser().password\n  );\n\n  /**\n   * closed without saving\n   * set email and pass to what original was original email and password were\n   */\n  const handleClose = () => {\n    localStorage.removeItem(\"Loading\");\n    disableEmail();\n    disablePassword();\n    setEmail(userSession.getUser().emailAddress);\n    setUserPassword(userSession.getUser().password);\n    setShow(false);\n  };\n\n  /**\n   * case 1: both fields are empty\n   * case 2: nothing is changed\n   * case 3: email is missing\n   * case 4: password is missing\n   * API call made and local session should be updated with updated Info\n   */\n  const handleSubmit = () => {\n    // both fields empty\n    if (\n      (email.length === 0 && userPassword.length === 0) ||\n      (email === userSession.getUser().emailAddress &&\n        userPassword === userSession.getUser().password)\n    ) {\n      setEmail(userSession.getUser().emailAddress);\n      setUserPassword(userSession.getUser().password);\n    } else if (email.length === 0) {\n      setEmail(userSession.getUser().emailAddress);\n      // perform API work to update password\n      // check if email is really changed\n    } else if (userPassword.length === 0) {\n      setUserPassword(userSession.getUser().password);\n      // perform API work to update email\n      // check if password is really changed\n    } else {\n      const currentUserInfo = userSession.getUser();\n      const toBeUpdated = {\n        id: currentUserInfo.id,\n        userName: email,\n        password: userPassword,\n      };\n\n      // if any error happens roll back to caching method\n      // const temp = {\n      //   email: email,\n      //   pass: userPassword,\n      // };\n      // userSession.cache(temp);\n      UserApiService.updateUser(toBeUpdated)\n        .then((response) => {\n          localStorage.removeItem(\"Loading\");\n          if (response.status === 200) {\n            const updatedUser = {\n              id: currentUserInfo.id,\n              fname: currentUserInfo.fname,\n              lname: currentUserInfo.lname,\n              emailAddress: email,\n              password: userPassword,\n            };\n\n            // user session updated to new user\n            userSession.addUser(updatedUser);\n\n            // if any error happens roll back to caching method\n            // userSession.removeCache();\n\n            handleClose();\n          } else if (response.status === 501) {\n            console.log(\"INTERNAL ERR ON SERVER SIDE...\");\n          } else {\n            console.log(\"NO CHANGES MADE! \");\n          }\n        })\n        .catch((err) => {\n          localStorage.removeItem(\"Loading\");\n          console.log(\"ERROR::: \" + err);\n        });\n      // API call to update both email and password\n    }\n    setShow(false);\n  };\n\n  const disableEmail = () => {\n    const element = document.getElementById(\"emailAddressChange\");\n    element.setAttribute(\"disabled\", true);\n  };\n  const enableEmail = () => {\n    const element = document.getElementById(\"emailAddressChange\");\n    if (element.hasAttribute(\"disabled\")) {\n      element.removeAttribute(\"disabled\");\n    }\n  };\n\n  const disablePassword = () => {\n    const element = document.getElementById(\"passwordChange\");\n    element.setAttribute(\"disabled\", true);\n  };\n  const enablePassword = () => {\n    const element = document.getElementById(\"passwordChange\");\n    if (element.hasAttribute(\"disabled\")) {\n      element.removeAttribute(\"disabled\");\n    }\n  };\n\n  const passwordVisibility = () => {\n    const element = document.getElementById(\"passwordChange\");\n    if (element.type === \"text\") {\n      // hide\n      setEyeIcon(<i className=\"bi bi-eye\"></i>);\n      element.type = \"password\";\n    } else {\n      // show\n      setEyeIcon(<i className=\"bi bi-eye-slash\"></i>);\n      element.type = \"text\";\n    }\n  };\n\n  return (\n    <Modal show={show} onHide={handleClose} style={{ fontFamily: \"Signika\" }}>\n      <Modal.Header closeButton style={{ textAlign: \"center\" }}>\n        <Modal.Title>Account Info</Modal.Title>\n      </Modal.Header>\n\n      <Modal.Body>\n        <p className=\"lead\">\n          <span>{userSession.getUser().fname} </span>\n          <span>{userSession.getUser().lname}</span>\n        </p>\n        <form>\n          <div className=\"mb-3\">\n            <label htmlFor=\"email\" className=\"col-form-label\">\n              <span style={{ color: \"black\" }}>Email</span>\n            </label>\n            <Button\n              variant=\"light\"\n              style={{\n                height: \"21px\",\n                width: \"26px\",\n                padding: \"1px\",\n                fontSize: \"small\",\n                marginLeft: \"10px\",\n              }}\n              onClick={enableEmail}\n            >\n              <i className=\"bi bi-pencil\"></i>\n            </Button>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"emailAddressChange\"\n              value={email}\n              disabled\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"userPassword\" className=\"col-form-label\">\n              <span style={{ color: \"black\" }}>Password</span>\n            </label>\n            <Button\n              variant=\"light\"\n              style={{\n                height: \"21px\",\n                width: \"26px\",\n                padding: \"1px\",\n                fontSize: \"small\",\n                marginLeft: \"10px\",\n              }}\n              onClick={passwordVisibility}\n            >\n              {eyeIcon}\n            </Button>\n            <Button\n              variant=\"light\"\n              style={{\n                height: \"21px\",\n                width: \"26px\",\n                padding: \"1px\",\n                fontSize: \"small\",\n                marginLeft: \"10px\",\n              }}\n              onClick={enablePassword}\n            >\n              <i className=\"bi bi-pencil\"></i>\n            </Button>\n\n            <input\n              type=\"password\"\n              className=\"form-control\"\n              id=\"passwordChange\"\n              value={userPassword}\n              disabled\n              onChange={(e) => setUserPassword(e.target.value)}\n            />\n          </div>\n        </form>\n      </Modal.Body>\n\n      <Modal.Footer>\n        <Button variant=\"light\" onClick={handleClose}>\n          <span className=\"text-dark\">Close</span>\n        </Button>\n        {/* Submit Button Clicked */}\n        <Button variant=\"light\" onClick={handleSubmit}>\n          {localStorage.getItem(\"Loading\") ? (\n            <span className=\"text-dark\">Loading...</span>\n          ) : (\n            <span className=\"text-dark\">Save</span>\n          )}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default AccountInfo;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/Service/StripeBackend.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/NavBar/UserProfile/UserProfile.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/OrderPage/DeliveryDate/DeliveryDate.js",["526"],[],"import { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport React from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nconst DeliveryDate = ({ delivDate, setDelivDate }) => {\n  const isSaturday = () => {\n    return new Date().getDay() === 6;\n  };\n\n  const isSunday = () => {\n    return new Date().getDay() === 0;\n  };\n  const [mins, setmins] = useState();\n  useEffect(() => {\n    // Have timer IF today == saturday\n    if (isSaturday()) {\n      const interval = setInterval(() => {\n        setmins(new Date().getSeconds());\n        console.log(\"In Deliv Date Component\");\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, []);\n\n  // 4 upcoming sundays\n  const sundays = () => {\n    const today = new Date();\n    const ar = [];\n    let dayToday = today.getDay();\n    let diff = (7 - dayToday) % 7;\n    // today = first sunday\n    today.setDate(today.getDate() + diff);\n\n    // saturday & after 11:59AM\n    const saturdayCondition =\n      isSaturday() &&\n      new Date().toLocaleTimeString(\"en-US\").split(\" \")[1] === \"PM\";\n\n    let numSundays;\n    // if sunday OR (saturday AND time after 11:59 AM EST)\n    if (isSunday() || saturdayCondition) {\n      numSundays = 4;\n      today.setDate(today.getDate() + 7);\n    } else {\n      numSundays = 3;\n      ar.push(\"Sunday: \" + today.toLocaleDateString());\n      today.setDate(today.getDate() + 7);\n    }\n\n    for (let i = 0; i < numSundays; i++) {\n      ar.push(\"Sunday: \" + today.toLocaleDateString());\n      today.setDate(today.getDate() + 7);\n    }\n    return ar;\n  };\n\n\n  \n  return (\n    <div>\n      <Dropdown>\n        <Dropdown.Toggle\n          variant=\"dark\"\n          id=\"dropdown-basic\"\n          style={{ height: \"50px\", width: \"161px\" }}\n        >\n          <span className=\"text-primary\">{delivDate}</span>\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {sundays().map((item) => {\n            return (\n              <Dropdown.Item key = {item} onClick={() => setDelivDate(item)}>\n                <span>{item}</span>\n              </Dropdown.Item>\n            );\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n  );\n};\n\nexport default DeliveryDate;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/Service/HotelAPIService.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/Service/MealData.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/SharedComponents/PopUp/PopUp.js",["527"],[],"import { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport React from \"react\";\n\nconst PopUp = ({displayPopUp,setDisplayPopUp,title,body}) => {\n  return (\n    <Modal\n          show={displayPopUp}\n          onHide={() => setDisplayPopUp(false)}\n          style={{ fontFamily: \"Signika\" }}\n        >\n          <Modal.Header closeButton style={{ textAlign: \"center\" }}>\n            <Modal.Title>{title}</Modal.Title>\n          </Modal.Header>\n\n          <Modal.Body>{body}</Modal.Body>\n\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => setDisplayPopUp(false)}>\n              <span className=\"text-primary\">Close</span>\n            </Button>\n          </Modal.Footer>\n        </Modal>\n  );\n};\n\nexport default PopUp;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/OrderPage/ZipCode/ZipCode.js",["528"],[],"import React from 'react'\nimport './ZipCode.css'; \n\nconst ZipCode = ({zipCode, setZipCode}) => {\n  return (\n    <div className=\"bg-second  p-5\" id = \"Newsletter\" style={{marginTop:\"-40px\", marginBottom:\"10px\"}}>\n      <div className=\"container\" >\n        <div className=\"d-md-flex justify-content-between align-items-center\">\n          <h3 className=\"mb-3 mb-md-0\"></h3>\n\n          <div className=\"input-group news-input\" style={{boxShadow:\"10px 10px 10px black\", borderRadius:\"8px\"}}>\n            <input type=\"number\" min = '0' max='9999' className=\"form-control\" placeholder=\"Enter Zip Code\" value = {zipCode} style={{textAlign:\"center\"}} onChange = {(e)=>setZipCode(e.target.value)}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ZipCode;","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/Service/OrderAPIService.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/NavBar/SignUpPopUp/SignUpPopUp.js",["529"],[],"import { Link } from \"react-router-dom\";\nimport { Form } from \"react-bootstrap\";\nimport UserApiService from \"../../../Service/UserApiService\";\n/***\n * Will call backend API to register user\n */\n\nimport userSession from \"../../../Service/userSession\";\nimport \"./SignUp.css\";\nimport React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\nfunction SignUpPopUp({ style, setLogIn }) {\n  // display pop up\n  const [display, setDisplay] = useState(false);\n\n  // states for firstName, firstNameLabel\n  const [firstName, setFirstName] = useState(\"\");\n  const [firstNameLabel, setFirstNameLabel] = useState(\n    <label htmlFor=\"first-name\" className=\"col-form-label\">\n      <span style={{ color: \"black\" }}>\n        First Name <span style={{ color: \"red\" }}>*</span>\n      </span>\n    </label>\n  );\n\n  // states for lastName, lastNameLabel\n  const [lastName, setLastName] = useState(\"\");\n  const [lastNameLabel, setLastNameLabel] = useState(\n    <label htmlFor=\"last-name\" className=\"col-form-label\">\n      <span style={{ color: \"black\" }}>\n        Last Name <span style={{ color: \"red\" }}>*</span>\n      </span>\n    </label>\n  );\n\n  // states for email, emailLabel\n  const [email, setEmail] = useState(\"\");\n  const [emailLabel, setEmailLabel] = useState(\n    <label htmlFor=\"email\" className=\"col-form-label\">\n      <span style={{ color: \"black\" }}>\n        Email <span style={{ color: \"red\" }}>*</span>\n      </span>\n    </label>\n  );\n  // states for password, passwordLabel\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [userPasswordLabel, setUserPasswordLabel] = useState(\n    <label htmlFor=\"userPassword\" className=\"col-form-label\">\n      <span style={{ color: \"black\" }}>\n        Create Password <span style={{ color: \"red\" }}>*</span>\n      </span>\n    </label>\n  );\n\n  // states for phone, phoneLabel\n  const [phone, setPhone] = useState(\"\");\n  const [phoneLabel, setPhoneLabel] = useState(\n    <label htmlFor=\"phone\" className=\"col-form-label\">\n      <span style={{ color: \"black\" }}>\n        Phone <span style={{ color: \"red\" }}>*</span>\n      </span>\n    </label>\n  );\n\n  // restores labels to black text and replace ** with *\n  // for eg. First Name ** in red will become First Name * in black\n  const resetLabels = () => {\n    setFirstNameLabel(\n      <label htmlFor=\"first-name\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          First Name <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n    setLastNameLabel(\n      <label htmlFor=\"last-name\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          Last Name <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n    setEmailLabel(\n      <label htmlFor=\"email\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          Email <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n\n    setUserPasswordLabel(\n      <label htmlFor=\"userPassword\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          Create Password <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n\n    setPhoneLabel(\n      <label htmlFor=\"phone\" className=\"col-form-label\">\n        <span style={{ color: \"black\" }}>\n          Phone <span style={{ color: \"red\" }}>*</span>\n        </span>\n      </label>\n    );\n  };\n\n  // resets state of data\n  const resetData = () => {\n    setFirstName(\"\");\n    setLastName(\"\");\n    setUserPassword(\"\");\n    setEmail(\"\");\n    setPhone(\"\");\n  };\n\n  // reset data & lables\n  const reset = () => {\n    localStorage.removeItem(\"Loading\");\n    resetLabels();\n    resetData();\n  };\n\n  //reset ALL states of data & CLOSE Pop Up\n  const handleClose = () => {\n    reset();\n    setDisplay(false);\n  };\n\n  const handleDisplay = (e) => {\n    e.preventDefault();\n    setDisplay(true);\n  };\n\n  /** User clicked on submit\n   * all fields were entered\n   * API interaction happens here\n   * Validate email\n   * Store data in DB\n   * get userId and update userInfo global state\n   */\n  const handleSubmit = () => {\n    resetLabels();\n    if (firstName.length === 0) {\n      setFirstNameLabel(\n        <label htmlFor=\"first-name\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            First Name <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else if (lastName.length === 0) {\n      setLastNameLabel(\n        <label htmlFor=\"last-name\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            Last Name <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else if (email.length === 0) {\n      setEmailLabel(\n        <label htmlFor=\"email\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            Email <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else if (phone.length !== 10) {\n      setPhoneLabel(\n        <label htmlFor=\"phone\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            Phone <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else if (userPassword.length === 0) {\n      setUserPasswordLabel(\n        <label htmlFor=\"userPassword\" className=\"col-form-label\">\n          <span style={{ color: \"red\" }}>\n            Create Password <span style={{ color: \"red\" }}>**</span>\n          </span>\n        </label>\n      );\n    } else if (!document.getElementById(\"ageRestriction\").checked) {\n      document.getElementById(\"agreement\").style.color = \"red\";\n    } else {\n      const toBeAdded = {\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: userPassword,\n        phone:phone\n      };\n      UserApiService.registerUser(toBeAdded)\n        .then((response) => {\n          localStorage.removeItem(\"Loading\");\n          if (response.status === 201) {\n            setLogIn(true);\n            const userLoggedIn = {\n              id: response.data,\n              fname: firstName,\n              lname: lastName,\n              emailAddress: email,\n              password: userPassword,\n              phone:phone\n            };\n            userSession.addUser(userLoggedIn);\n            handleClose();\n            console.log(\"SUCCESS ON FRONT END \");\n          } else {\n            console.log(\"FAILURE ON FRONT END \");\n          }\n        })\n        .catch((err) => {\n          localStorage.removeItem(\"Loading\");\n          console.log(\"ERROR::: \" + err);\n        });\n      // IF email valid => following things\n      // store more info on order history\n      // setLogIn(true);\n      // const userLoggedIn = {\n      //   fname: firstName,\n      //   lname: lastName,\n      //   emailAddress: email,\n      //   password: userPassword,\n      // };\n      // userSession.addUser(userLoggedIn);\n      // handleClose();\n\n      // IF email invalid => take some action\n    }\n  };\n\n  return (\n    <>\n      {/* Sign Up Button on Red Box in Showcase */}\n      <button onClick={(e) => handleDisplay(e)} className=\"buttonAdjustments\">\n        <span style={{ color: style.textColor }}>Sign Up</span>\n      </button>\n\n      {/* Content in Pop Up */}\n      <Modal\n        show={display}\n        onHide={handleClose}\n        style={{ fontFamily: \"Signika\" }}\n      >\n        <Modal.Header closeButton style={{ textAlign: \"center\" }}>\n          <Modal.Title>Sign Up</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <p className=\"lead\">Fill out this form and you are all set</p>\n          <form>\n            <div className=\"mb-3\">\n              {firstNameLabel}\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"first-name\"\n                value={firstName}\n                onChange={(e) => setFirstName(e.target.value)}\n              />\n            </div>\n            <div className=\"mb-3\">\n              {lastNameLabel}\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"last-name\"\n                value={lastName}\n                onChange={(e) => setLastName(e.target.value)}\n              />\n            </div>\n            <div className=\"mb-3\">\n              {emailLabel}\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                id=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              {phoneLabel}\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                id=\"phone\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              {userPasswordLabel}\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                id=\"userPassword\"\n                value={userPassword}\n                onChange={(e) => setUserPassword(e.target.value)}\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <p id=\"agreement\">\n                {\" \"}\n                <span style={{ marginRight: \"7px\" }}>\n                  <input type=\"checkbox\" id=\"ageRestriction\" />\n                </span>\n                I am 18 years of age or older and agree to the{\" \"}\n                <Link className=\"text-dark\" to=\"/privacy\">\n                  Privacy Policy\n                </Link>\n                ,{\" \"}\n                <Link className=\"text-dark\" to=\"/terms\">\n                  Terms and Conditions\n                </Link>\n                , and{\" \"}\n                <Link className=\"text-dark\" to=\"/refund\">\n                  Refunds and Cancellation Policy\n                </Link>\n                .\n              </p>\n            </div>\n          </form>\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button variant={style.buttonColor} onClick={handleClose}>\n            <span style={{ color: style.textColor }}>Close</span>\n          </Button>\n          {/* Submit Button Clicked */}\n          <Button variant={style.buttonColor} onClick={handleSubmit}>\n            {localStorage.getItem(\"Loading\") ? (\n              <span style={{ color: style.textColor }}>Loading...</span>\n            ) : (\n              <span style={{ color: style.textColor }}>Submit</span>\n            )}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\nexport default SignUpPopUp;\n","/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/NavBar/LogInPopUp/LogInPopUp.js",["530"],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/components/Home/Testimonials/TestimonialCard.js",[],[],"/Users/rishipatel/Documents/Coding/WebDevelopment/FullStackProjects/TiffinService/MM-backend/MM_Backend/MM-Backend/pureFrontEnd/MM-Pure-FrontEnd/src/Service/UserApiService.js",[],[],{"ruleId":"531","severity":1,"message":"532","line":2,"column":21,"nodeType":"533","messageId":"534","endLine":2,"endColumn":27},{"ruleId":"531","severity":1,"message":"535","line":22,"column":8,"nodeType":"533","messageId":"534","endLine":22,"endColumn":15},{"ruleId":"531","severity":1,"message":"536","line":2,"column":18,"nodeType":"533","messageId":"534","endLine":2,"endColumn":25},{"ruleId":"531","severity":1,"message":"532","line":4,"column":17,"nodeType":"533","messageId":"534","endLine":4,"endColumn":23},{"ruleId":"537","severity":1,"message":"538","line":34,"column":11,"nodeType":"539","endLine":37,"endColumn":13},{"ruleId":"540","severity":1,"message":"541","line":91,"column":6,"nodeType":"542","endLine":91,"endColumn":8,"suggestions":"543"},{"ruleId":"531","severity":1,"message":"544","line":7,"column":8,"nodeType":"533","messageId":"534","endLine":7,"endColumn":21},{"ruleId":"531","severity":1,"message":"545","line":8,"column":8,"nodeType":"533","messageId":"534","endLine":8,"endColumn":22},{"ruleId":"540","severity":1,"message":"546","line":56,"column":6,"nodeType":"542","endLine":56,"endColumn":8,"suggestions":"547"},{"ruleId":"548","severity":1,"message":"549","line":141,"column":28,"nodeType":"550","messageId":"551","endLine":141,"endColumn":30},{"ruleId":"548","severity":1,"message":"549","line":165,"column":30,"nodeType":"550","messageId":"551","endLine":165,"endColumn":32},{"ruleId":"552","severity":1,"message":"553","line":192,"column":3,"nodeType":"554","messageId":"555","endLine":194,"endColumn":4},{"ruleId":"531","severity":1,"message":"556","line":195,"column":10,"nodeType":"533","messageId":"534","endLine":195,"endColumn":22},{"ruleId":"531","severity":1,"message":"557","line":195,"column":24,"nodeType":"533","messageId":"534","endLine":195,"endColumn":39},{"ruleId":"531","severity":1,"message":"558","line":196,"column":10,"nodeType":"533","messageId":"534","endLine":196,"endColumn":22},{"ruleId":"531","severity":1,"message":"559","line":196,"column":24,"nodeType":"533","messageId":"534","endLine":196,"endColumn":39},{"ruleId":"531","severity":1,"message":"560","line":197,"column":10,"nodeType":"533","messageId":"534","endLine":197,"endColumn":21},{"ruleId":"531","severity":1,"message":"561","line":197,"column":23,"nodeType":"533","messageId":"534","endLine":197,"endColumn":37},{"ruleId":"537","severity":1,"message":"538","line":273,"column":21,"nodeType":"539","endLine":273,"endColumn":76},{"ruleId":"531","severity":1,"message":"562","line":13,"column":8,"nodeType":"533","messageId":"534","endLine":13,"endColumn":19},{"ruleId":"540","severity":1,"message":"563","line":35,"column":6,"nodeType":"542","endLine":35,"endColumn":8,"suggestions":"564"},{"ruleId":"531","severity":1,"message":"565","line":1,"column":10,"nodeType":"533","messageId":"534","endLine":1,"endColumn":14},{"ruleId":"531","severity":1,"message":"536","line":14,"column":10,"nodeType":"533","messageId":"534","endLine":14,"endColumn":17},{"ruleId":"531","severity":1,"message":"566","line":234,"column":11,"nodeType":"533","messageId":"534","endLine":234,"endColumn":28},{"ruleId":"531","severity":1,"message":"567","line":252,"column":11,"nodeType":"533","messageId":"534","endLine":252,"endColumn":22},{"ruleId":"531","severity":1,"message":"568","line":12,"column":10,"nodeType":"533","messageId":"534","endLine":12,"endColumn":16},{"ruleId":"569","severity":1,"message":"570","line":23,"column":33,"nodeType":"571","messageId":"572","endLine":23,"endColumn":35},{"ruleId":"540","severity":1,"message":"573","line":36,"column":6,"nodeType":"542","endLine":36,"endColumn":8,"suggestions":"574"},{"ruleId":"537","severity":1,"message":"538","line":57,"column":13,"nodeType":"539","endLine":61,"endColumn":15},{"ruleId":"531","severity":1,"message":"575","line":119,"column":17,"nodeType":"533","messageId":"534","endLine":119,"endColumn":24},{"ruleId":"576","severity":1,"message":"577","line":9,"column":11,"nodeType":"539","endLine":9,"endColumn":40},{"ruleId":"531","severity":1,"message":"578","line":13,"column":10,"nodeType":"533","messageId":"534","endLine":13,"endColumn":14},{"ruleId":"531","severity":1,"message":"579","line":2,"column":10,"nodeType":"533","messageId":"534","endLine":2,"endColumn":14},{"ruleId":null,"fatal":true,"severity":2,"message":"580","line":120,"column":12},{"ruleId":"531","severity":1,"message":"581","line":3,"column":10,"nodeType":"533","messageId":"534","endLine":3,"endColumn":19},{"ruleId":"531","severity":1,"message":"582","line":9,"column":10,"nodeType":"533","messageId":"534","endLine":9,"endColumn":21},{"ruleId":"531","severity":1,"message":"581","line":1,"column":10,"nodeType":"533","messageId":"534","endLine":1,"endColumn":19},{"ruleId":"531","severity":1,"message":"545","line":2,"column":8,"nodeType":"533","messageId":"534","endLine":2,"endColumn":22},{"ruleId":"531","severity":1,"message":"544","line":14,"column":8,"nodeType":"533","messageId":"534","endLine":14,"endColumn":21},{"ruleId":"531","severity":1,"message":"583","line":15,"column":8,"nodeType":"533","messageId":"534","endLine":15,"endColumn":23},{"ruleId":"548","severity":1,"message":"549","line":54,"column":28,"nodeType":"550","messageId":"551","endLine":54,"endColumn":30},{"ruleId":"548","severity":1,"message":"549","line":72,"column":30,"nodeType":"550","messageId":"551","endLine":72,"endColumn":32},{"ruleId":"531","severity":1,"message":"584","line":1,"column":10,"nodeType":"533","messageId":"534","endLine":1,"endColumn":18},{"ruleId":"548","severity":1,"message":"549","line":62,"column":31,"nodeType":"550","messageId":"551","endLine":62,"endColumn":33},{"ruleId":"540","severity":1,"message":"585","line":122,"column":6,"nodeType":"542","endLine":122,"endColumn":19,"suggestions":"586"},{"ruleId":"531","severity":1,"message":"532","line":2,"column":21,"nodeType":"533","messageId":"534","endLine":2,"endColumn":27},{"ruleId":"531","severity":1,"message":"535","line":22,"column":8,"nodeType":"533","messageId":"534","endLine":22,"endColumn":15},{"ruleId":"531","severity":1,"message":"536","line":2,"column":18,"nodeType":"533","messageId":"534","endLine":2,"endColumn":25},{"ruleId":"531","severity":1,"message":"532","line":4,"column":17,"nodeType":"533","messageId":"534","endLine":4,"endColumn":23},{"ruleId":"537","severity":1,"message":"538","line":34,"column":11,"nodeType":"539","endLine":37,"endColumn":13},{"ruleId":"531","severity":1,"message":"562","line":13,"column":8,"nodeType":"533","messageId":"534","endLine":13,"endColumn":19},{"ruleId":"540","severity":1,"message":"563","line":35,"column":6,"nodeType":"542","endLine":35,"endColumn":8,"suggestions":"587"},{"ruleId":"531","severity":1,"message":"565","line":1,"column":10,"nodeType":"533","messageId":"534","endLine":1,"endColumn":14},{"ruleId":"531","severity":1,"message":"536","line":14,"column":10,"nodeType":"533","messageId":"534","endLine":14,"endColumn":17},{"ruleId":"540","severity":1,"message":"541","line":91,"column":6,"nodeType":"542","endLine":91,"endColumn":8,"suggestions":"588"},{"ruleId":"531","severity":1,"message":"544","line":7,"column":8,"nodeType":"533","messageId":"534","endLine":7,"endColumn":21},{"ruleId":"531","severity":1,"message":"545","line":8,"column":8,"nodeType":"533","messageId":"534","endLine":8,"endColumn":22},{"ruleId":"540","severity":1,"message":"546","line":56,"column":6,"nodeType":"542","endLine":56,"endColumn":8,"suggestions":"589"},{"ruleId":"548","severity":1,"message":"549","line":141,"column":28,"nodeType":"550","messageId":"551","endLine":141,"endColumn":30},{"ruleId":"548","severity":1,"message":"549","line":165,"column":30,"nodeType":"550","messageId":"551","endLine":165,"endColumn":32},{"ruleId":"552","severity":1,"message":"553","line":192,"column":3,"nodeType":"554","messageId":"555","endLine":194,"endColumn":4},{"ruleId":"531","severity":1,"message":"556","line":195,"column":10,"nodeType":"533","messageId":"534","endLine":195,"endColumn":22},{"ruleId":"531","severity":1,"message":"557","line":195,"column":24,"nodeType":"533","messageId":"534","endLine":195,"endColumn":39},{"ruleId":"531","severity":1,"message":"558","line":196,"column":10,"nodeType":"533","messageId":"534","endLine":196,"endColumn":22},{"ruleId":"531","severity":1,"message":"559","line":196,"column":24,"nodeType":"533","messageId":"534","endLine":196,"endColumn":39},{"ruleId":"531","severity":1,"message":"560","line":197,"column":10,"nodeType":"533","messageId":"534","endLine":197,"endColumn":21},{"ruleId":"531","severity":1,"message":"561","line":197,"column":23,"nodeType":"533","messageId":"534","endLine":197,"endColumn":37},{"ruleId":"537","severity":1,"message":"538","line":273,"column":21,"nodeType":"539","endLine":273,"endColumn":76},{"ruleId":"531","severity":1,"message":"568","line":12,"column":10,"nodeType":"533","messageId":"534","endLine":12,"endColumn":16},{"ruleId":"531","severity":1,"message":"566","line":234,"column":11,"nodeType":"533","messageId":"534","endLine":234,"endColumn":28},{"ruleId":"531","severity":1,"message":"567","line":252,"column":11,"nodeType":"533","messageId":"534","endLine":252,"endColumn":22},{"ruleId":"569","severity":1,"message":"570","line":23,"column":33,"nodeType":"571","messageId":"572","endLine":23,"endColumn":35},{"ruleId":"540","severity":1,"message":"573","line":36,"column":6,"nodeType":"542","endLine":36,"endColumn":8,"suggestions":"590"},{"ruleId":"537","severity":1,"message":"538","line":57,"column":13,"nodeType":"539","endLine":61,"endColumn":15},{"ruleId":"531","severity":1,"message":"575","line":119,"column":17,"nodeType":"533","messageId":"534","endLine":119,"endColumn":24},{"ruleId":"548","severity":1,"message":"549","line":62,"column":31,"nodeType":"550","messageId":"551","endLine":62,"endColumn":33},{"ruleId":"540","severity":1,"message":"585","line":122,"column":6,"nodeType":"542","endLine":122,"endColumn":19,"suggestions":"591"},{"ruleId":"531","severity":1,"message":"581","line":1,"column":10,"nodeType":"533","messageId":"534","endLine":1,"endColumn":19},{"ruleId":"531","severity":1,"message":"545","line":2,"column":8,"nodeType":"533","messageId":"534","endLine":2,"endColumn":22},{"ruleId":"531","severity":1,"message":"544","line":14,"column":8,"nodeType":"533","messageId":"534","endLine":14,"endColumn":21},{"ruleId":"531","severity":1,"message":"583","line":15,"column":8,"nodeType":"533","messageId":"534","endLine":15,"endColumn":23},{"ruleId":"548","severity":1,"message":"549","line":54,"column":28,"nodeType":"550","messageId":"551","endLine":54,"endColumn":30},{"ruleId":"548","severity":1,"message":"549","line":72,"column":30,"nodeType":"550","messageId":"551","endLine":72,"endColumn":32},{"ruleId":"531","severity":1,"message":"581","line":3,"column":10,"nodeType":"533","messageId":"534","endLine":3,"endColumn":19},{"ruleId":"531","severity":1,"message":"582","line":9,"column":10,"nodeType":"533","messageId":"534","endLine":9,"endColumn":21},{"ruleId":"531","severity":1,"message":"578","line":13,"column":10,"nodeType":"533","messageId":"534","endLine":13,"endColumn":14},{"ruleId":"531","severity":1,"message":"584","line":1,"column":10,"nodeType":"533","messageId":"534","endLine":1,"endColumn":18},{"ruleId":"576","severity":1,"message":"577","line":9,"column":11,"nodeType":"539","endLine":9,"endColumn":40},{"ruleId":"531","severity":1,"message":"579","line":2,"column":10,"nodeType":"533","messageId":"534","endLine":2,"endColumn":14},{"ruleId":"531","severity":1,"message":"592","line":138,"column":13,"nodeType":"533","messageId":"534","endLine":138,"endColumn":25},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Payment' is defined but never used.","'NavItem' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate', 'resetOrderPageInfo', 'setDelivDate', 'setNumMeals', and 'setZipCode'. Either include them or remove the dependency array. If 'setZipCode' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["593"],"'StripeBackend' is defined but never used.","'StripeCheckout' is defined but never used.","React Hook useEffect has missing dependencies: 'data.length', 'mealNumbers.length', 'navigate', 'setMealNumbers', 'setResetOrderPageInfo', and 'zipCode'. Either include them or remove the dependency array. If 'setResetOrderPageInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["594"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'successPopUp' is assigned a value but never used.","'setSuccessPopUp' is assigned a value but never used.","'successTitle' is assigned a value but never used.","'setSuccessTitle' is assigned a value but never used.","'successBody' is assigned a value but never used.","'setSuccessBody' is assigned a value but never used.","'MealsLookUp' is defined but never used.","React Hook useEffect has missing dependencies: 'scrollFAQ' and 'setScrollFAQ'. Either include them or remove the dependency array. If 'setScrollFAQ' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["595"],"'Link' is defined but never used.","'mealQuantityTable' is assigned a value but never used.","'ordersTable' is assigned a value but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'isLoggedIn', 'navigate', and 'orders'. Either include them or remove the dependency array.",["596"],"'OrderId' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'mins' is assigned a value but never used.","'Form' is defined but never used.","Parsing error: Unexpected token (120:12)","'useEffect' is defined but never used.","'useNavigate' is defined but never used.","'OrderAPIService' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'cart', 'cartPrice', 'delivDate', 'mealNumbers', 'setCart', 'setCartPrice', and 'setNumMealsSelected'. Either include them or remove the dependency array. If 'setCart' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["597"],["598"],["599"],["600"],["601"],["602"],"'orderhistory' is assigned a value but never used.",{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"607","fix":"613"},{"desc":"603","fix":"614"},{"desc":"605","fix":"615"},{"desc":"609","fix":"616"},{"desc":"611","fix":"617"},"Update the dependencies array to be: [navigate, resetOrderPageInfo, setDelivDate, setNumMeals, setZipCode]",{"range":"618","text":"619"},"Update the dependencies array to be: [data.length, mealNumbers.length, navigate, setMealNumbers, setResetOrderPageInfo, zipCode]",{"range":"620","text":"621"},"Update the dependencies array to be: [scrollFAQ, setScrollFAQ]",{"range":"622","text":"623"},"Update the dependencies array to be: [isLoggedIn, navigate, orders]",{"range":"624","text":"625"},"Update the dependencies array to be: [cart, cartPrice, delivDate, mealNumbers, setCart, setCartPrice, setNumMealsSelected, stripeToken]",{"range":"626","text":"627"},{"range":"628","text":"623"},{"range":"629","text":"619"},{"range":"630","text":"621"},{"range":"631","text":"625"},{"range":"632","text":"627"},[2931,2933],"[navigate, resetOrderPageInfo, setDelivDate, setNumMeals, setZipCode]",[1956,1958],"[data.length, mealNumbers.length, navigate, setMealNumbers, setResetOrderPageInfo, zipCode]",[915,917],"[scrollFAQ, setScrollFAQ]",[1081,1083],"[isLoggedIn, navigate, orders]",[4448,4461],"[cart, cartPrice, delivDate, mealNumbers, setCart, setCartPrice, setNumMealsSelected, stripeToken]",[915,917],[2931,2933],[1956,1958],[1081,1083],[4448,4461]]